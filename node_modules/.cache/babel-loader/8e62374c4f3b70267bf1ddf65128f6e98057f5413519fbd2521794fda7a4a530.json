{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"login-container\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"discord-layout\"\n};\nconst _hoisted_4 = {\n  class: \"channels-sidebar\"\n};\nconst _hoisted_5 = {\n  class: \"server-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LoginForm = _resolveComponent(\"LoginForm\");\n  const _component_ServerList = _resolveComponent(\"ServerList\");\n  const _component_ChannelList = _resolveComponent(\"ChannelList\");\n  const _component_OnlineUsersSidebar = _resolveComponent(\"OnlineUsersSidebar\");\n  const _component_ChatContainer = _resolveComponent(\"ChatContainer\");\n  const _component_UserProfileEditor = _resolveComponent(\"UserProfileEditor\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.username ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_LoginForm, {\n    onLogin: $options.setUsername\n  }, null, 8 /* PROPS */, [\"onLogin\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" 服务器列表 \"), _createVNode(_component_ServerList, {\n    \"external-servers\": [],\n    \"current-server-id\": $data.currentServerId,\n    onChangeServer: $options.changeServer,\n    onAddServer: $options.showAddServerDialog,\n    onExploreServers: $options.showExploreServers,\n    onOpenSettings: $options.openProfileEditor\n  }, null, 8 /* PROPS */, [\"current-server-id\", \"onChangeServer\", \"onAddServer\", \"onExploreServers\", \"onOpenSettings\"]), _createCommentVNode(\" 频道列表 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h2\", null, _toDisplayString($data.currentServer.name || '服务器'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"server-settings-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.openServerSettings && $options.openServerSettings(...args))\n  }, \" ⚙️ \")]), _createVNode(_component_ChannelList, {\n    \"current-channel-id\": $data.currentChannelId,\n    onSelectChannel: $options.selectChannel\n  }, null, 8 /* PROPS */, [\"current-channel-id\", \"onSelectChannel\"])]), _createCommentVNode(\" 在线用户列表 \"), _createVNode(_component_OnlineUsersSidebar, {\n    onlineUsers: $data.onlineUsers,\n    currentUsername: $data.username,\n    onOpenProfileEditor: $options.openProfileEditor\n  }, null, 8 /* PROPS */, [\"onlineUsers\", \"currentUsername\", \"onOpenProfileEditor\"]), _createCommentVNode(\" 聊天容器 \"), _createVNode(_component_ChatContainer, {\n    currentUser: {\n      username: $data.username,\n      avatar: $data.avatar\n    },\n    \"current-server\": $data.currentServer,\n    \"current-channel\": $data.currentChannel,\n    onUpdateOnlineUsers: $options.updateOnlineUsers,\n    onOpenProfileEditor: $options.openProfileEditor\n  }, null, 8 /* PROPS */, [\"currentUser\", \"current-server\", \"current-channel\", \"onUpdateOnlineUsers\", \"onOpenProfileEditor\"]), _createCommentVNode(\" 个人资料编辑器 \"), $data.showProfileEditor ? (_openBlock(), _createBlock(_component_UserProfileEditor, {\n    key: 0,\n    isOpen: $data.showProfileEditor,\n    onClose: $options.closeProfileEditor,\n    onUpdateProfile: $options.updateProfile\n  }, null, 8 /* PROPS */, [\"isOpen\", \"onClose\", \"onUpdateProfile\"])) : _createCommentVNode(\"v-if\", true)]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","username","_hoisted_2","_createVNode","_component_LoginForm","onLogin","$options","setUsername","_hoisted_3","_createCommentVNode","_component_ServerList","currentServerId","onChangeServer","changeServer","onAddServer","showAddServerDialog","onExploreServers","showExploreServers","onOpenSettings","openProfileEditor","_createElementVNode","_hoisted_4","_hoisted_5","_toDisplayString","currentServer","name","onClick","_cache","args","openServerSettings","_component_ChannelList","currentChannelId","onSelectChannel","selectChannel","_component_OnlineUsersSidebar","onlineUsers","currentUsername","onOpenProfileEditor","_component_ChatContainer","currentUser","avatar","currentChannel","onUpdateOnlineUsers","updateOnlineUsers","showProfileEditor","_createBlock","_component_UserProfileEditor","isOpen","onClose","closeProfileEditor","onUpdateProfile","updateProfile"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div v-if=\"!username\" class=\"login-container\">\n      <LoginForm @login=\"setUsername\" />\n    </div>\n    <div v-else class=\"discord-layout\">\n      <!-- 服务器列表 -->\n      <ServerList \n        :external-servers=\"[]\"\n        :current-server-id=\"currentServerId\"\n        @change-server=\"changeServer\"\n        @add-server=\"showAddServerDialog\"\n        @explore-servers=\"showExploreServers\"\n        @open-settings=\"openProfileEditor\"\n      />\n      \n      <!-- 频道列表 -->\n      <div class=\"channels-sidebar\">\n        <div class=\"server-header\">\n          <h2>{{ currentServer.name || '服务器' }}</h2>\n          <button class=\"server-settings-button\" @click=\"openServerSettings\">\n            ⚙️\n          </button>\n        </div>\n        \n        <ChannelList\n          :current-channel-id=\"currentChannelId\"\n          @select-channel=\"selectChannel\"\n        />\n      </div>\n\n      <!-- 在线用户列表 -->\n      <OnlineUsersSidebar \n        :onlineUsers=\"onlineUsers\" \n        :currentUsername=\"username\"\n        @open-profile-editor=\"openProfileEditor\"\n      />\n      \n      <!-- 聊天容器 -->\n      <ChatContainer \n        :currentUser=\"{ username, avatar }\" \n        :current-server=\"currentServer\"\n        :current-channel=\"currentChannel\"\n        @update-online-users=\"updateOnlineUsers\"\n        @open-profile-editor=\"openProfileEditor\"\n      />\n\n      <!-- 个人资料编辑器 -->\n      <UserProfileEditor\n        v-if=\"showProfileEditor\"\n        :isOpen=\"showProfileEditor\"\n        @close=\"closeProfileEditor\"\n        @update-profile=\"updateProfile\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport LoginForm from './components/auth/LoginForm.vue'\nimport ChatContainer from './components/chat/ChatContainer.vue'\nimport ServerList from './components/chat/ServerList.vue'\nimport OnlineUsersSidebar from './components/chat/OnlineUsersSidebar.vue'\nimport UserProfileEditor from './components/chat/UserProfileEditor.vue'\nimport ChannelList from './components/chat/ChannelList.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    LoginForm,\n    ChatContainer,\n    ServerList,\n    OnlineUsersSidebar,\n    UserProfileEditor,\n    ChannelList\n  },\n  data() {\n    return {\n      username: localStorage.getItem('chat-username') || '',\n      avatar: localStorage.getItem('chat-avatar') || '',\n      showProfileEditor: false,\n      onlineUsers: [],\n      currentServerId: localStorage.getItem('current-server-id') || 'home',\n      currentServer: {\n        id: 'home',\n        name: '主页',\n        description: '欢迎来到聊天室！'\n      },\n      currentChannelId: '',\n      currentChannel: null\n    }\n  },\n  created() {\n    // 从localStorage获取用户信息\n    const savedUsername = localStorage.getItem('chat-username')\n    const savedAvatar = localStorage.getItem('chat-avatar')\n    \n    if (savedUsername) {\n      this.username = savedUsername\n      this.avatar = savedAvatar || ''\n    }\n    \n    // 应用保存的主题\n    const savedTheme = localStorage.getItem('chat-theme') || 'discord'\n    document.body.classList.add(`theme-${savedTheme}`)\n\n    // 恢复上次选择的服务器\n    const savedServerId = localStorage.getItem('current-server-id')\n    if (savedServerId) {\n      this.currentServerId = savedServerId\n    }\n\n    // 初始化默认服务器\n    const servers = this.getServers()\n    if (servers.length === 0) {\n      const defaultServer = this.createNewServer('测试服务器')\n      this.currentServerId = defaultServer.id\n      this.currentServer = defaultServer\n    } else if (this.currentServerId === 'home') {\n      // 如果当前是主页，切换到第一个服务器\n      this.currentServerId = servers[0].id\n      this.currentServer = servers[0]\n    }\n  },\n  methods: {\n    setUsername(userData) {\n      this.username = userData.username\n      this.avatar = userData.avatar || ''\n      \n      // 保存用户信息到localStorage\n      localStorage.setItem('chat-username', this.username)\n      if (this.avatar) {\n        localStorage.setItem('chat-avatar', this.avatar)\n      }\n    },\n    \n    // 更新在线用户列表\n    updateOnlineUsers(users) {\n      this.onlineUsers = users\n    },\n    \n    // 打开个人资料编辑器\n    openProfileEditor() {\n      this.showProfileEditor = true\n    },\n    \n    // 关闭个人资料编辑器\n    closeProfileEditor() {\n      this.showProfileEditor = false\n    },\n    \n    // 更新个人资料\n    updateProfile(updatedProfile) {\n      this.username = updatedProfile.username\n      this.avatar = updatedProfile.avatar\n      this.showProfileEditor = false\n      \n      // 保存到localStorage\n      localStorage.setItem('chat-username', this.username)\n      localStorage.setItem('chat-avatar', this.avatar)\n    },\n\n    // 切换服务器\n    changeServer(server) {\n      this.currentServerId = server.id\n      this.currentServer = server\n      this.currentChannelId = ''\n      this.currentChannel = null\n      \n      // 保存当前服务器ID到localStorage\n      localStorage.setItem('current-server-id', server.id)\n    },\n\n    // 选择频道\n    selectChannel(channel) {\n      this.currentChannelId = channel.id\n      this.currentChannel = channel\n    },\n\n    // 打开服务器设置\n    openServerSettings() {\n      // TODO: 实现服务器设置功能\n      console.log('Opening server settings')\n    },\n\n    // 显示添加服务器对话框\n    showAddServerDialog() {\n      // TODO: 实现添加服务器功能\n      console.log('Opening add server dialog')\n    },\n\n    // 显示服务器浏览\n    showExploreServers() {\n      // TODO: 实现服务器浏览功能\n      console.log('Opening server browser')\n    },\n\n    // 创建新服务器\n    createNewServer(serverName) {\n      const serverId = 'server-' + Date.now()\n      const newServer = {\n        id: serverId,\n        name: serverName,\n        icon: null,\n        description: this.serverTemplate.description,\n        channels: [...this.serverTemplate.channels],\n        roles: [...this.serverTemplate.roles],\n        categories: [...this.serverTemplate.categories],\n        members: [],\n        createdAt: new Date().toISOString(),\n        ownerId: this.username\n      }\n\n      // 保存服务器信息到 localStorage\n      const servers = JSON.parse(localStorage.getItem('chat-servers') || '[]')\n      servers.push(newServer)\n      localStorage.setItem('chat-servers', JSON.stringify(servers))\n\n      return newServer\n    },\n\n    // 获取所有服务器\n    getServers() {\n      return JSON.parse(localStorage.getItem('chat-servers') || '[]')\n    },\n\n    // 更新服务器信息\n    updateServer(server) {\n      const servers = this.getServers()\n      const index = servers.findIndex(s => s.id === server.id)\n      if (index !== -1) {\n        servers[index] = server\n        localStorage.setItem('chat-servers', JSON.stringify(servers))\n      }\n    }\n  }\n}\n</script>\n\n<style>\n/* 全局样式重置 */\n:root {\n  /* Discord's color palette */\n  --background-primary: #36393f;         /* Main chat background */\n  --background-secondary: #2f3136;       /* Sidebar background */\n  --background-tertiary: #202225;        /* Server list background */\n  --background-accent: #4f545c;          /* Hover states */\n  --text-normal: #dcddde;               /* Normal text color */\n  --text-muted: #72767d;                /* Muted text color */\n  --text-link: #00b0f4;                 /* Link color */\n  --header-primary: #fff;               /* Header text color */\n  --interactive-normal: #b9bbbe;        /* Interactive elements */\n  --interactive-hover: #dcddde;         /* Interactive elements on hover */\n  --interactive-active: #fff;           /* Interactive elements when active */\n  --primary-color: #5865f2;             /* Brand color */\n  --online-color: #3ba55d;              /* Online status */\n  --idle-color: #faa81a;                /* Idle status */\n  --dnd-color: #ed4245;                 /* Do not disturb status */\n  --offline-color: #747f8d;             /* Offline status */\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody, html {\n  height: 100%;\n  width: 100%;\n  font-family: 'gg sans', 'Noto Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;  /* Discord's font stack */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: var(--text-normal);\n  background-color: var(--background-tertiary);\n}\n\n#app {\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.app-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  padding: 1rem;\n  background-color: var(--background-tertiary);\n}\n\n/* Discord布局 */\n.discord-layout {\n  display: flex;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  background-color: var(--background-primary);\n}\n\n/* 滚动条样式 */\n::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background-color: transparent;\n}\n\n::-webkit-scrollbar-thumb {\n  background-color: var(--background-accent);\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background-color: var(--interactive-normal);\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .chat-main {\n    flex-direction: column;\n  }\n  \n  .discord-layout {\n    flex-direction: column;\n  }\n  \n  .server-list {\n    width: 100% !important;\n    height: auto !important;\n    flex-direction: row !important;\n    padding: 8px !important;\n  }\n  \n  .server-items {\n    flex-direction: row !important;\n    padding: 0 8px !important;\n  }\n  \n  .server-item {\n    margin-right: 8px !important;\n    margin-bottom: 0 !important;\n  }\n}\n\n/* 动画过渡 */\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.2s ease;\n}\n\n.fade-enter-from, .fade-leave-to {\n  opacity: 0;\n}\n\n/* 按钮基础样式 */\nbutton {\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-family: inherit;\n  padding: 8px 16px;\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 500;\n  transition: background-color 0.2s ease;\n}\n\nbutton:hover {\n  background-color: var(--background-accent);\n}\n\n/* 输入框基础样式 */\ninput, textarea {\n  background-color: var(--background-tertiary);\n  border: none;\n  border-radius: 4px;\n  padding: 10px;\n  color: var(--text-normal);\n  font-size: 14px;\n  outline: none;\n  transition: border-color 0.2s ease;\n}\n\ninput:focus, textarea:focus {\n  box-shadow: 0 0 0 2px var(--primary-color);\n}\n</style>\n\n<style scoped>\n.app-container {\n  height: 100vh;\n  background-color: var(--background-primary);\n}\n\n.discord-layout {\n  display: flex;\n  height: 100vh;\n}\n\n.channels-sidebar {\n  width: 240px;\n  background-color: var(--background-secondary);\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n}\n\n.server-header {\n  height: 48px;\n  padding: 0 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--background-tertiary);\n  background-color: var(--background-secondary);\n}\n\n.server-header h2 {\n  margin: 0;\n  color: var(--header-primary);\n  font-size: 1rem;\n  font-weight: 600;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.server-settings-button {\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  border: none;\n  color: var(--text-muted);\n  font-size: 1.25rem;\n  cursor: pointer;\n  transition: color 0.2s ease;\n}\n\n.server-settings-button:hover {\n  color: var(--text-normal);\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAD5BC,GAAA;EAE0BD,KAAK,EAAC;;;EAFhCC,GAAA;EAKgBD,KAAK,EAAC;;;EAYXA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAe;;;;;;;;uBAjBhCE,mBAAA,CAsDM,OAtDNC,UAsDM,G,CArDQC,KAAA,CAAAC,QAAQ,I,cAApBH,mBAAA,CAEM,OAFNI,UAEM,GADJC,YAAA,CAAkCC,oBAAA;IAAtBC,OAAK,EAAEC,QAAA,CAAAC;EAAW,qC,oBAEhCT,mBAAA,CAiDM,OAjDNU,UAiDM,GAhDJC,mBAAA,WAAc,EACdN,YAAA,CAOEO,qBAAA;IANC,kBAAgB,EAAE,EAAE;IACpB,mBAAiB,EAAEV,KAAA,CAAAW,eAAe;IAClCC,cAAa,EAAEN,QAAA,CAAAO,YAAY;IAC3BC,WAAU,EAAER,QAAA,CAAAS,mBAAmB;IAC/BC,gBAAe,EAAEV,QAAA,CAAAW,kBAAkB;IACnCC,cAAa,EAAEZ,QAAA,CAAAa;yHAGlBV,mBAAA,UAAa,EACbW,mBAAA,CAYM,OAZNC,UAYM,GAXJD,mBAAA,CAKM,OALNE,UAKM,GAJJF,mBAAA,CAA0C,YAAAG,gBAAA,CAAnCvB,KAAA,CAAAwB,aAAa,CAACC,IAAI,2BACzBL,mBAAA,CAES;IAFDxB,KAAK,EAAC,wBAAwB;IAAE8B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEtB,QAAA,CAAAuB,kBAAA,IAAAvB,QAAA,CAAAuB,kBAAA,IAAAD,IAAA,CAAkB;KAAE,MAEnE,E,GAGFzB,YAAA,CAGE2B,sBAAA;IAFC,oBAAkB,EAAE9B,KAAA,CAAA+B,gBAAgB;IACpCC,eAAc,EAAE1B,QAAA,CAAA2B;wEAIrBxB,mBAAA,YAAe,EACfN,YAAA,CAIE+B,6BAAA;IAHCC,WAAW,EAAEnC,KAAA,CAAAmC,WAAW;IACxBC,eAAe,EAAEpC,KAAA,CAAAC,QAAQ;IACzBoC,mBAAmB,EAAE/B,QAAA,CAAAa;sFAGxBV,mBAAA,UAAa,EACbN,YAAA,CAMEmC,wBAAA;IALCC,WAAW;MAAAtC,QAAA,EAAID,KAAA,CAAAC,QAAQ;MAAAuC,MAAA,EAAExC,KAAA,CAAAwC;IAAM;IAC/B,gBAAc,EAAExC,KAAA,CAAAwB,aAAa;IAC7B,iBAAe,EAAExB,KAAA,CAAAyC,cAAc;IAC/BC,mBAAmB,EAAEpC,QAAA,CAAAqC,iBAAiB;IACtCN,mBAAmB,EAAE/B,QAAA,CAAAa;+HAGxBV,mBAAA,aAAgB,EAERT,KAAA,CAAA4C,iBAAiB,I,cADzBC,YAAA,CAKEC,4BAAA;IArDRjD,GAAA;IAkDSkD,MAAM,EAAE/C,KAAA,CAAA4C,iBAAiB;IACzBI,OAAK,EAAE1C,QAAA,CAAA2C,kBAAkB;IACzBC,eAAc,EAAE5C,QAAA,CAAA6C;uEApDzB1C,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}