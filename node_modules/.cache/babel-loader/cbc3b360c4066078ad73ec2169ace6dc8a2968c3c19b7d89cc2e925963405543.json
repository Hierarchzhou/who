{"ast":null,"code":"import EmojiPicker from 'vue3-emoji-picker';\nimport 'vue3-emoji-picker/css';\nexport default {\n  name: 'MessageInput',\n  components: {\n    EmojiPicker\n  },\n  data() {\n    return {\n      message: '',\n      // 存储用户输入的消息\n      showEmojiPicker: false,\n      // 控制表情选择器的显示/隐藏\n      categories: [{\n        name: \"最近使用\",\n        icon: \"🕒\"\n      }, {\n        name: \"表情\",\n        icon: \"😀\"\n      }, {\n        name: \"动物\",\n        icon: \"🐶\"\n      }, {\n        name: \"食物\",\n        icon: \"🍔\"\n      }, {\n        name: \"活动\",\n        icon: \"⚽\"\n      }, {\n        name: \"旅行\",\n        icon: \"🚗\"\n      }, {\n        name: \"物品\",\n        icon: \"💡\"\n      }, {\n        name: \"符号\",\n        icon: \"❤️\"\n      }]\n    };\n  },\n  methods: {\n    // 发送消息\n    sendMessage() {\n      if (this.message.trim()) {\n        this.$emit('send-message', this.message);\n        this.message = '';\n        this.$nextTick(() => {\n          this.$refs.messageInput.focus();\n        });\n      }\n    },\n    // 切换表情选择器的显示/隐藏\n    toggleEmojiPicker(event) {\n      // 阻止事件冒泡，避免立即触发document的点击事件\n      event.stopPropagation();\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    // 处理表情选择\n    onEmojiSelect(emoji) {\n      const textarea = this.$refs.messageInput;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n\n      // 插入表情\n      this.message = this.message.substring(0, start) + emoji.i + this.message.substring(end);\n\n      // 更新光标位置\n      this.$nextTick(() => {\n        textarea.selectionStart = textarea.selectionEnd = start + emoji.i.length;\n        textarea.focus();\n      });\n      this.showEmojiPicker = false;\n    },\n    // 处理点击外部\n    handleClickOutside(e) {\n      if (this.showEmojiPicker && !this.$refs.emojiPicker?.contains(e.target) && !this.$refs.emojiButton?.contains(e.target)) {\n        this.showEmojiPicker = false;\n      }\n    }\n  },\n  mounted() {\n    this.$refs.messageInput.focus();\n    document.addEventListener('click', this.handleClickOutside);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n};","map":{"version":3,"names":["EmojiPicker","name","components","data","message","showEmojiPicker","categories","icon","methods","sendMessage","trim","$emit","$nextTick","$refs","messageInput","focus","toggleEmojiPicker","event","stopPropagation","onEmojiSelect","emoji","textarea","start","selectionStart","end","selectionEnd","substring","i","length","handleClickOutside","e","emojiPicker","contains","target","emojiButton","mounted","document","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\MessageInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-input-container\">\r\n    <!-- 表情按钮 -->\r\n    <button @click=\"toggleEmojiPicker\" class=\"emoji-button\" ref=\"emojiButton\">\r\n      😊\r\n    </button>\r\n    \r\n    <!-- 专业表情选择器 -->\r\n    <div v-if=\"showEmojiPicker\" class=\"emoji-picker-container\" ref=\"emojiPicker\">\r\n      <EmojiPicker \r\n        :native=\"true\"\r\n        :show-skin-tones=\"true\"\r\n        :show-preview=\"true\"\r\n        :show-categories=\"true\"\r\n        :show-search=\"true\"\r\n        @select=\"onEmojiSelect\"\r\n        theme=\"dark\"\r\n        :categories=\"categories\"\r\n        :style=\"{\r\n          '--ep-color-bg': 'var(--background-primary)',\r\n          '--ep-color-border': 'var(--border-color)',\r\n          '--ep-color-sbg': 'var(--background-secondary)',\r\n          '--ep-color-active': 'var(--background-modifier-hover)'\r\n        }\"\r\n      />\r\n    </div>\r\n\r\n    <textarea\r\n      v-model=\"message\"\r\n      @keydown.enter.prevent=\"sendMessage\"\r\n      placeholder=\"输入消息...\"\r\n      class=\"message-input\"\r\n      ref=\"messageInput\"\r\n    ></textarea>\r\n    <button @click=\"sendMessage\" class=\"send-button\">\r\n      发送\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EmojiPicker from 'vue3-emoji-picker'\r\nimport 'vue3-emoji-picker/css'\r\n\r\nexport default {\r\n  name: 'MessageInput',\r\n  components: {\r\n    EmojiPicker\r\n  },\r\n  data() {\r\n    return {\r\n      message: '',  // 存储用户输入的消息\r\n      showEmojiPicker: false,  // 控制表情选择器的显示/隐藏\r\n      categories: [\r\n        {\r\n          name: \"最近使用\",\r\n          icon: \"🕒\"\r\n        },\r\n        {\r\n          name: \"表情\",\r\n          icon: \"😀\"\r\n        },\r\n        {\r\n          name: \"动物\",\r\n          icon: \"🐶\"\r\n        },\r\n        {\r\n          name: \"食物\",\r\n          icon: \"🍔\"\r\n        },\r\n        {\r\n          name: \"活动\",\r\n          icon: \"⚽\"\r\n        },\r\n        {\r\n          name: \"旅行\",\r\n          icon: \"🚗\"\r\n        },\r\n        {\r\n          name: \"物品\",\r\n          icon: \"💡\"\r\n        },\r\n        {\r\n          name: \"符号\",\r\n          icon: \"❤️\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    // 发送消息\r\n    sendMessage() {\r\n      if (this.message.trim()) {\r\n        this.$emit('send-message', this.message);\r\n        this.message = '';\r\n        this.$nextTick(() => {\r\n          this.$refs.messageInput.focus();\r\n        });\r\n      }\r\n    },\r\n    // 切换表情选择器的显示/隐藏\r\n    toggleEmojiPicker(event) {\r\n      // 阻止事件冒泡，避免立即触发document的点击事件\r\n      event.stopPropagation();\r\n      this.showEmojiPicker = !this.showEmojiPicker;\r\n    },\r\n    // 处理表情选择\r\n    onEmojiSelect(emoji) {\r\n      const textarea = this.$refs.messageInput;\r\n      const start = textarea.selectionStart;\r\n      const end = textarea.selectionEnd;\r\n      \r\n      // 插入表情\r\n      this.message = this.message.substring(0, start) + emoji.i + this.message.substring(end);\r\n      \r\n      // 更新光标位置\r\n      this.$nextTick(() => {\r\n        textarea.selectionStart = textarea.selectionEnd = start + emoji.i.length;\r\n        textarea.focus();\r\n      });\r\n      \r\n      this.showEmojiPicker = false;\r\n    },\r\n    // 处理点击外部\r\n    handleClickOutside(e) {\r\n      if (this.showEmojiPicker && \r\n          !this.$refs.emojiPicker?.contains(e.target) && \r\n          !this.$refs.emojiButton?.contains(e.target)) {\r\n        this.showEmojiPicker = false;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$refs.messageInput.focus();\r\n    document.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-input-container {\r\n  display: flex;\r\n  padding: 1rem;\r\n  background-color: var(--input-background); /* 使用主题变量 */\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.message-input {\r\n  flex: 1;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 1.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  color: var(--input-color); /* 使用主题变量 */\r\n  font-size: 0.95rem;\r\n  resize: none;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  transition: all 0.2s ease;\r\n  margin-left: 0.5rem;\r\n}\r\n\r\n.message-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb, 138, 113, 88), 0.2);\r\n}\r\n\r\n.message-input::placeholder {\r\n  color: var(--input-placeholder); /* 使用主题变量 */\r\n  opacity: 0.7;\r\n}\r\n\r\n.send-button {\r\n  margin-left: 0.75rem;\r\n  padding: 0.5rem 1.25rem;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 1.5rem;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: var(--secondary-color);\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.send-button:active {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* 修改表情选择器容器样式 */\r\n.emoji-picker-container {\r\n  position: absolute;\r\n  bottom: 100%;\r\n  left: 0;\r\n  background-color: var(--background-primary);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  margin-bottom: 8px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  width: 320px;\r\n}\r\n\r\n.emoji-category {\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.category-title {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n  color: var(--text-normal);\r\n  padding: 0 8px;\r\n}\r\n\r\n.emoji-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  gap: 8px;\r\n  padding: 0 8px;\r\n}\r\n\r\n.emoji-item {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  padding: 8px;\r\n  border-radius: 4px;\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.emoji-item:hover {\r\n  background-color: var(--background-modifier-hover);\r\n  transform: scale(1.2);\r\n}\r\n\r\n/* 表情按钮样式优化 */\r\n.emoji-button {\r\n  padding: 0.5rem;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  transition: all 0.2s ease;\r\n  margin-right: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.emoji-button:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.emoji-button:focus {\r\n  outline: none;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}