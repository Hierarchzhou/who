{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"profile-editor-container\"\n};\nconst _hoisted_2 = {\n  class: \"profile-editor-header\"\n};\nconst _hoisted_3 = {\n  class: \"avatar-editor\"\n};\nconst _hoisted_4 = {\n  class: \"current-avatar-container\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"avatar-selector\"\n};\nconst _hoisted_7 = {\n  class: \"avatar-options\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  for: \"avatar-upload\",\n  class: \"custom-avatar-label\"\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = {\n  key: 0,\n  class: \"upload-icon\"\n};\nconst _hoisted_13 = {\n  class: \"user-info-editor\"\n};\nconst _hoisted_14 = {\n  class: \"form-group\"\n};\nconst _hoisted_15 = {\n  class: \"form-group\"\n};\nconst _hoisted_16 = {\n  class: \"form-group\"\n};\nconst _hoisted_17 = {\n  class: \"profile-editor-footer\"\n};\nexport function render(_ctx, _cache) {\n  return _ctx.isOpen ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"profile-editor-overlay\",\n    onClick: _cache[12] || (_cache[12] = _withModifiers((...args) => _ctx.closeEditor && _ctx.closeEditor(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 头部 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[13] || (_cache[13] = _createElementVNode(\"h2\", null, \"编辑个人资料\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.closeEditor && _ctx.closeEditor(...args))\n  }, \"×\")]), _createCommentVNode(\" 头像编辑区域 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    src: _ctx.currentAvatar || _ctx.getFallbackAvatarUrl(),\n    alt: \"当前头像\",\n    class: \"current-avatar\",\n    onError: _cache[1] || (_cache[1] = (...args) => _ctx.handleAvatarError && _ctx.handleAvatarError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), _createElementVNode(\"div\", {\n    class: \"avatar-overlay\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.openAvatarSelector && _ctx.openAvatarSelector(...args))\n  }, _cache[14] || (_cache[14] = [_createElementVNode(\"span\", {\n    class: \"change-avatar-text\"\n  }, \"更换头像\", -1 /* HOISTED */)]))]), _createCommentVNode(\" 头像选择器 \"), _ctx.showAvatarSelector ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[16] || (_cache[16] = _createElementVNode(\"h3\", null, \"选择新头像\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_7, [_createCommentVNode(\" 默认头像选项 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.defaultAvatars, (avatar, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"avatar-option\", {\n        selected: _ctx.selectedAvatar === avatar\n      }]),\n      onClick: $event => _ctx.selectAvatar(avatar)\n    }, [_createElementVNode(\"img\", {\n      src: avatar,\n      alt: \"头像选项\",\n      class: \"avatar-img\",\n      onError: _cache[3] || (_cache[3] = (...args) => _ctx.handleAvatarError && _ctx.handleAvatarError(...args))\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_9)], 10 /* CLASS, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 刷新头像按钮 \"), _createElementVNode(\"div\", {\n    class: \"avatar-option refresh-avatar\",\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.regenerateAvatars && _ctx.regenerateAvatars(...args)),\n    title: \"刷新头像选项\"\n  }, _cache[15] || (_cache[15] = [_createElementVNode(\"div\", {\n    class: \"refresh-icon\"\n  }, \"↻\", -1 /* HOISTED */)])), _createCommentVNode(\" 自定义头像上传 \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"avatar-option custom-avatar\", {\n      selected: _ctx.isCustomAvatarSelected\n    }])\n  }, [_createElementVNode(\"label\", _hoisted_10, [_createElementVNode(\"img\", {\n    src: _ctx.customAvatarPreview || _ctx.getFallbackAvatarUrl(),\n    alt: \"自定义头像\",\n    class: \"avatar-img\",\n    onError: _cache[5] || (_cache[5] = (...args) => _ctx.handleAvatarError && _ctx.handleAvatarError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_11), !_ctx.customAvatarPreview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, \"+\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"avatar-upload\",\n    class: \"avatar-upload\",\n    accept: \"image/*\",\n    onChange: _cache[6] || (_cache[6] = (...args) => _ctx.handleAvatarUpload && _ctx.handleAvatarUpload(...args))\n  }, null, 32 /* NEED_HYDRATION */)], 2 /* CLASS */)])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 用户信息编辑区域 \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_cache[17] || (_cache[17] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"用户名\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.username = $event),\n    placeholder: \"输入新的用户名\",\n    class: \"form-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.username]])]), _createElementVNode(\"div\", _hoisted_15, [_cache[19] || (_cache[19] = _createElementVNode(\"label\", {\n    for: \"status\"\n  }, \"状态\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"status\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.status = $event),\n    class: \"form-input\"\n  }, _cache[18] || (_cache[18] = [_createElementVNode(\"option\", {\n    value: \"online\"\n  }, \"在线\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"idle\"\n  }, \"离开\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"dnd\"\n  }, \"请勿打扰\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"invisible\"\n  }, \"隐身\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.status]])]), _createElementVNode(\"div\", _hoisted_16, [_cache[20] || (_cache[20] = _createElementVNode(\"label\", {\n    for: \"bio\"\n  }, \"个人简介\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"bio\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => _ctx.bio = $event),\n    placeholder: \"介绍一下自己吧...\",\n    class: \"form-input bio-input\",\n    rows: \"3\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.bio]])])]), _createCommentVNode(\" 底部按钮 \"), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    class: \"cancel-button\",\n    onClick: _cache[10] || (_cache[10] = (...args) => _ctx.closeEditor && _ctx.closeEditor(...args))\n  }, \"取消\"), _createElementVNode(\"button\", {\n    class: \"save-button\",\n    onClick: _cache[11] || (_cache[11] = (...args) => _ctx.saveProfile && _ctx.saveProfile(...args))\n  }, \"保存更改\")])])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","key","for","_ctx","isOpen","_createElementBlock","onClick","_cache","_withModifiers","args","closeEditor","_createElementVNode","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","src","currentAvatar","getFallbackAvatarUrl","alt","onError","handleAvatarError","_hoisted_5","openAvatarSelector","showAvatarSelector","_hoisted_6","_hoisted_7","_Fragment","_renderList","defaultAvatars","avatar","index","_normalizeClass","selected","selectedAvatar","$event","selectAvatar","_hoisted_9","_hoisted_8","regenerateAvatars","title","isCustomAvatarSelected","_hoisted_10","customAvatarPreview","_hoisted_11","_hoisted_12","type","id","accept","onChange","handleAvatarUpload","_hoisted_13","_hoisted_14","username","placeholder","_hoisted_15","status","value","_hoisted_16","bio","rows","_hoisted_17","saveProfile"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\UserProfileEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-editor-overlay\" v-if=\"isOpen\" @click.self=\"closeEditor\">\r\n    <div class=\"profile-editor-container\">\r\n      <!-- 头部 -->\r\n      <div class=\"profile-editor-header\">\r\n        <h2>编辑个人资料</h2>\r\n        <button class=\"close-button\" @click=\"closeEditor\">×</button>\r\n      </div>\r\n      \r\n      <!-- 头像编辑区域 -->\r\n      <div class=\"avatar-editor\">\r\n        <div class=\"current-avatar-container\">\r\n          <img \r\n            :src=\"currentAvatar || getFallbackAvatarUrl()\" \r\n            alt=\"当前头像\" \r\n            class=\"current-avatar\"\r\n            @error=\"handleAvatarError\"\r\n          />\r\n          <div class=\"avatar-overlay\" @click=\"openAvatarSelector\">\r\n            <span class=\"change-avatar-text\">更换头像</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- 头像选择器 -->\r\n        <div class=\"avatar-selector\" v-if=\"showAvatarSelector\">\r\n          <h3>选择新头像</h3>\r\n          <div class=\"avatar-options\">\r\n            <!-- 默认头像选项 -->\r\n            <div \r\n              v-for=\"(avatar, index) in defaultAvatars\" \r\n              :key=\"index\"\r\n              class=\"avatar-option\"\r\n              :class=\"{ selected: selectedAvatar === avatar }\"\r\n              @click=\"selectAvatar(avatar)\"\r\n            >\r\n              <img \r\n                :src=\"avatar\" \r\n                alt=\"头像选项\" \r\n                class=\"avatar-img\" \r\n                @error=\"handleAvatarError\"\r\n              />\r\n            </div>\r\n            \r\n            <!-- 刷新头像按钮 -->\r\n            <div \r\n              class=\"avatar-option refresh-avatar\"\r\n              @click=\"regenerateAvatars\"\r\n              title=\"刷新头像选项\"\r\n            >\r\n              <div class=\"refresh-icon\">↻</div>\r\n            </div>\r\n            \r\n            <!-- 自定义头像上传 -->\r\n            <div \r\n              class=\"avatar-option custom-avatar\"\r\n              :class=\"{ selected: isCustomAvatarSelected }\"\r\n            >\r\n              <label for=\"avatar-upload\" class=\"custom-avatar-label\">\r\n                <img \r\n                  :src=\"customAvatarPreview || getFallbackAvatarUrl()\" \r\n                  alt=\"自定义头像\" \r\n                  class=\"avatar-img\"\r\n                  @error=\"handleAvatarError\"\r\n                />\r\n                <div class=\"upload-icon\" v-if=\"!customAvatarPreview\">+</div>\r\n              </label>\r\n              <input \r\n                type=\"file\" \r\n                id=\"avatar-upload\" \r\n                class=\"avatar-upload\" \r\n                accept=\"image/*\"\r\n                @change=\"handleAvatarUpload\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 用户信息编辑区域 -->\r\n      <div class=\"user-info-editor\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">用户名</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"username\" \r\n            v-model=\"username\" \r\n            placeholder=\"输入新的用户名\"\r\n            class=\"form-input\"\r\n          />\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"status\">状态</label>\r\n          <select id=\"status\" v-model=\"status\" class=\"form-input\">\r\n            <option value=\"online\">在线</option>\r\n            <option value=\"idle\">离开</option>\r\n            <option value=\"dnd\">请勿打扰</option>\r\n            <option value=\"invisible\">隐身</option>\r\n          </select>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"bio\">个人简介</label>\r\n          <textarea \r\n            id=\"bio\" \r\n            v-model=\"bio\" \r\n            placeholder=\"介绍一下自己吧...\"\r\n            class=\"form-input bio-input\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 底部按钮 -->\r\n      <div class=\"profile-editor-footer\">\r\n        <button class=\"cancel-button\" @click=\"closeEditor\">取消</button>\r\n        <button class=\"save-button\" @click=\"saveProfile\">保存更改</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getRandomDefaultAvatarUrl, getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils';\r\nimport { getRandomAvatarUrl, getRandomDefaultAvatarUrl, getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils';\r\n\r\nexport default {\r\n  name: 'UserProfileEditor',\r\n  props: {\r\n    // 是否显示编辑器\r\n    isOpen: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 当前用户信息\r\n    currentUserInfo: {\r\n      type: Object,\r\n      default: () => ({\r\n        username: '',\r\n        avatar: '',\r\n        status: 'online',\r\n        bio: ''\r\n      })\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      username: '', // 用户名\r\n      currentAvatar: '', // 当前头像\r\n      selectedAvatar: '', // 选中的新头像\r\n      status: 'online', // 用户状态\r\n      bio: '', // 个人简介\r\n      showAvatarSelector: false, // 是否显示头像选择器\r\n      defaultAvatars: [], // 默认头像列表\r\n      customAvatarPreview: null, // 自定义头像预览\r\n      isCustomAvatarSelected: false // 是否选择了自定义头像\r\n    }\r\n  },\r\n  watch: {\r\n    // 监听props变化，更新本地数据\r\n    currentUserInfo: {\r\n      handler(newValue) {\r\n        this.username = newValue.username || '';\r\n        this.currentAvatar = newValue.avatar || '';\r\n        this.selectedAvatar = newValue.avatar || '';\r\n        this.status = newValue.status || 'online';\r\n        this.bio = newValue.bio || '';\r\n      },\r\n      immediate: true, // 组件创建时立即执行\r\n      deep: true\r\n    },\r\n    // 监听isOpen变化，当打开编辑器时生成默认头像\r\n    isOpen(newValue) {\r\n      if (newValue) {\r\n        this.generateDefaultAvatars();\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 关闭编辑器\r\n    closeEditor() {\r\n      this.$emit('close');\r\n      this.showAvatarSelector = false;\r\n    },\r\n    \r\n    // 打开头像选择器\r\n    openAvatarSelector() {\r\n      this.showAvatarSelector = !this.showAvatarSelector;\r\n      if (this.showAvatarSelector && this.defaultAvatars.length === 0) {\r\n        this.generateDefaultAvatars();\r\n      }\r\n    },\r\n    \r\n    // 生成默认头像\r\n    generateDefaultAvatars() {\r\n      // 清空数组\r\n      this.defaultAvatars = [];\r\n      \r\n      // 生成6个随机头像\r\n      for (let i = 0; i < 6; i++) {\r\n        this.defaultAvatars.push(getRandomDefaultAvatarUrl());\r\n      }\r\n      \r\n      // 如果没有选择头像，默认选择第一个\r\n      if (!this.selectedAvatar) {\r\n        this.selectedAvatar = this.defaultAvatars[0];\r\n      }\r\n    },\r\n    \r\n    // 重新生成头像\r\n    regenerateAvatars() {\r\n      this.generateDefaultAvatars();\r\n    },\r\n    \r\n    // 选择头像\r\n    selectAvatar(avatar) {\r\n      this.selectedAvatar = avatar;\r\n      this.isCustomAvatarSelected = false;\r\n    },\r\n    \r\n    // 处理头像上传\r\n    handleAvatarUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n      \r\n      // 检查文件类型\r\n      if (!file.type.match('image.*')) {\r\n        alert('请上传图片文件');\r\n        return;\r\n      }\r\n      \r\n      // 检查文件大小 (限制为 2MB)\r\n      if (file.size > 2 * 1024 * 1024) {\r\n        alert('图片大小不能超过 2MB');\r\n        return;\r\n      }\r\n      \r\n      // 创建文件读取器\r\n      const reader = new FileReader();\r\n      \r\n      // 读取完成后的回调\r\n      reader.onload = (e) => {\r\n        this.customAvatarPreview = e.target.result;\r\n        this.selectedAvatar = e.target.result;\r\n        this.isCustomAvatarSelected = true;\r\n      };\r\n      \r\n      // 读取文件\r\n      reader.readAsDataURL(file);\r\n    },\r\n    \r\n    // 保存个人资料\r\n    saveProfile() {\r\n      // 创建更新后的用户信息对象\r\n      const updatedUserInfo = {\r\n        username: this.username,\r\n        avatar: this.selectedAvatar,\r\n        status: this.status,\r\n        bio: this.bio\r\n      };\r\n      \r\n      // 发送更新事件到父组件\r\n      this.$emit('update-profile', updatedUserInfo);\r\n      \r\n      // 关闭编辑器\r\n      this.closeEditor();\r\n    },\r\n    \r\n    // 获取备用头像URL\r\n    getFallbackAvatarUrl() {\r\n      return getFallbackAvatarUrl();\r\n    },\r\n    \r\n    // 处理头像加载错误\r\n    handleAvatarError(event) {\r\n      handleAvatarError(event);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.profile-editor-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n  backdrop-filter: blur(5px);\r\n}\r\n\r\n.profile-editor-container {\r\n  width: 90%;\r\n  max-width: 500px;\r\n  background-color: var(--chat-background, #36393f);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n  overflow: hidden;\r\n  animation: slideIn 0.3s ease;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n@keyframes slideIn {\r\n  from { transform: translateY(20px); opacity: 0; }\r\n  to { transform: translateY(0); opacity: 1; }\r\n}\r\n\r\n.profile-editor-header {\r\n  padding: 16px;\r\n  background-color: var(--primary-color, #7289da);\r\n  color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.profile-editor-header h2 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  line-height: 1;\r\n}\r\n\r\n.avatar-editor {\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.current-avatar-container {\r\n  position: relative;\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-bottom: 16px;\r\n  border: 3px solid var(--primary-color, #7289da);\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.current-avatar {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.avatar-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.current-avatar-container:hover .avatar-overlay {\r\n  opacity: 1;\r\n}\r\n\r\n.change-avatar-text {\r\n  color: white;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.avatar-selector {\r\n  width: 100%;\r\n  margin-top: 16px;\r\n}\r\n\r\n.avatar-selector h3 {\r\n  margin: 0 0 12px 0;\r\n  font-size: 16px;\r\n  color: var(--text-color, #dcddde);\r\n}\r\n\r\n.avatar-options {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 12px;\r\n  justify-content: center;\r\n}\r\n\r\n.avatar-option {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  border: 2px solid transparent;\r\n  transition: all 0.2s ease;\r\n  position: relative;\r\n}\r\n\r\n.avatar-option:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.avatar-option.selected {\r\n  border-color: var(--primary-color, #7289da);\r\n  box-shadow: 0 0 0 2px rgba(114, 137, 218, 0.3);\r\n}\r\n\r\n.avatar-img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.refresh-avatar {\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.refresh-icon {\r\n  font-size: 24px;\r\n  color: var(--text-color, #dcddde);\r\n  opacity: 0.7;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.refresh-avatar:hover .refresh-icon {\r\n  transform: rotate(180deg);\r\n  opacity: 1;\r\n}\r\n\r\n.custom-avatar {\r\n  position: relative;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.custom-avatar-label {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.upload-icon {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 24px;\r\n  color: var(--text-color, #dcddde);\r\n  opacity: 0.7;\r\n}\r\n\r\n.avatar-upload {\r\n  position: absolute;\r\n  width: 0.1px;\r\n  height: 0.1px;\r\n  opacity: 0;\r\n  overflow: hidden;\r\n  z-index: -1;\r\n}\r\n\r\n.user-info-editor {\r\n  padding: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: var(--text-color, #dcddde);\r\n}\r\n\r\n.form-input {\r\n  width: 100%;\r\n  padding: 10px 12px;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-radius: 4px;\r\n  color: var(--text-color, #dcddde);\r\n  font-size: 14px;\r\n  transition: border-color 0.2s ease;\r\n}\r\n\r\n.form-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color, #7289da);\r\n}\r\n\r\n.bio-input {\r\n  resize: vertical;\r\n  min-height: 80px;\r\n}\r\n\r\n.profile-editor-footer {\r\n  padding: 16px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n  border-top: 1px solid rgba(255, 255, 255, 0.05);\r\n}\r\n\r\n.cancel-button, .save-button {\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.cancel-button {\r\n  background-color: transparent;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  color: var(--text-color, #dcddde);\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: rgba(255, 255, 255, 0.05);\r\n}\r\n\r\n.save-button {\r\n  background-color: var(--primary-color, #7289da);\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: var(--secondary-color, #5c6bc0);\r\n}\r\n</style> "],"mappings":";;EAESA,KAAK,EAAC;AAA0B;;EAE9BA,KAAK,EAAC;AAAuB;;EAM7BA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAA0B;mBAX7C;;EAAAC,GAAA;EAwBaD,KAAK,EAAC;;;EAEJA,KAAK,EAAC;AAAgB;mBA1BrC;mBAAA;;EAyDqBE,GAAG,EAAC,eAAe;EAACF,KAAK,EAAC;;oBAzD/C;;EAAAC,GAAA;EAgEqBD,KAAK,EAAC;;;EAehBA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAY;;EAWlBA,KAAK,EAAC;AAAY;;EAUlBA,KAAK,EAAC;AAAY;;EAapBA,KAAK,EAAC;AAAuB;;SAjHIG,IAAA,CAAAC,MAAM,I,cAAhDC,mBAAA,CAsHM;IAvHRJ,GAAA;IACOD,KAAK,EAAC,wBAAwB;IAAgBM,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAD1DC,cAAA,KAAAC,IAAA,KACiEN,IAAA,CAAAO,WAAA,IAAAP,IAAA,CAAAO,WAAA,IAAAD,IAAA,CAAW;MACxEE,mBAAA,CAoHM,OApHNC,UAoHM,GAnHJC,mBAAA,QAAW,EACXF,mBAAA,CAGM,OAHNG,UAGM,G,4BAFJH,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAA4D;IAApDX,KAAK,EAAC,cAAc;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEN,IAAA,CAAAO,WAAA,IAAAP,IAAA,CAAAO,WAAA,IAAAD,IAAA,CAAW;KAAE,GAAC,E,GAGrDI,mBAAA,YAAe,EACfF,mBAAA,CAkEM,OAlENI,UAkEM,GAjEJJ,mBAAA,CAUM,OAVNK,UAUM,GATJL,mBAAA,CAKE;IAJCM,GAAG,EAAEd,IAAA,CAAAe,aAAa,IAAIf,IAAA,CAAAgB,oBAAoB;IAC3CC,GAAG,EAAC,MAAM;IACVpB,KAAK,EAAC,gBAAgB;IACrBqB,OAAK,EAAAd,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEN,IAAA,CAAAmB,iBAAA,IAAAnB,IAAA,CAAAmB,iBAAA,IAAAb,IAAA,CAAiB;2CAhBrCc,UAAA,GAkBUZ,mBAAA,CAEM;IAFDX,KAAK,EAAC,gBAAgB;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEN,IAAA,CAAAqB,kBAAA,IAAArB,IAAA,CAAAqB,kBAAA,IAAAf,IAAA,CAAkB;kCACpDE,mBAAA,CAA4C;IAAtCX,KAAK,EAAC;EAAoB,GAAC,MAAI,oB,MAIzCa,mBAAA,WAAc,EACqBV,IAAA,CAAAsB,kBAAkB,I,cAArDpB,mBAAA,CAmDM,OAnDNqB,UAmDM,G,4BAlDJf,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAgDM,OAhDNgB,UAgDM,GA/CJd,mBAAA,YAAe,G,kBACfR,mBAAA,CAaMuB,SAAA,QAzClBC,WAAA,CA6BwC1B,IAAA,CAAA2B,cAAc,EA7BtD,CA6BsBC,MAAM,EAAEC,KAAK;yBADvB3B,mBAAA,CAaM;MAXHJ,GAAG,EAAE+B,KAAK;MACXhC,KAAK,EA/BnBiC,eAAA,EA+BoB,eAAe;QAAAC,QAAA,EACD/B,IAAA,CAAAgC,cAAc,KAAKJ;MAAM;MAC5CzB,OAAK,EAAA8B,MAAA,IAAEjC,IAAA,CAAAkC,YAAY,CAACN,MAAM;QAE3BpB,mBAAA,CAKE;MAJCM,GAAG,EAAEc,MAAM;MACZX,GAAG,EAAC,MAAM;MACVpB,KAAK,EAAC,YAAY;MACjBqB,OAAK,EAAAd,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEN,IAAA,CAAAmB,iBAAA,IAAAnB,IAAA,CAAAmB,iBAAA,IAAAb,IAAA,CAAiB;6CAvCzC6B,UAAA,E,yBAAAC,UAAA;kCA2CY1B,mBAAA,YAAe,EACfF,mBAAA,CAMM;IALJX,KAAK,EAAC,8BAA8B;IACnCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEN,IAAA,CAAAqC,iBAAA,IAAArC,IAAA,CAAAqC,iBAAA,IAAA/B,IAAA,CAAiB;IACzBgC,KAAK,EAAC;kCAEN9B,mBAAA,CAAiC;IAA5BX,KAAK,EAAC;EAAc,GAAC,GAAC,oB,IAG7Ba,mBAAA,aAAgB,EAChBF,mBAAA,CAoBM;IAnBJX,KAAK,EAtDnBiC,eAAA,EAsDoB,6BAA6B;MAAAC,QAAA,EACf/B,IAAA,CAAAuC;IAAsB;MAE1C/B,mBAAA,CAQQ,SARRgC,WAQQ,GAPNhC,mBAAA,CAKE;IAJCM,GAAG,EAAEd,IAAA,CAAAyC,mBAAmB,IAAIzC,IAAA,CAAAgB,oBAAoB;IACjDC,GAAG,EAAC,OAAO;IACXpB,KAAK,EAAC,YAAY;IACjBqB,OAAK,EAAAd,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEN,IAAA,CAAAmB,iBAAA,IAAAnB,IAAA,CAAAmB,iBAAA,IAAAb,IAAA,CAAiB;2CA9D3CoC,WAAA,G,CAgEgD1C,IAAA,CAAAyC,mBAAmB,I,cAAnDvC,mBAAA,CAA4D,OAA5DyC,WAA4D,EAAP,GAAC,KAhEtEjC,mBAAA,e,GAkEcF,mBAAA,CAME;IALAoC,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,eAAe;IAClBhD,KAAK,EAAC,eAAe;IACrBiD,MAAM,EAAC,SAAS;IACfC,QAAM,EAAA3C,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEN,IAAA,CAAAgD,kBAAA,IAAAhD,IAAA,CAAAgD,kBAAA,IAAA1C,IAAA,CAAkB;4DAvE3CI,mBAAA,e,GA8EMA,mBAAA,cAAiB,EACjBF,mBAAA,CAgCM,OAhCNyC,WAgCM,GA/BJzC,mBAAA,CASM,OATN0C,WASM,G,4BARJ1C,mBAAA,CAAiC;IAA1BT,GAAG,EAAC;EAAU,GAAC,KAAG,sB,gBACzBS,mBAAA,CAME;IALAoC,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,UAAU;IApFzB,uBAAAzC,MAAA,QAAAA,MAAA,MAAA6B,MAAA,IAqFqBjC,IAAA,CAAAmD,QAAQ,GAAAlB,MAAA;IACjBmB,WAAW,EAAC,SAAS;IACrBvD,KAAK,EAAC;iDAFGG,IAAA,CAAAmD,QAAQ,E,KAMrB3C,mBAAA,CAQM,OARN6C,WAQM,G,4BAPJ7C,mBAAA,CAA8B;IAAvBT,GAAG,EAAC;EAAQ,GAAC,IAAE,sB,gBACtBS,mBAAA,CAKS;IALDqC,EAAE,EAAC,QAAQ;IA7F7B,uBAAAzC,MAAA,QAAAA,MAAA,MAAA6B,MAAA,IA6FuCjC,IAAA,CAAAsD,MAAM,GAAArB,MAAA;IAAEpC,KAAK,EAAC;kCACzCW,mBAAA,CAAkC;IAA1B+C,KAAK,EAAC;EAAQ,GAAC,IAAE,qBACzB/C,mBAAA,CAAgC;IAAxB+C,KAAK,EAAC;EAAM,GAAC,IAAE,qBACvB/C,mBAAA,CAAiC;IAAzB+C,KAAK,EAAC;EAAK,GAAC,MAAI,qBACxB/C,mBAAA,CAAqC;IAA7B+C,KAAK,EAAC;EAAW,GAAC,IAAE,oB,2CAJDvD,IAAA,CAAAsD,MAAM,E,KAQrC9C,mBAAA,CASM,OATNgD,WASM,G,4BARJhD,mBAAA,CAA6B;IAAtBT,GAAG,EAAC;EAAK,GAAC,MAAI,sB,gBACrBS,mBAAA,CAMY;IALVqC,EAAE,EAAC,KAAK;IAxGpB,uBAAAzC,MAAA,QAAAA,MAAA,MAAA6B,MAAA,IAyGqBjC,IAAA,CAAAyD,GAAG,GAAAxB,MAAA;IACZmB,WAAW,EAAC,YAAY;IACxBvD,KAAK,EAAC,sBAAsB;IAC5B6D,IAAI,EAAC;iDAHI1D,IAAA,CAAAyD,GAAG,E,OAQlB/C,mBAAA,UAAa,EACbF,mBAAA,CAGM,OAHNmD,WAGM,GAFJnD,mBAAA,CAA8D;IAAtDX,KAAK,EAAC,eAAe;IAAEM,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAEN,IAAA,CAAAO,WAAA,IAAAP,IAAA,CAAAO,WAAA,IAAAD,IAAA,CAAW;KAAE,IAAE,GACrDE,mBAAA,CAA8D;IAAtDX,KAAK,EAAC,aAAa;IAAEM,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAE,IAAA,KAAEN,IAAA,CAAA4D,WAAA,IAAA5D,IAAA,CAAA4D,WAAA,IAAAtD,IAAA,CAAW;KAAE,MAAI,E,SApH7DI,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}