{"ast":null,"code":"export default {\n  name: 'CreateChannelModal',\n  props: {\n    isOpen: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedType: 'text',\n      // 默认为文字频道\n      channelName: '',\n      channelTopic: '',\n      isPrivate: false\n    };\n  },\n  computed: {\n    isValid() {\n      return this.channelName.trim().length > 0;\n    }\n  },\n  methods: {\n    closeModal() {\n      this.$emit('close');\n    },\n    createChannel() {\n      if (!this.isValid) return;\n      const channelData = {\n        type: this.selectedType,\n        name: this.channelName.trim(),\n        topic: this.channelTopic.trim(),\n        isPrivate: this.isPrivate\n      };\n      this.$emit('create', channelData);\n      this.resetForm();\n      this.closeModal();\n    },\n    resetForm() {\n      this.selectedType = 'text';\n      this.channelName = '';\n      this.channelTopic = '';\n      this.isPrivate = false;\n    }\n  }\n};","map":{"version":3,"names":["name","props","isOpen","type","Boolean","required","data","selectedType","channelName","channelTopic","isPrivate","computed","isValid","trim","length","methods","closeModal","$emit","createChannel","channelData","topic","resetForm"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\components\\chat\\CreateChannelModal.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal-overlay\" v-if=\"isOpen\" @click.self=\"closeModal\">\r\n    <div class=\"modal-container\">\r\n      <!-- 模态框头部 -->\r\n      <div class=\"modal-header\">\r\n        <h2>创建频道</h2>\r\n        <button class=\"close-button\" @click=\"closeModal\">×</button>\r\n      </div>\r\n\r\n      <!-- 模态框内容 -->\r\n      <div class=\"modal-content\">\r\n        <!-- 频道类型选择 -->\r\n        <div class=\"channel-type-selector\">\r\n          <h3>频道类型</h3>\r\n          <div class=\"type-options\">\r\n            <div \r\n              class=\"type-option\" \r\n              :class=\"{ active: selectedType === 'text' }\"\r\n              @click=\"selectedType = 'text'\"\r\n            >\r\n              <span class=\"type-icon\">#</span>\r\n              <div class=\"type-info\">\r\n                <h4>文字频道</h4>\r\n                <p>发送消息、图片和文件</p>\r\n              </div>\r\n            </div>\r\n            <div \r\n              class=\"type-option\" \r\n              :class=\"{ active: selectedType === 'voice' }\"\r\n              @click=\"selectedType = 'voice'\"\r\n            >\r\n              <span class=\"type-icon\">🔊</span>\r\n              <div class=\"type-info\">\r\n                <h4>语音频道</h4>\r\n                <p>语音聊天和视频通话</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 频道设置 -->\r\n        <div class=\"channel-settings\">\r\n          <div class=\"form-group\">\r\n            <label for=\"channelName\">频道名称</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"channelName\"\r\n              v-model=\"channelName\"\r\n              placeholder=\"输入频道名称\"\r\n              class=\"input-field\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"channelTopic\">频道主题（可选）</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"channelTopic\"\r\n              v-model=\"channelTopic\"\r\n              placeholder=\"输入频道主题\"\r\n              class=\"input-field\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"checkbox-label\">\r\n              <input \r\n                type=\"checkbox\" \r\n                v-model=\"isPrivate\"\r\n              />\r\n              <span>设为私密频道</span>\r\n            </label>\r\n            <p class=\"help-text\">只有被邀请的成员才能访问此频道</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 模态框底部 -->\r\n      <div class=\"modal-footer\">\r\n        <button class=\"cancel-button\" @click=\"closeModal\">取消</button>\r\n        <button \r\n          class=\"create-button\" \r\n          :disabled=\"!isValid\"\r\n          @click=\"createChannel\"\r\n        >\r\n          创建频道\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CreateChannelModal',\r\n  props: {\r\n    isOpen: {\r\n      type: Boolean,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      selectedType: 'text',  // 默认为文字频道\r\n      channelName: '',\r\n      channelTopic: '',\r\n      isPrivate: false\r\n    }\r\n  },\r\n  computed: {\r\n    isValid() {\r\n      return this.channelName.trim().length > 0\r\n    }\r\n  },\r\n  methods: {\r\n    closeModal() {\r\n      this.$emit('close')\r\n    },\r\n    createChannel() {\r\n      if (!this.isValid) return\r\n\r\n      const channelData = {\r\n        type: this.selectedType,\r\n        name: this.channelName.trim(),\r\n        topic: this.channelTopic.trim(),\r\n        isPrivate: this.isPrivate\r\n      }\r\n\r\n      this.$emit('create', channelData)\r\n      this.resetForm()\r\n      this.closeModal()\r\n    },\r\n    resetForm() {\r\n      this.selectedType = 'text'\r\n      this.channelName = ''\r\n      this.channelTopic = ''\r\n      this.isPrivate = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-container {\r\n  background-color: var(--background-primary);\r\n  border-radius: 8px;\r\n  width: 480px;\r\n  max-width: 90vw;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.modal-header {\r\n  padding: 16px 24px;\r\n  border-bottom: 1px solid var(--background-tertiary);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal-header h2 {\r\n  margin: 0;\r\n  color: var(--header-primary);\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-muted);\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n  padding: 0;\r\n}\r\n\r\n.close-button:hover {\r\n  color: var(--text-normal);\r\n}\r\n\r\n.modal-content {\r\n  padding: 24px;\r\n}\r\n\r\n.channel-type-selector h3 {\r\n  margin: 0 0 16px;\r\n  color: var(--header-secondary);\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.type-options {\r\n  display: grid;\r\n  gap: 12px;\r\n}\r\n\r\n.type-option {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  padding: 16px;\r\n  background-color: var(--background-secondary);\r\n  border: 2px solid var(--background-tertiary);\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.type-option:hover {\r\n  background-color: var(--background-secondary-alt);\r\n}\r\n\r\n.type-option.active {\r\n  border-color: var(--primary-color);\r\n  background-color: var(--background-secondary-alt);\r\n}\r\n\r\n.type-icon {\r\n  font-size: 24px;\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: var(--background-tertiary);\r\n  border-radius: 50%;\r\n}\r\n\r\n.type-info h4 {\r\n  margin: 0 0 4px;\r\n  color: var(--header-primary);\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.type-info p {\r\n  margin: 0;\r\n  color: var(--text-muted);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.channel-settings {\r\n  margin-top: 24px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  color: var(--header-secondary);\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: var(--background-tertiary);\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: var(--text-normal);\r\n  font-size: 1rem;\r\n}\r\n\r\n.input-field:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px var(--primary-color);\r\n}\r\n\r\n.checkbox-label {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n  color: var(--header-secondary);\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.help-text {\r\n  margin: 4px 0 0 24px;\r\n  color: var(--text-muted);\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 16px 24px;\r\n  border-top: 1px solid var(--background-tertiary);\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n}\r\n\r\n.cancel-button,\r\n.create-button {\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.cancel-button {\r\n  background-color: transparent;\r\n  color: var(--text-normal);\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: var(--background-modifier-hover);\r\n}\r\n\r\n.create-button {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.create-button:hover {\r\n  background-color: var(--primary-color-dark);\r\n}\r\n\r\n.create-button:disabled {\r\n  background-color: var(--primary-color-disabled);\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n</style> "],"mappings":"AA6FA,eAAe;EACbA,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,MAAM;MAAG;MACvBC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACJ,WAAW,CAACK,IAAI,CAAC,CAAC,CAACC,MAAK,GAAI;IAC1C;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,KAAK,CAAC,OAAO;IACpB,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACN,OAAO,EAAE;MAEnB,MAAMO,WAAU,GAAI;QAClBhB,IAAI,EAAE,IAAI,CAACI,YAAY;QACvBP,IAAI,EAAE,IAAI,CAACQ,WAAW,CAACK,IAAI,CAAC,CAAC;QAC7BO,KAAK,EAAE,IAAI,CAACX,YAAY,CAACI,IAAI,CAAC,CAAC;QAC/BH,SAAS,EAAE,IAAI,CAACA;MAClB;MAEA,IAAI,CAACO,KAAK,CAAC,QAAQ,EAAEE,WAAW;MAChC,IAAI,CAACE,SAAS,CAAC;MACf,IAAI,CAACL,UAAU,CAAC;IAClB,CAAC;IACDK,SAASA,CAAA,EAAG;MACV,IAAI,CAACd,YAAW,GAAI,MAAK;MACzB,IAAI,CAACC,WAAU,GAAI,EAAC;MACpB,IAAI,CAACC,YAAW,GAAI,EAAC;MACrB,IAAI,CAACC,SAAQ,GAAI,KAAI;IACvB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}