{"ast":null,"code":"import StickerPicker from './StickerPicker.vue';\nexport default {\n  name: 'MessageInput',\n  components: {\n    StickerPicker\n  },\n  props: {\n    placeholder: {\n      type: String,\n      default: '发送消息...'\n    }\n  },\n  data() {\n    return {\n      message: '',\n      // 存储用户输入的消息\n      showStickerPicker: false // 控制表情选择器的显示/隐藏\n    };\n  },\n  methods: {\n    // 发送消息\n    sendMessage() {\n      if (this.message.trim()) {\n        this.$emit('send-message', this.message);\n        this.message = '';\n        this.$nextTick(() => {\n          this.$refs.messageInput.focus();\n          this.autoResize();\n        });\n      }\n    },\n    // 切换表情选择器的显示/隐藏\n    toggleStickerPicker(event) {\n      event.stopPropagation();\n      this.showStickerPicker = !this.showStickerPicker;\n    },\n    // 处理表情选择\n    onStickerSelect(sticker) {\n      // 发送带有表情包的消息\n      this.$emit('send-message', `[sticker:${sticker.id}]`);\n      this.showStickerPicker = false;\n    },\n    // 处理点击外部\n    handleClickOutside(e) {\n      if (this.showStickerPicker && !this.$refs.stickerPicker?.contains(e.target) && !this.$refs.emojiButton?.contains(e.target)) {\n        this.showStickerPicker = false;\n      }\n    },\n    // 自动调整文本框高度\n    autoResize() {\n      const textarea = this.$refs.messageInput;\n      textarea.style.height = 'auto';\n      textarea.style.height = textarea.scrollHeight + 'px';\n    }\n  },\n  mounted() {\n    this.$refs.messageInput.focus();\n    document.addEventListener('click', this.handleClickOutside);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n};","map":{"version":3,"names":["StickerPicker","name","components","props","placeholder","type","String","default","data","message","showStickerPicker","methods","sendMessage","trim","$emit","$nextTick","$refs","messageInput","focus","autoResize","toggleStickerPicker","event","stopPropagation","onStickerSelect","sticker","id","handleClickOutside","e","stickerPicker","contains","target","emojiButton","textarea","style","height","scrollHeight","mounted","document","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\components\\chat\\MessageInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-input-container\">\r\n    <div class=\"input-wrapper\">\r\n      <!-- 上传按钮 -->\r\n      <button class=\"action-button\" title=\"上传文件\">\r\n        <span class=\"icon\">➕</span>\r\n      </button>\r\n\r\n      <!-- 输入框 -->\r\n      <div class=\"textarea-wrapper\">\r\n        <textarea\r\n          v-model=\"message\"\r\n          @keydown.enter.prevent=\"sendMessage\"\r\n          :placeholder=\"placeholder\"\r\n          class=\"message-input\"\r\n          ref=\"messageInput\"\r\n          rows=\"1\"\r\n          @input=\"autoResize\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <!-- 右侧按钮组 -->\r\n      <div class=\"input-actions\">\r\n        <!-- 表情按钮 -->\r\n        <button \r\n          @click=\"toggleStickerPicker\" \r\n          class=\"action-button\"\r\n          ref=\"emojiButton\"\r\n          title=\"选择表情\"\r\n        >\r\n          <span class=\"icon\">😊</span>\r\n        </button>\r\n\r\n        <!-- 礼物按钮 -->\r\n        <button class=\"action-button\" title=\"发送礼物\">\r\n          <span class=\"icon\">🎁</span>\r\n        </button>\r\n\r\n        <!-- GIF按钮 -->\r\n        <button class=\"action-button\" title=\"选择 GIF\">\r\n          <span class=\"icon\">GIF</span>\r\n        </button>\r\n\r\n        <!-- 发送按钮，仅在有内容时显示 -->\r\n        <button \r\n          v-if=\"message.trim()\"\r\n          @click=\"sendMessage\" \r\n          class=\"action-button send-button\"\r\n          title=\"发送消息\"\r\n        >\r\n          <span class=\"icon\">📨</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 表情包选择器 -->\r\n    <div \r\n      v-if=\"showStickerPicker\" \r\n      class=\"sticker-picker-container\" \r\n      ref=\"stickerPicker\"\r\n    >\r\n      <StickerPicker @select=\"onStickerSelect\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StickerPicker from './StickerPicker.vue'\r\n\r\nexport default {\r\n  name: 'MessageInput',\r\n  components: {\r\n    StickerPicker\r\n  },\r\n  props: {\r\n    placeholder: {\r\n      type: String,\r\n      default: '发送消息...'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      message: '',  // 存储用户输入的消息\r\n      showStickerPicker: false,  // 控制表情选择器的显示/隐藏\r\n    }\r\n  },\r\n  methods: {\r\n    // 发送消息\r\n    sendMessage() {\r\n      if (this.message.trim()) {\r\n        this.$emit('send-message', this.message);\r\n        this.message = '';\r\n        this.$nextTick(() => {\r\n          this.$refs.messageInput.focus();\r\n          this.autoResize();\r\n        });\r\n      }\r\n    },\r\n    // 切换表情选择器的显示/隐藏\r\n    toggleStickerPicker(event) {\r\n      event.stopPropagation();\r\n      this.showStickerPicker = !this.showStickerPicker;\r\n    },\r\n    // 处理表情选择\r\n    onStickerSelect(sticker) {\r\n      // 发送带有表情包的消息\r\n      this.$emit('send-message', `[sticker:${sticker.id}]`);\r\n      this.showStickerPicker = false;\r\n    },\r\n    // 处理点击外部\r\n    handleClickOutside(e) {\r\n      if (this.showStickerPicker && \r\n          !this.$refs.stickerPicker?.contains(e.target) && \r\n          !this.$refs.emojiButton?.contains(e.target)) {\r\n        this.showStickerPicker = false;\r\n      }\r\n    },\r\n    // 自动调整文本框高度\r\n    autoResize() {\r\n      const textarea = this.$refs.messageInput;\r\n      textarea.style.height = 'auto';\r\n      textarea.style.height = textarea.scrollHeight + 'px';\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$refs.messageInput.focus();\r\n    document.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-input-container {\r\n  padding: 0 16px 24px;\r\n  background-color: var(--background-primary);\r\n  position: relative;\r\n}\r\n\r\n.input-wrapper {\r\n  display: flex;\r\n  align-items: flex-end;\r\n  gap: 16px;\r\n  padding: 0 16px;\r\n  background-color: var(--background-secondary);\r\n  border-radius: 8px;\r\n  min-height: 44px;\r\n}\r\n\r\n.textarea-wrapper {\r\n  flex: 1;\r\n  min-height: 44px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.message-input {\r\n  width: 100%;\r\n  max-height: 50vh;\r\n  padding: 11px 0;\r\n  border: none;\r\n  background: transparent;\r\n  color: var(--text-normal);\r\n  font-family: inherit;\r\n  font-size: 16px;\r\n  line-height: 1.375;\r\n  resize: none;\r\n}\r\n\r\n.message-input:focus {\r\n  outline: none;\r\n}\r\n\r\n.message-input::placeholder {\r\n  color: var(--text-muted);\r\n}\r\n\r\n.input-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 10px 0;\r\n}\r\n\r\n.action-button {\r\n  width: 32px;\r\n  height: 32px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: none;\r\n  background: transparent;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  color: var(--interactive-normal);\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.action-button:hover {\r\n  color: var(--interactive-hover);\r\n  background-color: var(--background-accent);\r\n}\r\n\r\n.action-button .icon {\r\n  font-size: 20px;\r\n}\r\n\r\n.send-button {\r\n  color: var(--primary-color);\r\n}\r\n\r\n.send-button:hover {\r\n  color: var(--text-normal);\r\n  background-color: var(--primary-color);\r\n}\r\n\r\n/* 表情选择器容器 */\r\n.sticker-picker-container {\r\n  position: absolute;\r\n  bottom: 100%;\r\n  right: 16px;\r\n  margin-bottom: 8px;\r\n  width: 400px;\r\n  height: 400px;\r\n  background: var(--background-primary);\r\n  border-radius: 8px;\r\n  box-shadow: var(--elevation-stroke),\r\n              var(--elevation-high);\r\n  z-index: 1000;\r\n}\r\n\r\n/* 响应式样式 */\r\n@media (max-width: 768px) {\r\n  .message-input-container {\r\n    padding: 0 8px 16px;\r\n  }\r\n\r\n  .input-wrapper {\r\n    padding: 0 8px;\r\n  }\r\n\r\n  .action-button {\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n\r\n  .action-button .icon {\r\n    font-size: 18px;\r\n  }\r\n\r\n  .message-input {\r\n    font-size: 14px;\r\n  }\r\n}\r\n</style> "],"mappings":"AAmEA,OAAOA,aAAY,MAAO,qBAAoB;AAE9C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MAAG;MACdC,iBAAiB,EAAE,KAAK,CAAG;IAC7B;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,CAAC,EAAE;QACvB,IAAI,CAACC,KAAK,CAAC,cAAc,EAAE,IAAI,CAACL,OAAO,CAAC;QACxC,IAAI,CAACA,OAAM,GAAI,EAAE;QACjB,IAAI,CAACM,SAAS,CAAC,MAAM;UACnB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,KAAK,CAAC,CAAC;UAC/B,IAAI,CAACC,UAAU,CAAC,CAAC;QACnB,CAAC,CAAC;MACJ;IACF,CAAC;IACD;IACAC,mBAAmBA,CAACC,KAAK,EAAE;MACzBA,KAAK,CAACC,eAAe,CAAC,CAAC;MACvB,IAAI,CAACZ,iBAAgB,GAAI,CAAC,IAAI,CAACA,iBAAiB;IAClD,CAAC;IACD;IACAa,eAAeA,CAACC,OAAO,EAAE;MACvB;MACA,IAAI,CAACV,KAAK,CAAC,cAAc,EAAE,YAAYU,OAAO,CAACC,EAAE,GAAG,CAAC;MACrD,IAAI,CAACf,iBAAgB,GAAI,KAAK;IAChC,CAAC;IACD;IACAgB,kBAAkBA,CAACC,CAAC,EAAE;MACpB,IAAI,IAAI,CAACjB,iBAAgB,IACrB,CAAC,IAAI,CAACM,KAAK,CAACY,aAAa,EAAEC,QAAQ,CAACF,CAAC,CAACG,MAAM,KAC5C,CAAC,IAAI,CAACd,KAAK,CAACe,WAAW,EAAEF,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC,EAAE;QAC/C,IAAI,CAACpB,iBAAgB,GAAI,KAAK;MAChC;IACF,CAAC;IACD;IACAS,UAAUA,CAAA,EAAG;MACX,MAAMa,QAAO,GAAI,IAAI,CAAChB,KAAK,CAACC,YAAY;MACxCe,QAAQ,CAACC,KAAK,CAACC,MAAK,GAAI,MAAM;MAC9BF,QAAQ,CAACC,KAAK,CAACC,MAAK,GAAIF,QAAQ,CAACG,YAAW,GAAI,IAAI;IACtD;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpB,KAAK,CAACC,YAAY,CAACC,KAAK,CAAC,CAAC;IAC/BmB,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACZ,kBAAkB,CAAC;EAC7D,CAAC;EACDa,aAAaA,CAAA,EAAG;IACdF,QAAQ,CAACG,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACd,kBAAkB,CAAC;EAChE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}