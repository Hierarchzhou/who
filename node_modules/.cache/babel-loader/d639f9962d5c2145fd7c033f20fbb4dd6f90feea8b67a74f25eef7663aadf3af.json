{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"profile-editor\"\n};\nconst _hoisted_2 = {\n  class: \"editor-header\"\n};\nconst _hoisted_3 = {\n  class: \"editor-content\"\n};\nconst _hoisted_4 = {\n  class: \"avatar-section\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"status-options\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"status-label\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = {\n  class: \"editor-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AvatarPicker = _resolveComponent(\"AvatarPicker\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$props.isOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"个人资料\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"close-btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.closeEditor && $setup.closeEditor(...args))\n  }, \"×\")]), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 头像部分 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n    class: \"current-avatar-wrapper\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.openAvatarPicker && $setup.openAvatarPicker(...args))\n  }, [_createElementVNode(\"img\", {\n    src: $setup.currentAvatar || $setup.getFallbackAvatarUrl(),\n    alt: \"当前头像\",\n    class: \"current-avatar\",\n    onError: _cache[1] || (_cache[1] = (...args) => $setup.handleAvatarError && $setup.handleAvatarError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), _cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    class: \"avatar-overlay\"\n  }, [_createElementVNode(\"span\", {\n    class: \"change-text\"\n  }, \"更换头像\")], -1 /* HOISTED */))])]), _createCommentVNode(\" 用户名输入 \"), _createElementVNode(\"div\", _hoisted_6, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", null, [_createElementVNode(\"i\", {\n    class: \"material-icons\"\n  }, \"person\"), _createTextVNode(\" 用户名 \")], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.username = $event),\n    class: \"form-input\",\n    placeholder: \"输入用户名\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]])]), _createCommentVNode(\" 状态选择器 \"), _createElementVNode(\"div\", _hoisted_7, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", null, [_createElementVNode(\"i\", {\n    class: \"material-icons\"\n  }, \"mood\"), _createTextVNode(\" 在线状态 \")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.statusOptions, (text, status) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: status,\n      class: _normalizeClass([\"status-option\", {\n        active: $setup.currentStatus === status\n      }]),\n      onClick: $event => $setup.selectStatus(status)\n    }, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"status-dot\", status])\n    }, null, 2 /* CLASS */), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(text), 1 /* TEXT */)], 10 /* CLASS, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 个人简介输入 \"), _createElementVNode(\"div\", _hoisted_11, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, [_createElementVNode(\"i\", {\n    class: \"material-icons\"\n  }, \"description\"), _createTextVNode(\" 个人简介 \")], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.bio = $event),\n    class: \"form-input bio-input\",\n    placeholder: \"介绍一下自己吧...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.bio]])])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n    class: \"cancel-btn\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.closeEditor && $setup.closeEditor(...args))\n  }, \"取消\"), _createElementVNode(\"button\", {\n    class: \"save-btn\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $setup.saveProfile && $setup.saveProfile(...args))\n  }, \"保存更改\")])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 头像选择器 \"), $setup.showAvatarPicker ? (_openBlock(), _createBlock(_component_AvatarPicker, {\n    key: 1,\n    currentAvatar: $setup.currentAvatar,\n    onClose: $setup.closeAvatarPicker,\n    onSelect: $setup.handleAvatarSelected\n  }, null, 8 /* PROPS */, [\"currentAvatar\", \"onClose\", \"onSelect\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_Fragment","$props","isOpen","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","closeEditor","_hoisted_3","_createCommentVNode","_hoisted_4","openAvatarPicker","src","currentAvatar","getFallbackAvatarUrl","alt","onError","handleAvatarError","_hoisted_5","_hoisted_6","_createTextVNode","type","$event","username","placeholder","_hoisted_7","_hoisted_8","_renderList","statusOptions","text","status","_normalizeClass","active","currentStatus","selectStatus","_hoisted_10","_toDisplayString","_hoisted_9","_hoisted_11","bio","_hoisted_12","saveProfile","showAvatarPicker","_createBlock","_component_AvatarPicker","onClose","closeAvatarPicker","onSelect","handleAvatarSelected"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\UserProfileEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-editor\" v-if=\"isOpen\">\r\n    <div class=\"editor-header\">\r\n      <h3>个人资料</h3>\r\n      <button class=\"close-btn\" @click=\"closeEditor\">&times;</button>\r\n    </div>\r\n    \r\n    <div class=\"editor-content\">\r\n      <!-- 头像部分 -->\r\n      <div class=\"avatar-section\">\r\n        <div class=\"current-avatar-wrapper\" @click=\"openAvatarPicker\">\r\n          <img \r\n            :src=\"currentAvatar || getFallbackAvatarUrl()\" \r\n            alt=\"当前头像\"\r\n            class=\"current-avatar\"\r\n            @error=\"handleAvatarError\"\r\n          />\r\n          <div class=\"avatar-overlay\">\r\n            <span class=\"change-text\">更换头像</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 用户名输入 -->\r\n      <div class=\"form-group\">\r\n        <label>\r\n          <i class=\"material-icons\">person</i>\r\n          用户名\r\n        </label>\r\n        <input \r\n          type=\"text\" \r\n          v-model=\"username\"\r\n          class=\"form-input\"\r\n          placeholder=\"输入用户名\"\r\n        />\r\n      </div>\r\n\r\n      <!-- 状态选择器 -->\r\n      <div class=\"form-group\">\r\n        <label>\r\n          <i class=\"material-icons\">mood</i>\r\n          在线状态\r\n        </label>\r\n        <div class=\"status-options\">\r\n          <div \r\n            v-for=\"(text, status) in statusOptions\" \r\n            :key=\"status\"\r\n            class=\"status-option\"\r\n            :class=\"{ active: currentStatus === status }\"\r\n            @click=\"selectStatus(status)\"\r\n          >\r\n            <span class=\"status-dot\" :class=\"status\"></span>\r\n            <span class=\"status-label\">{{ text }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 个人简介输入 -->\r\n      <div class=\"form-group\">\r\n        <label>\r\n          <i class=\"material-icons\">description</i>\r\n          个人简介\r\n        </label>\r\n        <textarea \r\n          v-model=\"bio\"\r\n          class=\"form-input bio-input\"\r\n          placeholder=\"介绍一下自己吧...\"\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"editor-footer\">\r\n      <button class=\"cancel-btn\" @click=\"closeEditor\">取消</button>\r\n      <button class=\"save-btn\" @click=\"saveProfile\">保存更改</button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- 头像选择器 -->\r\n  <AvatarPicker\r\n    v-if=\"showAvatarPicker\"\r\n    :currentAvatar=\"currentAvatar\"\r\n    @close=\"closeAvatarPicker\"\r\n    @select=\"handleAvatarSelected\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, watch } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport AvatarPicker from './AvatarPicker.vue'\r\nimport { getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils'\r\n\r\nexport default {\r\n  name: 'UserProfileEditor',\r\n  components: { AvatarPicker },\r\n  props: {\r\n    isOpen: Boolean,\r\n    currentUserInfo: {\r\n      type: Object,\r\n      default: () => ({\r\n        username: '',\r\n        avatar: '',\r\n        status: 'online',\r\n        bio: ''\r\n      })\r\n    }\r\n  },\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n    const username = ref('')\r\n    const currentAvatar = ref('')\r\n    const currentStatus = ref('online')\r\n    const bio = ref('')\r\n    const showAvatarPicker = ref(false)\r\n\r\n    // 从 store 获取状态选项\r\n    const statusOptions = computed(() => store.state.userStatus.statusMap)\r\n\r\n    // 监听 props 变化\r\n    watch(() => props.currentUserInfo, (newValue) => {\r\n      username.value = newValue.username || ''\r\n      currentAvatar.value = newValue.avatar || ''\r\n      currentStatus.value = newValue.status || 'online'\r\n      bio.value = newValue.bio || ''\r\n    }, { immediate: true, deep: true })\r\n\r\n    // 选择状态\r\n    const selectStatus = async (status) => {\r\n      currentStatus.value = status\r\n      await store.dispatch('userStatus/setStatus', status)\r\n    }\r\n\r\n    // 处理头像选择\r\n    const handleAvatarSelected = (avatar) => {\r\n      currentAvatar.value = avatar\r\n      showAvatarPicker.value = false\r\n      // 立即更新到服务器\r\n      store.dispatch('userStatus/updateAvatar', { avatar })\r\n    }\r\n\r\n    // 保存资料\r\n    const saveProfile = () => {\r\n      emit('update-profile', {\r\n        username: username.value,\r\n        avatar: currentAvatar.value,\r\n        status: currentStatus.value,\r\n        bio: bio.value\r\n      })\r\n      emit('close')\r\n    }\r\n\r\n    return {\r\n      username,\r\n      currentAvatar,\r\n      currentStatus,\r\n      bio,\r\n      statusOptions,\r\n      showAvatarPicker,\r\n      selectStatus,\r\n      saveProfile,\r\n      closeEditor: () => emit('close'),\r\n      openAvatarPicker: () => showAvatarPicker.value = true,\r\n      closeAvatarPicker: () => showAvatarPicker.value = false,\r\n      handleAvatarSelected,\r\n      handleAvatarError,\r\n      getFallbackAvatarUrl\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.profile-editor {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 90%;\r\n  max-width: 480px;\r\n  background: var(--background-primary);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n}\r\n\r\n.editor-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px 20px;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.editor-header h3 {\r\n  margin: 0;\r\n  color: var(--text-color);\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-muted);\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n  padding: 0;\r\n}\r\n\r\n.editor-content {\r\n  padding: 20px;\r\n}\r\n\r\n.avatar-section {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.current-avatar-wrapper {\r\n  position: relative;\r\n  width: 100px;\r\n  height: 100px;\r\n  cursor: pointer;\r\n}\r\n\r\n.current-avatar {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n\r\n.status-options {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n  gap: 8px;\r\n  margin-top: 8px;\r\n}\r\n\r\n.status-option {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 10px;\r\n  background: var(--background-secondary);\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.status-option:hover {\r\n  background: var(--background-modifier-hover);\r\n}\r\n\r\n.status-option.active {\r\n  background: var(--background-modifier-selected);\r\n}\r\n\r\n.status-dot {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.status-dot.online { background-color: #43b581; }\r\n.status-dot.away { background-color: #faa61a; }\r\n.status-dot.busy { background-color: #f04747; }\r\n.status-dot.invisible { background-color: #747f8d; }\r\n\r\n.status-label {\r\n  color: var(--text-color);\r\n  font-size: 14px;\r\n}\r\n\r\n.editor-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n  padding: 16px 20px;\r\n  border-top: 1px solid var(--border-color);\r\n}\r\n\r\n.cancel-btn, .save-btn {\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.cancel-btn {\r\n  background: var(--background-secondary);\r\n  border: 1px solid var(--border-color);\r\n  color: var(--text-muted);\r\n}\r\n\r\n.save-btn {\r\n  background: var(--brand-color);\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.cancel-btn:hover { background: var(--background-modifier-hover); }\r\n.save-btn:hover { background: var(--brand-color-hover); }\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-bottom: 8px;\r\n  color: var(--text-color);\r\n  font-weight: 500;\r\n}\r\n\r\n.form-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 4px;\r\n  background: var(--background-secondary);\r\n  color: var(--text-color);\r\n  font-size: 14px;\r\n}\r\n\r\n.bio-input {\r\n  min-height: 100px;\r\n  resize: vertical;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}