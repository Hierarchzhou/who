{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"message-list\",\n  ref: \"messageList\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"no-messages\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"message-header\"\n};\nconst _hoisted_5 = {\n  class: \"user-name\"\n};\nconst _hoisted_6 = {\n  class: \"timestamp\"\n};\nconst _hoisted_7 = {\n  class: \"message-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.messages.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" 暂无消息，开始聊天吧！ \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id,\n      class: \"message-item\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString(message.user), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($options.formatTime(message.timestamp)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, _toDisplayString(message.content), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]))], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_hoisted_1","$props","messages","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","message","id","_createElementVNode","_hoisted_4","_hoisted_5","_toDisplayString","user","_hoisted_6","$options","formatTime","timestamp","_hoisted_7","content"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\just-do-it\\src\\components\\chat\\MessageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-list\" ref=\"messageList\">\r\n    <div v-if=\"messages.length === 0\" class=\"no-messages\">\r\n      暂无消息，开始聊天吧！\r\n    </div>\r\n    <div v-else>\r\n      <div v-for=\"message in messages\" :key=\"message.id\" class=\"message-item\">\r\n        <div class=\"message-header\">\r\n          <span class=\"user-name\">{{ message.user }}</span>\r\n          <span class=\"timestamp\">{{ formatTime(message.timestamp) }}</span>\r\n        </div>\r\n        <div class=\"message-content\">\r\n          {{ message.content }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MessageList',\r\n  props: {\r\n    messages: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  watch: {\r\n    // 监听消息数组变化，当有新消息时自动滚动到底部\r\n    messages: {\r\n      handler() {\r\n        this.$nextTick(() => {\r\n          this.scrollToBottom(); // 在DOM更新后滚动到底部\r\n        });\r\n      },\r\n      deep: true // 深度监听数组变化\r\n    }\r\n  },\r\n  mounted() {\r\n    // 组件挂载后滚动到底部\r\n    this.scrollToBottom();\r\n  },\r\n  methods: {\r\n    // 格式化时间戳为友好的时间格式\r\n    formatTime(timestamp) {\r\n      const date = new Date(timestamp);\r\n      const now = new Date();\r\n      const isToday = date.toDateString() === now.toDateString();\r\n      \r\n      // 如果是今天的消息，只显示时间；否则显示日期和时间\r\n      if (isToday) {\r\n        return `${date.getHours()}:${String(date.getMinutes()).padStart(2, '0')}`;\r\n      } else {\r\n        return `${date.getMonth() + 1}/${date.getDate()} ${date.getHours()}:${String(date.getMinutes()).padStart(2, '0')}`;\r\n      }\r\n    },\r\n    \r\n    // 滚动到消息列表底部\r\n    scrollToBottom() {\r\n      if (this.$refs.messageList) {\r\n        const container = this.$refs.messageList;\r\n        container.scrollTop = container.scrollHeight;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-list {\r\n  padding: 1rem;\r\n  height: 70vh; /* 设置固定高度 */\r\n  overflow-y: auto; /* 允许垂直滚动 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  scroll-behavior: smooth; /* 平滑滚动效果 */\r\n  background-color: var(--chat-background); /* 使用主题变量 */\r\n}\r\n\r\n.no-messages {\r\n  text-align: center;\r\n  color: var(--timestamp-color); /* 使用主题变量 */\r\n  margin-top: 2rem;\r\n}\r\n\r\n.message-item {\r\n  margin-bottom: 1rem;\r\n  padding: 0.5rem;\r\n  border-radius: 0.5rem;\r\n  background-color: var(--message-background); /* 使用主题变量 */\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.message-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.user-name {\r\n  font-weight: bold;\r\n  color: var(--username-color); /* 使用主题变量 */\r\n}\r\n\r\n.timestamp {\r\n  font-size: 0.8rem;\r\n  color: var(--timestamp-color); /* 使用主题变量 */\r\n}\r\n\r\n.message-content {\r\n  word-break: break-word;\r\n  color: var(--text-color); /* 使用主题变量 */\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC,cAAc;EAACC,GAAG,EAAC;;;EADhCC,GAAA;EAEsCF,KAAK,EAAC;;;EAF5CE,GAAA;AAAA;;EAOaF,KAAK,EAAC;AAAgB;;EACnBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;EAEpBA,KAAK,EAAC;AAAiB;;uBAVlCG,mBAAA,CAeM,OAfNC,UAeM,GAdOC,MAAA,CAAAC,QAAQ,CAACC,MAAM,U,cAA1BJ,mBAAA,CAEM,OAFNK,UAEM,EAFgD,eAEtD,M,cACAL,mBAAA,CAUM,OAfVM,UAAA,I,kBAMMN,mBAAA,CAQMO,SAAA,QAdZC,WAAA,CAM6BN,MAAA,CAAAC,QAAQ,EAAnBM,OAAO;yBAAnBT,mBAAA,CAQM;MAR4BD,GAAG,EAAEU,OAAO,CAACC,EAAE;MAAEb,KAAK,EAAC;QACvDc,mBAAA,CAGM,OAHNC,UAGM,GAFJD,mBAAA,CAAiD,QAAjDE,UAAiD,EAAAC,gBAAA,CAAtBL,OAAO,CAACM,IAAI,kBACvCJ,mBAAA,CAAkE,QAAlEK,UAAkE,EAAAF,gBAAA,CAAvCG,QAAA,CAAAC,UAAU,CAACT,OAAO,CAACU,SAAS,kB,GAEzDR,mBAAA,CAEM,OAFNS,UAEM,EAAAN,gBAAA,CADDL,OAAO,CAACY,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}