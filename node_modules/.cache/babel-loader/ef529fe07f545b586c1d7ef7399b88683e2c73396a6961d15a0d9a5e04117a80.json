{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"login-container\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"discord-layout\"\n};\nconst _hoisted_4 = {\n  class: \"channels-sidebar\"\n};\nconst _hoisted_5 = {\n  class: \"server-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LoginForm = _resolveComponent(\"LoginForm\");\n  const _component_ServerList = _resolveComponent(\"ServerList\");\n  const _component_ChannelList = _resolveComponent(\"ChannelList\");\n  const _component_OnlineUsersSidebar = _resolveComponent(\"OnlineUsersSidebar\");\n  const _component_ChatContainer = _resolveComponent(\"ChatContainer\");\n  const _component_UserProfileEditor = _resolveComponent(\"UserProfileEditor\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.username ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_LoginForm, {\n    onLogin: $options.setUsername\n  }, null, 8 /* PROPS */, [\"onLogin\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" 服务器列表 \"), _createVNode(_component_ServerList, {\n    \"external-servers\": [],\n    \"current-server-id\": $data.currentServerId,\n    onChangeServer: $options.changeServer,\n    onAddServer: $options.showAddServerDialog,\n    onExploreServers: $options.showExploreServers,\n    onOpenSettings: $options.openProfileEditor\n  }, null, 8 /* PROPS */, [\"current-server-id\", \"onChangeServer\", \"onAddServer\", \"onExploreServers\", \"onOpenSettings\"]), _createCommentVNode(\" 频道列表 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h2\", null, _toDisplayString($data.currentServer.name || '服务器'), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"server-settings-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.openServerSettings && $options.openServerSettings(...args))\n  }, \" ⚙️ \")]), _createVNode(_component_ChannelList, {\n    \"current-channel-id\": $data.currentChannelId,\n    onSelectChannel: $options.selectChannel\n  }, null, 8 /* PROPS */, [\"current-channel-id\", \"onSelectChannel\"])]), _createCommentVNode(\" 在线用户列表 \"), _createVNode(_component_OnlineUsersSidebar, {\n    onlineUsers: $data.onlineUsers,\n    currentUsername: $data.username,\n    onOpenProfileEditor: $options.openProfileEditor\n  }, null, 8 /* PROPS */, [\"onlineUsers\", \"currentUsername\", \"onOpenProfileEditor\"]), _createCommentVNode(\" 聊天容器 \"), _createVNode(_component_ChatContainer, {\n    currentUser: {\n      username: $data.username,\n      avatar: $data.avatar\n    },\n    \"current-server\": $data.currentServer,\n    \"current-channel\": $data.currentChannel,\n    onUpdateOnlineUsers: $options.updateOnlineUsers,\n    onOpenProfileEditor: $options.openProfileEditor\n  }, null, 8 /* PROPS */, [\"currentUser\", \"current-server\", \"current-channel\", \"onUpdateOnlineUsers\", \"onOpenProfileEditor\"]), _createCommentVNode(\" 个人资料编辑器 \"), $data.showProfileEditor ? (_openBlock(), _createBlock(_component_UserProfileEditor, {\n    key: 0,\n    isOpen: $data.showProfileEditor,\n    onClose: $options.closeProfileEditor,\n    onUpdateProfile: $options.updateProfile\n  }, null, 8 /* PROPS */, [\"isOpen\", \"onClose\", \"onUpdateProfile\"])) : _createCommentVNode(\"v-if\", true)]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","username","_hoisted_2","_createVNode","_component_LoginForm","onLogin","$options","setUsername","_hoisted_3","_createCommentVNode","_component_ServerList","currentServerId","onChangeServer","changeServer","onAddServer","showAddServerDialog","onExploreServers","showExploreServers","onOpenSettings","openProfileEditor","_createElementVNode","_hoisted_4","_hoisted_5","_toDisplayString","currentServer","name","onClick","_cache","args","openServerSettings","_component_ChannelList","currentChannelId","onSelectChannel","selectChannel","_component_OnlineUsersSidebar","onlineUsers","currentUsername","onOpenProfileEditor","_component_ChatContainer","currentUser","avatar","currentChannel","onUpdateOnlineUsers","updateOnlineUsers","showProfileEditor","_createBlock","_component_UserProfileEditor","isOpen","onClose","closeProfileEditor","onUpdateProfile","updateProfile"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div v-if=\"!username\" class=\"login-container\">\r\n      <LoginForm @login=\"setUsername\" />\r\n    </div>\r\n    <div v-else class=\"discord-layout\">\r\n      <!-- 服务器列表 -->\r\n      <ServerList \r\n        :external-servers=\"[]\"\r\n        :current-server-id=\"currentServerId\"\r\n        @change-server=\"changeServer\"\r\n        @add-server=\"showAddServerDialog\"\r\n        @explore-servers=\"showExploreServers\"\r\n        @open-settings=\"openProfileEditor\"\r\n      />\r\n      \r\n      <!-- 频道列表 -->\r\n      <div class=\"channels-sidebar\">\r\n        <div class=\"server-header\">\r\n          <h2>{{ currentServer.name || '服务器' }}</h2>\r\n          <button class=\"server-settings-button\" @click=\"openServerSettings\">\r\n            ⚙️\r\n          </button>\r\n        </div>\r\n        \r\n        <ChannelList\r\n          :current-channel-id=\"currentChannelId\"\r\n          @select-channel=\"selectChannel\"\r\n        />\r\n      </div>\r\n\r\n      <!-- 在线用户列表 -->\r\n      <OnlineUsersSidebar \r\n        :onlineUsers=\"onlineUsers\" \r\n        :currentUsername=\"username\"\r\n        @open-profile-editor=\"openProfileEditor\"\r\n      />\r\n      \r\n      <!-- 聊天容器 -->\r\n      <ChatContainer \r\n        :currentUser=\"{ username, avatar }\" \r\n        :current-server=\"currentServer\"\r\n        :current-channel=\"currentChannel\"\r\n        @update-online-users=\"updateOnlineUsers\"\r\n        @open-profile-editor=\"openProfileEditor\"\r\n      />\r\n\r\n      <!-- 个人资料编辑器 -->\r\n      <UserProfileEditor\r\n        v-if=\"showProfileEditor\"\r\n        :isOpen=\"showProfileEditor\"\r\n        @close=\"closeProfileEditor\"\r\n        @update-profile=\"updateProfile\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LoginForm from './components/auth/LoginForm.vue'\r\nimport ChatContainer from './components/chat/ChatContainer.vue'\r\nimport ServerList from './components/chat/ServerList.vue'\r\nimport OnlineUsersSidebar from './components/chat/OnlineUsersSidebar.vue'\r\nimport UserProfileEditor from './components/chat/UserProfileEditor.vue'\r\nimport ChannelList from './components/chat/ChannelList.vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    LoginForm,\r\n    ChatContainer,\r\n    ServerList,\r\n    OnlineUsersSidebar,\r\n    UserProfileEditor,\r\n    ChannelList\r\n  },\r\n  data() {\r\n    return {\r\n      username: localStorage.getItem('chat-username') || '',\r\n      avatar: localStorage.getItem('chat-avatar') || '',\r\n      showProfileEditor: false,\r\n      onlineUsers: [],\r\n      currentServerId: localStorage.getItem('current-server-id') || 'home',\r\n      currentServer: {\r\n        id: 'home',\r\n        name: '主页',\r\n        description: '欢迎来到聊天室！'\r\n      },\r\n      currentChannelId: '',\r\n      currentChannel: null\r\n    }\r\n  },\r\n  created() {\r\n    // 从localStorage获取用户信息\r\n    const savedUsername = localStorage.getItem('chat-username')\r\n    const savedAvatar = localStorage.getItem('chat-avatar')\r\n    \r\n    if (savedUsername) {\r\n      this.username = savedUsername\r\n      this.avatar = savedAvatar || ''\r\n    }\r\n    \r\n    // 应用保存的主题\r\n    const savedTheme = localStorage.getItem('chat-theme') || 'discord'\r\n    document.body.classList.add(`theme-${savedTheme}`)\r\n\r\n    // 恢复上次选择的服务器\r\n    const savedServerId = localStorage.getItem('current-server-id')\r\n    if (savedServerId) {\r\n      this.currentServerId = savedServerId\r\n    }\r\n\r\n    // 初始化默认服务器\r\n    const servers = this.getServers()\r\n    if (servers.length === 0) {\r\n      const defaultServer = this.createNewServer('测试服务器')\r\n      this.currentServerId = defaultServer.id\r\n      this.currentServer = defaultServer\r\n    } else if (this.currentServerId === 'home') {\r\n      // 如果当前是主页，切换到第一个服务器\r\n      this.currentServerId = servers[0].id\r\n      this.currentServer = servers[0]\r\n    }\r\n  },\r\n  methods: {\r\n    setUsername(userData) {\r\n      this.username = userData.username\r\n      this.avatar = userData.avatar || ''\r\n      \r\n      // 保存用户信息到localStorage\r\n      localStorage.setItem('chat-username', this.username)\r\n      if (this.avatar) {\r\n        localStorage.setItem('chat-avatar', this.avatar)\r\n      }\r\n    },\r\n    \r\n    // 更新在线用户列表\r\n    updateOnlineUsers(users) {\r\n      this.onlineUsers = users\r\n    },\r\n    \r\n    // 打开个人资料编辑器\r\n    openProfileEditor() {\r\n      this.showProfileEditor = true\r\n    },\r\n    \r\n    // 关闭个人资料编辑器\r\n    closeProfileEditor() {\r\n      this.showProfileEditor = false\r\n    },\r\n    \r\n    // 更新个人资料\r\n    updateProfile(updatedProfile) {\r\n      this.username = updatedProfile.username\r\n      this.avatar = updatedProfile.avatar\r\n      this.showProfileEditor = false\r\n      \r\n      // 保存到localStorage\r\n      localStorage.setItem('chat-username', this.username)\r\n      localStorage.setItem('chat-avatar', this.avatar)\r\n    },\r\n\r\n    // 切换服务器\r\n    changeServer(server) {\r\n      this.currentServerId = server.id\r\n      this.currentServer = server\r\n      this.currentChannelId = ''\r\n      this.currentChannel = null\r\n      \r\n      // 保存当前服务器ID到localStorage\r\n      localStorage.setItem('current-server-id', server.id)\r\n    },\r\n\r\n    // 选择频道\r\n    selectChannel(channel) {\r\n      this.currentChannelId = channel.id\r\n      this.currentChannel = channel\r\n    },\r\n\r\n    // 打开服务器设置\r\n    openServerSettings() {\r\n      // TODO: 实现服务器设置功能\r\n      console.log('Opening server settings')\r\n    },\r\n\r\n    // 显示添加服务器对话框\r\n    showAddServerDialog() {\r\n      // TODO: 实现添加服务器功能\r\n      console.log('Opening add server dialog')\r\n    },\r\n\r\n    // 显示服务器浏览\r\n    showExploreServers() {\r\n      // TODO: 实现服务器浏览功能\r\n      console.log('Opening server browser')\r\n    },\r\n\r\n    // 创建新服务器\r\n    createNewServer(serverName) {\r\n      const serverId = 'server-' + Date.now()\r\n      const newServer = {\r\n        id: serverId,\r\n        name: serverName,\r\n        icon: null,\r\n        description: this.serverTemplate.description,\r\n        channels: [...this.serverTemplate.channels],\r\n        roles: [...this.serverTemplate.roles],\r\n        categories: [...this.serverTemplate.categories],\r\n        members: [],\r\n        createdAt: new Date().toISOString(),\r\n        ownerId: this.username\r\n      }\r\n\r\n      // 保存服务器信息到 localStorage\r\n      const servers = JSON.parse(localStorage.getItem('chat-servers') || '[]')\r\n      servers.push(newServer)\r\n      localStorage.setItem('chat-servers', JSON.stringify(servers))\r\n\r\n      return newServer\r\n    },\r\n\r\n    // 获取所有服务器\r\n    getServers() {\r\n      return JSON.parse(localStorage.getItem('chat-servers') || '[]')\r\n    },\r\n\r\n    // 更新服务器信息\r\n    updateServer(server) {\r\n      const servers = this.getServers()\r\n      const index = servers.findIndex(s => s.id === server.id)\r\n      if (index !== -1) {\r\n        servers[index] = server\r\n        localStorage.setItem('chat-servers', JSON.stringify(servers))\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式重置 */\r\n:root {\r\n  /* Discord's color palette */\r\n  --background-primary: #36393f;         /* Main chat background */\r\n  --background-secondary: #2f3136;       /* Sidebar background */\r\n  --background-tertiary: #202225;        /* Server list background */\r\n  --background-accent: #4f545c;          /* Hover states */\r\n  --text-normal: #dcddde;               /* Normal text color */\r\n  --text-muted: #72767d;                /* Muted text color */\r\n  --text-link: #00b0f4;                 /* Link color */\r\n  --header-primary: #fff;               /* Header text color */\r\n  --interactive-normal: #b9bbbe;        /* Interactive elements */\r\n  --interactive-hover: #dcddde;         /* Interactive elements on hover */\r\n  --interactive-active: #fff;           /* Interactive elements when active */\r\n  --primary-color: #5865f2;             /* Brand color */\r\n  --online-color: #3ba55d;              /* Online status */\r\n  --idle-color: #faa81a;                /* Idle status */\r\n  --dnd-color: #ed4245;                 /* Do not disturb status */\r\n  --offline-color: #747f8d;             /* Offline status */\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody, html {\r\n  height: 100%;\r\n  width: 100%;\r\n  font-family: 'gg sans', 'Noto Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;  /* Discord's font stack */\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: var(--text-normal);\r\n  background-color: var(--background-tertiary);\r\n}\r\n\r\n#app {\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.app-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  padding: 1rem;\r\n  background-color: var(--background-tertiary);\r\n}\r\n\r\n/* Discord布局 */\r\n.discord-layout {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-color: var(--background-primary);\r\n}\r\n\r\n/* 滚动条样式 */\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n  height: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background-color: transparent;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: var(--background-accent);\r\n  border-radius: 4px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background-color: var(--interactive-normal);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .chat-main {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .discord-layout {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .server-list {\r\n    width: 100% !important;\r\n    height: auto !important;\r\n    flex-direction: row !important;\r\n    padding: 8px !important;\r\n  }\r\n  \r\n  .server-items {\r\n    flex-direction: row !important;\r\n    padding: 0 8px !important;\r\n  }\r\n  \r\n  .server-item {\r\n    margin-right: 8px !important;\r\n    margin-bottom: 0 !important;\r\n  }\r\n}\r\n\r\n/* 动画过渡 */\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.fade-enter-from, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n/* 按钮基础样式 */\r\nbutton {\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: var(--background-accent);\r\n}\r\n\r\n/* 输入框基础样式 */\r\ninput, textarea {\r\n  background-color: var(--background-tertiary);\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n  color: var(--text-normal);\r\n  font-size: 14px;\r\n  outline: none;\r\n  transition: border-color 0.2s ease;\r\n}\r\n\r\ninput:focus, textarea:focus {\r\n  box-shadow: 0 0 0 2px var(--primary-color);\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n.app-container {\r\n  height: 100vh;\r\n  background-color: var(--background-primary);\r\n}\r\n\r\n.discord-layout {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.channels-sidebar {\r\n  width: 240px;\r\n  background-color: var(--background-secondary);\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.server-header {\r\n  height: 48px;\r\n  padding: 0 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid var(--background-tertiary);\r\n  background-color: var(--background-secondary);\r\n}\r\n\r\n.server-header h2 {\r\n  margin: 0;\r\n  color: var(--header-primary);\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.server-settings-button {\r\n  width: 32px;\r\n  height: 32px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-muted);\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  transition: color 0.2s ease;\r\n}\r\n\r\n.server-settings-button:hover {\r\n  color: var(--text-normal);\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAD5BC,GAAA;EAE0BD,KAAK,EAAC;;;EAFhCC,GAAA;EAKgBD,KAAK,EAAC;;;EAYXA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAe;;;;;;;;uBAjBhCE,mBAAA,CAsDM,OAtDNC,UAsDM,G,CArDQC,KAAA,CAAAC,QAAQ,I,cAApBH,mBAAA,CAEM,OAFNI,UAEM,GADJC,YAAA,CAAkCC,oBAAA;IAAtBC,OAAK,EAAEC,QAAA,CAAAC;EAAW,qC,oBAEhCT,mBAAA,CAiDM,OAjDNU,UAiDM,GAhDJC,mBAAA,WAAc,EACdN,YAAA,CAOEO,qBAAA;IANC,kBAAgB,EAAE,EAAE;IACpB,mBAAiB,EAAEV,KAAA,CAAAW,eAAe;IAClCC,cAAa,EAAEN,QAAA,CAAAO,YAAY;IAC3BC,WAAU,EAAER,QAAA,CAAAS,mBAAmB;IAC/BC,gBAAe,EAAEV,QAAA,CAAAW,kBAAkB;IACnCC,cAAa,EAAEZ,QAAA,CAAAa;yHAGlBV,mBAAA,UAAa,EACbW,mBAAA,CAYM,OAZNC,UAYM,GAXJD,mBAAA,CAKM,OALNE,UAKM,GAJJF,mBAAA,CAA0C,YAAAG,gBAAA,CAAnCvB,KAAA,CAAAwB,aAAa,CAACC,IAAI,2BACzBL,mBAAA,CAES;IAFDxB,KAAK,EAAC,wBAAwB;IAAE8B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEtB,QAAA,CAAAuB,kBAAA,IAAAvB,QAAA,CAAAuB,kBAAA,IAAAD,IAAA,CAAkB;KAAE,MAEnE,E,GAGFzB,YAAA,CAGE2B,sBAAA;IAFC,oBAAkB,EAAE9B,KAAA,CAAA+B,gBAAgB;IACpCC,eAAc,EAAE1B,QAAA,CAAA2B;wEAIrBxB,mBAAA,YAAe,EACfN,YAAA,CAIE+B,6BAAA;IAHCC,WAAW,EAAEnC,KAAA,CAAAmC,WAAW;IACxBC,eAAe,EAAEpC,KAAA,CAAAC,QAAQ;IACzBoC,mBAAmB,EAAE/B,QAAA,CAAAa;sFAGxBV,mBAAA,UAAa,EACbN,YAAA,CAMEmC,wBAAA;IALCC,WAAW;MAAAtC,QAAA,EAAID,KAAA,CAAAC,QAAQ;MAAAuC,MAAA,EAAExC,KAAA,CAAAwC;IAAM;IAC/B,gBAAc,EAAExC,KAAA,CAAAwB,aAAa;IAC7B,iBAAe,EAAExB,KAAA,CAAAyC,cAAc;IAC/BC,mBAAmB,EAAEpC,QAAA,CAAAqC,iBAAiB;IACtCN,mBAAmB,EAAE/B,QAAA,CAAAa;+HAGxBV,mBAAA,aAAgB,EAERT,KAAA,CAAA4C,iBAAiB,I,cADzBC,YAAA,CAKEC,4BAAA;IArDRjD,GAAA;IAkDSkD,MAAM,EAAE/C,KAAA,CAAA4C,iBAAiB;IACzBI,OAAK,EAAE1C,QAAA,CAAA2C,kBAAkB;IACzBC,eAAc,EAAE5C,QAAA,CAAA6C;uEApDzB1C,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}