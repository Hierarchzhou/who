{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: 'ServerList',\n  data() {\n    return {\n      // 从localStorage获取服务器列表\n      localServers: JSON.parse(localStorage.getItem('chat-servers') || '[]'),\n      showCreateDialog: false,\n      currentStep: 1,\n      selectedType: '',\n      serverName: '',\n      serverIcon: null,\n      serverTypes: [{\n        id: 'gaming',\n        name: '游戏社区',\n        description: '创建一个游戏玩家的交流社区',\n        icon: '🎮'\n      }, {\n        id: 'study',\n        name: '学习小组',\n        description: '创建一个学习交流的空间',\n        icon: '📚'\n      }, {\n        id: 'social',\n        name: '社交聊天',\n        description: '创建一个朋友间的聊天空间',\n        icon: '💬'\n      }, {\n        id: 'other',\n        name: '其他',\n        description: '创建一个自定义类型的服务器',\n        icon: '🌟'\n      }]\n    };\n  },\n  props: {\n    // 外部传入的服务器列表\n    externalServers: {\n      type: Array,\n      default: () => []\n    },\n    currentServerId: {\n      type: String,\n      default: 'home'\n    }\n  },\n  computed: {\n    // 合并本地服务器和外部服务器\n    servers() {\n      return [...this.localServers, ...this.externalServers];\n    }\n  },\n  methods: {\n    changeServer(server) {\n      this.$emit('change-server', server);\n    },\n    getServerAcronym(name) {\n      // 获取服务器名称的首字母或第一个字符\n      return name.split(/\\s+/).map(word => word[0]).join('').slice(0, 2).toUpperCase();\n    },\n    // 处理localStorage变化\n    handleStorageChange(event) {\n      if (event.key === 'chat-servers') {\n        this.localServers = JSON.parse(event.newValue || '[]');\n      }\n    },\n    // 打开创建对话框\n    openCreateDialog() {\n      this.showCreateDialog = true;\n      this.resetForm();\n    },\n    // 关闭对话框\n    closeDialog() {\n      this.showCreateDialog = false;\n      this.resetForm();\n    },\n    // 重置表单\n    resetForm() {\n      this.currentStep = 1;\n      this.selectedType = '';\n      this.serverName = '';\n      this.serverIcon = null;\n    },\n    // 处理图标上传\n    handleIconUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.serverIcon = file;\n      }\n    },\n    // 创建服务器\n    async createServer() {\n      if (!this.serverName.trim()) return;\n      try {\n        // 这里添加创建服务器的逻辑\n        const newServer = {\n          id: Date.now().toString(),\n          name: this.serverName,\n          type: this.selectedType,\n          icon: this.serverIcon ? await this.getIconUrl(this.serverIcon) : null\n        };\n        this.$emit('add-server', newServer);\n        this.closeDialog();\n      } catch (error) {\n        console.error('创建服务器失败:', error);\n      }\n    },\n    // 获取图标URL\n    async getIconUrl(file) {\n      return new Promise(resolve => {\n        const reader = new FileReader();\n        reader.onload = e => resolve(e.target.result);\n        reader.readAsDataURL(file);\n      });\n    }\n  },\n  // 监听localStorage变化\n  mounted() {\n    window.addEventListener('storage', this.handleStorageChange);\n  },\n  beforeUnmount() {\n    window.removeEventListener('storage', this.handleStorageChange);\n  }\n};","map":{"version":3,"names":["name","data","localServers","JSON","parse","localStorage","getItem","showCreateDialog","currentStep","selectedType","serverName","serverIcon","serverTypes","id","description","icon","props","externalServers","type","Array","default","currentServerId","String","computed","servers","methods","changeServer","server","$emit","getServerAcronym","split","map","word","join","slice","toUpperCase","handleStorageChange","event","key","newValue","openCreateDialog","resetForm","closeDialog","handleIconUpload","file","target","files","createServer","trim","newServer","Date","now","toString","getIconUrl","error","console","Promise","resolve","reader","FileReader","onload","e","result","readAsDataURL","mounted","window","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\components\\chat\\ServerList.vue"],"sourcesContent":["<template>\r\n  <div class=\"server-list\">\r\n    <!-- Home Button -->\r\n    <div class=\"server-section\">\r\n      <div \r\n        class=\"server-item home-button\"\r\n        :class=\"{ active: currentServerId === 'home' }\"\r\n        @click=\"changeServer({ id: 'home', name: '主页' })\"\r\n      >\r\n        <div class=\"server-icon\">\r\n          <img src=\"/favicon.ico\" alt=\"主页\" class=\"server-icon-image\" />\r\n        </div>\r\n        <div class=\"server-pill\" :class=\"{ active: currentServerId === 'home' }\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Server List Divider -->\r\n    <div class=\"server-divider\"></div>\r\n\r\n    <!-- Servers Section -->\r\n    <div class=\"server-section servers-container\">\r\n      <div \r\n        v-for=\"server in servers\" \r\n        :key=\"server.id\"\r\n        class=\"server-item\"\r\n        :class=\"{ active: currentServerId === server.id }\"\r\n        @click=\"changeServer(server)\"\r\n      >\r\n        <div class=\"server-icon\">\r\n          <template v-if=\"server.icon\">\r\n            <img :src=\"server.icon\" :alt=\"server.name\" class=\"server-icon-image\" />\r\n          </template>\r\n          <template v-else>\r\n            <div class=\"server-acronym\">{{ getServerAcronym(server.name) }}</div>\r\n          </template>\r\n        </div>\r\n        <div class=\"server-pill\" :class=\"{ active: currentServerId === server.id }\"></div>\r\n        <div v-if=\"server.hasNotification\" class=\"notification-badge\"></div>\r\n        <div v-if=\"server.mentionCount\" class=\"mention-badge\">{{ server.mentionCount }}</div>\r\n      </div>\r\n\r\n      <!-- Add Server Button -->\r\n      <div class=\"server-item add-server\" @click=\"$emit('add-server')\">\r\n        <div class=\"server-icon\">\r\n          <span class=\"add-icon\">+</span>\r\n        </div>\r\n        <div class=\"server-tooltip\">添加服务器</div>\r\n      </div>\r\n\r\n      <!-- Explore Servers Button -->\r\n      <div class=\"server-item explore-servers\" @click=\"$emit('explore-servers')\">\r\n        <div class=\"server-icon\">\r\n          <span class=\"compass-icon\">🧭</span>\r\n        </div>\r\n        <div class=\"server-tooltip\">探索服务器</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Bottom Section -->\r\n    <div class=\"server-section\">\r\n      <div class=\"server-divider\"></div>\r\n      <div class=\"server-item settings-button\" @click=\"$emit('open-settings')\">\r\n        <div class=\"server-icon\">\r\n          <span class=\"settings-icon\">⚙️</span>\r\n        </div>\r\n        <div class=\"server-tooltip\">用户设置</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 创建服务器的对话框 -->\r\n    <div v-if=\"showCreateDialog\" class=\"create-server-dialog\">\r\n      <div class=\"dialog-content\">\r\n        <h2>创建服务器</h2>\r\n        \r\n        <!-- 步骤指示器 -->\r\n        <div class=\"step-indicator\">\r\n          第 {{ currentStep }}/2 步\r\n        </div>\r\n        \r\n        <!-- 第一步：选择服务器类型 -->\r\n        <div v-if=\"currentStep === 1\" class=\"server-types\">\r\n          <h3>选择服务器类型</h3>\r\n          <div class=\"type-options\">\r\n            <div \r\n              v-for=\"type in serverTypes\" \r\n              :key=\"type.id\"\r\n              class=\"type-option\"\r\n              :class=\"{ selected: selectedType === type.id }\"\r\n              @click=\"selectedType = type.id\"\r\n            >\r\n              <img :src=\"type.icon\" :alt=\"type.name\">\r\n              <h4>{{ type.name }}</h4>\r\n              <p>{{ type.description }}</p>\r\n            </div>\r\n          </div>\r\n          <button \r\n            class=\"next-button\" \r\n            :disabled=\"!selectedType\"\r\n            @click=\"currentStep = 2\"\r\n          >\r\n            下一步\r\n          </button>\r\n        </div>\r\n        \r\n        <!-- 第二步：设置服务器详情 -->\r\n        <div v-if=\"currentStep === 2\" class=\"server-details\">\r\n          <h3>自定义您的服务器</h3>\r\n          <div class=\"form-group\">\r\n            <label>服务器名称</label>\r\n            <input \r\n              v-model=\"serverName\" \r\n              type=\"text\" \r\n              placeholder=\"输入服务器名称\"\r\n            >\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>服务器图标（可选）</label>\r\n            <input \r\n              type=\"file\" \r\n              accept=\"image/*\"\r\n              @change=\"handleIconUpload\"\r\n            >\r\n          </div>\r\n          <div class=\"button-group\">\r\n            <button @click=\"currentStep = 1\">上一步</button>\r\n            <button \r\n              class=\"create-button\"\r\n              :disabled=\"!serverName.trim()\"\r\n              @click=\"createServer\"\r\n            >\r\n              创建服务器\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <button class=\"close-button\" @click=\"closeDialog\">×</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ServerList',\r\n  data() {\r\n    return {\r\n      // 从localStorage获取服务器列表\r\n      localServers: JSON.parse(localStorage.getItem('chat-servers') || '[]'),\r\n      showCreateDialog: false,\r\n      currentStep: 1,\r\n      selectedType: '',\r\n      serverName: '',\r\n      serverIcon: null,\r\n      serverTypes: [\r\n        {\r\n          id: 'gaming',\r\n          name: '游戏社区',\r\n          description: '创建一个游戏玩家的交流社区',\r\n          icon: '🎮'\r\n        },\r\n        {\r\n          id: 'study',\r\n          name: '学习小组',\r\n          description: '创建一个学习交流的空间',\r\n          icon: '📚'\r\n        },\r\n        {\r\n          id: 'social',\r\n          name: '社交聊天',\r\n          description: '创建一个朋友间的聊天空间',\r\n          icon: '💬'\r\n        },\r\n        {\r\n          id: 'other',\r\n          name: '其他',\r\n          description: '创建一个自定义类型的服务器',\r\n          icon: '🌟'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  props: {\r\n    // 外部传入的服务器列表\r\n    externalServers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    currentServerId: {\r\n      type: String,\r\n      default: 'home'\r\n    }\r\n  },\r\n  computed: {\r\n    // 合并本地服务器和外部服务器\r\n    servers() {\r\n      return [...this.localServers, ...this.externalServers]\r\n    }\r\n  },\r\n  methods: {\r\n    changeServer(server) {\r\n      this.$emit('change-server', server);\r\n    },\r\n    getServerAcronym(name) {\r\n      // 获取服务器名称的首字母或第一个字符\r\n      return name\r\n        .split(/\\s+/)\r\n        .map(word => word[0])\r\n        .join('')\r\n        .slice(0, 2)\r\n        .toUpperCase();\r\n    },\r\n    // 处理localStorage变化\r\n    handleStorageChange(event) {\r\n      if (event.key === 'chat-servers') {\r\n        this.localServers = JSON.parse(event.newValue || '[]');\r\n      }\r\n    },\r\n    // 打开创建对话框\r\n    openCreateDialog() {\r\n      this.showCreateDialog = true\r\n      this.resetForm()\r\n    },\r\n    \r\n    // 关闭对话框\r\n    closeDialog() {\r\n      this.showCreateDialog = false\r\n      this.resetForm()\r\n    },\r\n    \r\n    // 重置表单\r\n    resetForm() {\r\n      this.currentStep = 1\r\n      this.selectedType = ''\r\n      this.serverName = ''\r\n      this.serverIcon = null\r\n    },\r\n    \r\n    // 处理图标上传\r\n    handleIconUpload(event) {\r\n      const file = event.target.files[0]\r\n      if (file) {\r\n        this.serverIcon = file\r\n      }\r\n    },\r\n    \r\n    // 创建服务器\r\n    async createServer() {\r\n      if (!this.serverName.trim()) return\r\n      \r\n      try {\r\n        // 这里添加创建服务器的逻辑\r\n        const newServer = {\r\n          id: Date.now().toString(),\r\n          name: this.serverName,\r\n          type: this.selectedType,\r\n          icon: this.serverIcon ? await this.getIconUrl(this.serverIcon) : null\r\n        }\r\n        \r\n        this.$emit('add-server', newServer)\r\n        this.closeDialog()\r\n      } catch (error) {\r\n        console.error('创建服务器失败:', error)\r\n      }\r\n    },\r\n    \r\n    // 获取图标URL\r\n    async getIconUrl(file) {\r\n      return new Promise((resolve) => {\r\n        const reader = new FileReader()\r\n        reader.onload = (e) => resolve(e.target.result)\r\n        reader.readAsDataURL(file)\r\n      })\r\n    }\r\n  },\r\n  // 监听localStorage变化\r\n  mounted() {\r\n    window.addEventListener('storage', this.handleStorageChange);\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('storage', this.handleStorageChange);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.server-list {\r\n  width: 72px;\r\n  height: 100vh;\r\n  background-color: var(--background-tertiary);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 12px 0;\r\n  gap: 8px;\r\n  position: relative;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.server-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.servers-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 0 12px;\r\n}\r\n\r\n.server-divider {\r\n  width: 32px;\r\n  height: 2px;\r\n  background-color: var(--background-accent);\r\n  border-radius: 1px;\r\n  margin: 4px 0;\r\n}\r\n\r\n.server-item {\r\n  position: relative;\r\n  width: 48px;\r\n  height: 48px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  transition: all 0.2s ease;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.server-item:hover {\r\n  border-radius: 16px;\r\n  background-color: var(--primary-color);\r\n}\r\n\r\n.server-item.active {\r\n  border-radius: 16px;\r\n}\r\n\r\n.server-icon {\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: inherit;\r\n  background-color: var(--background-accent);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.server-icon-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.server-acronym {\r\n  color: var(--text-normal);\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: var(--background-accent);\r\n  border-radius: inherit;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.server-item:hover .server-acronym {\r\n  color: var(--text-normal);\r\n  background-color: var(--primary-color);\r\n}\r\n\r\n.server-item.active .server-acronym {\r\n  color: var(--text-normal);\r\n  background-color: var(--primary-color);\r\n}\r\n\r\n.server-pill {\r\n  position: absolute;\r\n  left: -16px;\r\n  width: 8px;\r\n  height: 0;\r\n  background-color: var(--text-normal);\r\n  border-radius: 0 4px 4px 0;\r\n  transition: height 0.2s ease;\r\n}\r\n\r\n.server-item:hover .server-pill {\r\n  height: 20px;\r\n}\r\n\r\n.server-pill.active {\r\n  height: 40px;\r\n  background-color: var(--text-normal);\r\n}\r\n\r\n.notification-badge {\r\n  position: absolute;\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: var(--primary-color);\r\n  border-radius: 50%;\r\n  bottom: 0;\r\n  right: 0;\r\n}\r\n\r\n.mention-badge {\r\n  position: absolute;\r\n  min-width: 16px;\r\n  height: 16px;\r\n  padding: 0 4px;\r\n  background-color: var(--dnd-color);\r\n  border-radius: 8px;\r\n  color: var(--text-normal);\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  bottom: -4px;\r\n  right: -4px;\r\n}\r\n\r\n.add-icon, .compass-icon, .settings-icon {\r\n  font-size: 24px;\r\n  color: var(--interactive-normal);\r\n}\r\n\r\n.server-tooltip {\r\n  position: absolute;\r\n  left: 100%;\r\n  margin-left: 8px;\r\n  padding: 8px 12px;\r\n  background-color: var(--background-primary);\r\n  border-radius: 4px;\r\n  color: var(--text-normal);\r\n  font-size: 14px;\r\n  white-space: nowrap;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  transform: translateX(-8px);\r\n  transition: all 0.2s ease;\r\n  z-index: 1000;\r\n}\r\n\r\n.server-tooltip::before {\r\n  content: '';\r\n  position: absolute;\r\n  left: -4px;\r\n  top: 50%;\r\n  transform: translateY(-50%) rotate(45deg);\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: var(--background-primary);\r\n}\r\n\r\n.server-item:hover .server-tooltip {\r\n  opacity: 1;\r\n  transform: translateX(0);\r\n}\r\n\r\n/* 滚动条样式 */\r\n.servers-container::-webkit-scrollbar {\r\n  width: 0;\r\n  background: transparent;\r\n}\r\n\r\n/* 响应式样式 */\r\n@media (max-width: 768px) {\r\n  .server-list {\r\n    width: 100%;\r\n    height: 72px;\r\n    flex-direction: row;\r\n    padding: 0 12px;\r\n  }\r\n\r\n  .server-section {\r\n    flex-direction: row;\r\n  }\r\n\r\n  .servers-container {\r\n    flex-direction: row;\r\n    overflow-x: auto;\r\n    padding: 12px;\r\n  }\r\n\r\n  .server-divider {\r\n    width: 2px;\r\n    height: 32px;\r\n    margin: 0 8px;\r\n  }\r\n\r\n  .server-item {\r\n    margin-right: 8px;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .server-pill {\r\n    display: none;\r\n  }\r\n\r\n  .server-tooltip {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.create-server-dialog {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.dialog-content {\r\n  background: var(--background-primary);\r\n  border-radius: 8px;\r\n  padding: 24px;\r\n  width: 480px;\r\n  max-width: 90%;\r\n  position: relative;\r\n}\r\n\r\n.type-options {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 16px;\r\n  margin: 20px 0;\r\n}\r\n\r\n.type-option {\r\n  padding: 16px;\r\n  border: 2px solid var(--background-secondary);\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.type-option.selected {\r\n  border-color: var(--primary-color);\r\n  background: var(--background-secondary);\r\n}\r\n\r\n.form-group {\r\n  margin: 16px 0;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 24px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}