{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"username-input-container\"\n};\nconst _hoisted_2 = {\n  class: \"input-group\"\n};\nconst _hoisted_3 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AvatarSelector = _resolveComponent(\"AvatarSelector\");\n  const _component_ThemeSelector = _resolveComponent(\"ThemeSelector\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", {\n    class: \"title\"\n  }, \"欢迎来到聊天室\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"username\"\n  }, \"请输入您的昵称\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    placeholder: \"输入昵称...\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.setUsername && $options.setUsername(...args), [\"enter\"])),\n    class: \"username-input\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.username]])]), _createVNode(_component_AvatarSelector, {\n    username: $data.username,\n    \"onUpdate:avatar\": $options.handleAvatarSelected\n  }, null, 8 /* PROPS */, [\"username\", \"onUpdate:avatar\"]), _createVNode(_component_ThemeSelector, {\n    onThemeChanged: $options.handleThemeChanged\n  }, null, 8 /* PROPS */, [\"onThemeChanged\"]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.setUsername && $options.setUsername(...args)),\n    class: \"enter-button\",\n    disabled: !$data.username.trim()\n  }, \" 进入聊天室 \", 8 /* PROPS */, _hoisted_3)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","for","type","id","_cache","$event","$data","username","placeholder","onKeyup","_withKeys","args","$options","setUsername","_createVNode","_component_AvatarSelector","handleAvatarSelected","_component_ThemeSelector","onThemeChanged","handleThemeChanged","onClick","disabled","trim","_hoisted_3"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\UserNameInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"username-input-container\">\r\n    <h2 class=\"title\">欢迎来到聊天室</h2>\r\n    \r\n    <div class=\"input-group\">\r\n      <label for=\"username\">请输入您的昵称</label>\r\n      <input \r\n        type=\"text\" \r\n        id=\"username\"\r\n        v-model=\"username\" \r\n        placeholder=\"输入昵称...\" \r\n        @keyup.enter=\"setUsername\"\r\n        class=\"username-input\"\r\n      />\r\n    </div>\r\n    \r\n    <AvatarSelector \r\n      :username=\"username\"\r\n      @update:avatar=\"handleAvatarSelected\"\r\n    />\r\n    \r\n    <ThemeSelector @theme-changed=\"handleThemeChanged\" />\r\n    \r\n    <button \r\n      @click=\"setUsername\" \r\n      class=\"enter-button\"\r\n      :disabled=\"!username.trim()\"\r\n    >\r\n      进入聊天室\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AvatarSelector from './AvatarSelector.vue'\r\nimport ThemeSelector from './ThemeSelector.vue'\r\n\r\nexport default {\r\n  name: 'UserNameInput',\r\n  components: {\r\n    AvatarSelector,\r\n    ThemeSelector\r\n  },\r\n  data() {\r\n    return {\r\n      username: '', // 用户昵称\r\n      selectedAvatar: '', // 选中的头像\r\n      selectedTheme: 'natural' // 默认使用自然韵律主题\r\n    }\r\n  },\r\n  created() {\r\n    // 从 localStorage 获取保存的主题\r\n    const savedTheme = localStorage.getItem('chat-theme');\r\n    if (savedTheme) {\r\n      this.selectedTheme = savedTheme;\r\n      document.body.classList.add(`theme-${savedTheme}`);\r\n    }\r\n    \r\n    // 尝试从localStorage恢复用户名和头像\r\n    const savedUsername = localStorage.getItem('chat-username');\r\n    const savedAvatar = localStorage.getItem('chat-avatar');\r\n    \r\n    if (savedUsername) {\r\n      this.username = savedUsername;\r\n    }\r\n    \r\n    if (savedAvatar) {\r\n      this.selectedAvatar = savedAvatar;\r\n    }\r\n  },\r\n  methods: {\r\n    // 处理头像选择\r\n    handleAvatarSelected(avatarUrl) {\r\n      this.selectedAvatar = avatarUrl;\r\n    },\r\n    \r\n    // 处理主题变更\r\n    handleThemeChanged(theme) {\r\n      this.selectedTheme = theme;\r\n    },\r\n    \r\n    // 设置用户名和头像\r\n    setUsername() {\r\n      if (this.username.trim()) {\r\n        // 将用户名和头像传递给父组件\r\n        this.$emit('set-username', {\r\n          username: this.username,\r\n          avatar: this.selectedAvatar\r\n        });\r\n        \r\n        // 保存到localStorage\r\n        localStorage.setItem('chat-username', this.username);\r\n        localStorage.setItem('chat-avatar', this.selectedAvatar);\r\n        localStorage.setItem('chat-theme', this.selectedTheme);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.username-input-container {\r\n  max-width: 500px;\r\n  margin: 2rem auto;\r\n  padding: 2rem;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\r\n  backdrop-filter: blur(10px);\r\n  color: var(--text-color);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  margin-bottom: 2rem;\r\n  font-size: 1.75rem;\r\n  color: var(--header-color);\r\n}\r\n\r\n.input-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.input-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.username-input {\r\n  width: 100%;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 0.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  color: var(--text-color);\r\n  font-size: 1rem;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.username-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb, 138, 113, 88), 0.2);\r\n}\r\n\r\n.enter-button {\r\n  width: 100%;\r\n  padding: 0.75rem 1rem;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 0.5rem;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  margin-top: 1rem;\r\n}\r\n\r\n.enter-button:hover:not(:disabled) {\r\n  background-color: var(--secondary-color);\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.enter-button:active:not(:disabled) {\r\n  transform: translateY(0);\r\n}\r\n\r\n.enter-button:disabled {\r\n  background-color: rgba(128, 128, 128, 0.3);\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 响应式样式 */\r\n@media (max-width: 480px) {\r\n  .username-input-container {\r\n    margin: 1rem;\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .title {\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAA0B;;EAG9BA,KAAK,EAAC;AAAa;mBAJ5B;;;;uBACEC,mBAAA,CA6BM,OA7BNC,UA6BM,G,0BA5BJC,mBAAA,CAA8B;IAA1BH,KAAK,EAAC;EAAO,GAAC,SAAO,sBAEzBG,mBAAA,CAUM,OAVNC,UAUM,G,0BATJD,mBAAA,CAAqC;IAA9BE,GAAG,EAAC;EAAU,GAAC,SAAO,sB,gBAC7BF,mBAAA,CAOE;IANAG,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,UAAU;IARrB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASiBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBG,WAAW,EAAC,SAAS;IACpBC,OAAK,EAAAL,MAAA,QAAAA,MAAA,MAXdM,SAAA,KAAAC,IAAA,KAWsBC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IACzBf,KAAK,EAAC;iEAHGU,KAAA,CAAAC,QAAQ,E,KAOrBO,YAAA,CAGEC,yBAAA;IAFCR,QAAQ,EAAED,KAAA,CAAAC,QAAQ;IAClB,iBAAa,EAAEK,QAAA,CAAAI;4DAGlBF,YAAA,CAAqDG,wBAAA;IAArCC,cAAa,EAAEN,QAAA,CAAAO;EAAkB,6CAEjDpB,mBAAA,CAMS;IALNqB,OAAK,EAAAhB,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IACnBf,KAAK,EAAC,cAAc;IACnByB,QAAQ,GAAGf,KAAA,CAAAC,QAAQ,CAACe,IAAI;KAC1B,SAED,iBA7BJC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}