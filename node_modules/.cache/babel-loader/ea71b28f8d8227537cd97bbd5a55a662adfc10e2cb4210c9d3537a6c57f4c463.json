{"ast":null,"code":"/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/community/file/1198749693280469639\n */\nimport { pickComponent } from './pickComponent.js';\nexport function getComponents({\n  prng,\n  options\n}) {\n  const hairComponent = pickComponent({\n    prng,\n    group: 'hair',\n    values: options.hair\n  });\n  const hairAccessoriesComponent = pickComponent({\n    prng,\n    group: 'hairAccessories',\n    values: options.hairAccessories\n  });\n  const headComponent = pickComponent({\n    prng,\n    group: 'head',\n    values: options.head\n  });\n  const eyesComponent = pickComponent({\n    prng,\n    group: 'eyes',\n    values: options.eyes\n  });\n  const eyebrowsComponent = pickComponent({\n    prng,\n    group: 'eyebrows',\n    values: options.eyebrows\n  });\n  const earringsComponent = pickComponent({\n    prng,\n    group: 'earrings',\n    values: options.earrings\n  });\n  const frecklesComponent = pickComponent({\n    prng,\n    group: 'freckles',\n    values: options.freckles\n  });\n  const noseComponent = pickComponent({\n    prng,\n    group: 'nose',\n    values: options.nose\n  });\n  const beardComponent = pickComponent({\n    prng,\n    group: 'beard',\n    values: options.beard\n  });\n  const mouthComponent = pickComponent({\n    prng,\n    group: 'mouth',\n    values: options.mouth\n  });\n  const glassesComponent = pickComponent({\n    prng,\n    group: 'glasses',\n    values: options.glasses\n  });\n  return {\n    'hair': hairComponent,\n    'hairAccessories': prng.bool(options.hairAccessoriesProbability) ? hairAccessoriesComponent : undefined,\n    'head': headComponent,\n    'eyes': eyesComponent,\n    'eyebrows': eyebrowsComponent,\n    'earrings': prng.bool(options.earringsProbability) ? earringsComponent : undefined,\n    'freckles': prng.bool(options.frecklesProbability) ? frecklesComponent : undefined,\n    'nose': noseComponent,\n    'beard': prng.bool(options.beardProbability) ? beardComponent : undefined,\n    'mouth': mouthComponent,\n    'glasses': prng.bool(options.glassesProbability) ? glassesComponent : undefined\n  };\n}\n;","map":{"version":3,"names":["pickComponent","getComponents","prng","options","hairComponent","group","values","hair","hairAccessoriesComponent","hairAccessories","headComponent","head","eyesComponent","eyes","eyebrowsComponent","eyebrows","earringsComponent","earrings","frecklesComponent","freckles","noseComponent","nose","beardComponent","beard","mouthComponent","mouth","glassesComponent","glasses","bool","hairAccessoriesProbability","undefined","earringsProbability","frecklesProbability","beardProbability","glassesProbability"],"sources":["C:/Users/Administrator/Desktop/discord-chat-app/fack/just-do-it/node_modules/@dicebear/lorelei/lib/utils/getComponents.js"],"sourcesContent":["/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/community/file/1198749693280469639\n */\nimport { pickComponent } from './pickComponent.js';\nexport function getComponents({ prng, options }) {\n    const hairComponent = pickComponent({\n        prng,\n        group: 'hair',\n        values: options.hair,\n    });\n    const hairAccessoriesComponent = pickComponent({\n        prng,\n        group: 'hairAccessories',\n        values: options.hairAccessories,\n    });\n    const headComponent = pickComponent({\n        prng,\n        group: 'head',\n        values: options.head,\n    });\n    const eyesComponent = pickComponent({\n        prng,\n        group: 'eyes',\n        values: options.eyes,\n    });\n    const eyebrowsComponent = pickComponent({\n        prng,\n        group: 'eyebrows',\n        values: options.eyebrows,\n    });\n    const earringsComponent = pickComponent({\n        prng,\n        group: 'earrings',\n        values: options.earrings,\n    });\n    const frecklesComponent = pickComponent({\n        prng,\n        group: 'freckles',\n        values: options.freckles,\n    });\n    const noseComponent = pickComponent({\n        prng,\n        group: 'nose',\n        values: options.nose,\n    });\n    const beardComponent = pickComponent({\n        prng,\n        group: 'beard',\n        values: options.beard,\n    });\n    const mouthComponent = pickComponent({\n        prng,\n        group: 'mouth',\n        values: options.mouth,\n    });\n    const glassesComponent = pickComponent({\n        prng,\n        group: 'glasses',\n        values: options.glasses,\n    });\n    return {\n        'hair': hairComponent,\n        'hairAccessories': prng.bool(options.hairAccessoriesProbability) ? hairAccessoriesComponent : undefined,\n        'head': headComponent,\n        'eyes': eyesComponent,\n        'eyebrows': eyebrowsComponent,\n        'earrings': prng.bool(options.earringsProbability) ? earringsComponent : undefined,\n        'freckles': prng.bool(options.frecklesProbability) ? frecklesComponent : undefined,\n        'nose': noseComponent,\n        'beard': prng.bool(options.beardProbability) ? beardComponent : undefined,\n        'mouth': mouthComponent,\n        'glasses': prng.bool(options.glassesProbability) ? glassesComponent : undefined,\n    };\n}\n;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,OAAO,SAASC,aAAaA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,EAAE;EAC7C,MAAMC,aAAa,GAAGJ,aAAa,CAAC;IAChCE,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACI;EACpB,CAAC,CAAC;EACF,MAAMC,wBAAwB,GAAGR,aAAa,CAAC;IAC3CE,IAAI;IACJG,KAAK,EAAE,iBAAiB;IACxBC,MAAM,EAAEH,OAAO,CAACM;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGV,aAAa,CAAC;IAChCE,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACQ;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGZ,aAAa,CAAC;IAChCE,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACU;EACpB,CAAC,CAAC;EACF,MAAMC,iBAAiB,GAAGd,aAAa,CAAC;IACpCE,IAAI;IACJG,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAEH,OAAO,CAACY;EACpB,CAAC,CAAC;EACF,MAAMC,iBAAiB,GAAGhB,aAAa,CAAC;IACpCE,IAAI;IACJG,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAEH,OAAO,CAACc;EACpB,CAAC,CAAC;EACF,MAAMC,iBAAiB,GAAGlB,aAAa,CAAC;IACpCE,IAAI;IACJG,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAEH,OAAO,CAACgB;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGpB,aAAa,CAAC;IAChCE,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACkB;EACpB,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGtB,aAAa,CAAC;IACjCE,IAAI;IACJG,KAAK,EAAE,OAAO;IACdC,MAAM,EAAEH,OAAO,CAACoB;EACpB,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGxB,aAAa,CAAC;IACjCE,IAAI;IACJG,KAAK,EAAE,OAAO;IACdC,MAAM,EAAEH,OAAO,CAACsB;EACpB,CAAC,CAAC;EACF,MAAMC,gBAAgB,GAAG1B,aAAa,CAAC;IACnCE,IAAI;IACJG,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAEH,OAAO,CAACwB;EACpB,CAAC,CAAC;EACF,OAAO;IACH,MAAM,EAAEvB,aAAa;IACrB,iBAAiB,EAAEF,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC0B,0BAA0B,CAAC,GAAGrB,wBAAwB,GAAGsB,SAAS;IACvG,MAAM,EAAEpB,aAAa;IACrB,MAAM,EAAEE,aAAa;IACrB,UAAU,EAAEE,iBAAiB;IAC7B,UAAU,EAAEZ,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC4B,mBAAmB,CAAC,GAAGf,iBAAiB,GAAGc,SAAS;IAClF,UAAU,EAAE5B,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC6B,mBAAmB,CAAC,GAAGd,iBAAiB,GAAGY,SAAS;IAClF,MAAM,EAAEV,aAAa;IACrB,OAAO,EAAElB,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC8B,gBAAgB,CAAC,GAAGX,cAAc,GAAGQ,SAAS;IACzE,OAAO,EAAEN,cAAc;IACvB,SAAS,EAAEtB,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC+B,kBAAkB,CAAC,GAAGR,gBAAgB,GAAGI;EAC1E,CAAC;AACL;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}