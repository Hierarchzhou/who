{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers, withKeys as _withKeys, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"message-input-container\"\n};\nconst _hoisted_2 = {\n  class: \"emoji-picker-container\",\n  ref: \"emojiPicker\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_picker = _resolveComponent(\"picker\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 表情按钮 \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleEmojiPicker && $options.toggleEmojiPicker(...args)),\n    class: \"emoji-button\",\n    ref: \"emojiButton\"\n  }, \" 😊 \", 512 /* NEED_PATCH */), _createCommentVNode(\" 专业表情选择器 \"), _withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_picker, {\n    data: $data.emojiIndex,\n    native: true,\n    \"show-preview\": true,\n    \"show-search\": true,\n    \"show-categories\": true,\n    \"show-recent\": true,\n    \"emoji-size\": 20,\n    \"emoji-sheet-size\": 32,\n    \"skin-tone\": $data.skinTone,\n    onSelect: $options.onEmojiSelect,\n    title: \"选择表情\",\n    \"custom-emojis\": $data.customEmojis,\n    i18n: {\n      search: '搜索表情',\n      categories: {\n        recent: '最近使用',\n        people: '表情与人物',\n        nature: '动物与自然',\n        foods: '食物与饮料',\n        activity: '活动',\n        places: '旅行与地点',\n        objects: '物品',\n        symbols: '符号',\n        flags: '旗帜'\n      }\n    }\n  }, null, 8 /* PROPS */, [\"data\", \"skin-tone\", \"onSelect\", \"custom-emojis\"])], 512 /* NEED_PATCH */), [[_vShow, $data.showEmojiPicker]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.message = $event),\n    onKeydown: _cache[2] || (_cache[2] = _withKeys(_withModifiers((...args) => $options.sendMessage && $options.sendMessage(...args), [\"prevent\"]), [\"enter\"])),\n    placeholder: \"输入消息...\",\n    class: \"message-input\",\n    ref: \"messageInput\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.message]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.sendMessage && $options.sendMessage(...args)),\n    class: \"send-button\"\n  }, \" 发送 \")]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","onClick","_cache","args","$options","toggleEmojiPicker","_hoisted_2","_createVNode","_component_picker","data","$data","emojiIndex","native","skinTone","onSelect","onEmojiSelect","title","customEmojis","i18n","showEmojiPicker","$event","message","onKeydown","_withKeys","_withModifiers","sendMessage","placeholder"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\MessageInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-input-container\">\r\n    <!-- 表情按钮 -->\r\n    <button @click=\"toggleEmojiPicker\" class=\"emoji-button\" ref=\"emojiButton\">\r\n      😊\r\n    </button>\r\n    \r\n    <!-- 专业表情选择器 -->\r\n    <div v-show=\"showEmojiPicker\" class=\"emoji-picker-container\" ref=\"emojiPicker\">\r\n      <picker\r\n        :data=\"emojiIndex\"\r\n        :native=\"true\"\r\n        :show-preview=\"true\"\r\n        :show-search=\"true\"\r\n        :show-categories=\"true\"\r\n        :show-recent=\"true\"\r\n        :emoji-size=\"20\"\r\n        :emoji-sheet-size=\"32\"\r\n        :skin-tone=\"skinTone\"\r\n        @select=\"onEmojiSelect\"\r\n        title=\"选择表情\"\r\n        :custom-emojis=\"customEmojis\"\r\n        :i18n=\"{\r\n          search: '搜索表情',\r\n          categories: {\r\n            recent: '最近使用',\r\n            people: '表情与人物',\r\n            nature: '动物与自然',\r\n            foods: '食物与饮料',\r\n            activity: '活动',\r\n            places: '旅行与地点',\r\n            objects: '物品',\r\n            symbols: '符号',\r\n            flags: '旗帜'\r\n          }\r\n        }\"\r\n      />\r\n    </div>\r\n\r\n    <textarea\r\n      v-model=\"message\"\r\n      @keydown.enter.prevent=\"sendMessage\"\r\n      placeholder=\"输入消息...\"\r\n      class=\"message-input\"\r\n      ref=\"messageInput\"\r\n    ></textarea>\r\n    <button @click=\"sendMessage\" class=\"send-button\">\r\n      发送\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 导入必要的组件和样式\r\nimport { Picker, EmojiIndex } from 'vue-emoji-mart'\r\nimport 'vue-emoji-mart/css/emoji-mart.css'\r\nimport data from 'emoji-mart/data/all.json'\r\n\r\nexport default {\r\n  name: 'MessageInput',\r\n  components: {\r\n    picker: Picker  // 注册表情选择器组件\r\n  },\r\n  data() {\r\n    return {\r\n      message: '',  // 存储用户输入的消息\r\n      showEmojiPicker: false,  // 控制表情选择器的显示/隐藏\r\n      emojiIndex: new EmojiIndex(data),  // 表情数据索引\r\n      skinTone: 1,  // 表情肤色\r\n      customEmojis: [\r\n        {\r\n          name: 'Vue',\r\n          shortNames: ['vue'],\r\n          text: '',\r\n          emoticons: [],\r\n          keywords: ['vue', 'framework'],\r\n          imageUrl: 'https://vuejs.org/images/logo.png'\r\n        },\r\n        {\r\n          name: 'Discord',\r\n          shortNames: ['discord'],\r\n          text: '',\r\n          emoticons: [],\r\n          keywords: ['discord', 'chat'],\r\n          imageUrl: 'https://assets-global.website-files.com/6257adef93867e50d84d30e2/636e0a6a49cf127bf92de1e2_icon_clyde_blurple_RGB.png'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    // 发送消息\r\n    sendMessage() {\r\n      if (this.message.trim()) {\r\n        this.$emit('send-message', this.message);\r\n        this.message = '';\r\n        this.$nextTick(() => {\r\n          this.$refs.messageInput.focus();\r\n        });\r\n      }\r\n    },\r\n    // 切换表情选择器的显示/隐藏\r\n    toggleEmojiPicker(event) {\r\n      // 阻止事件冒泡，避免立即触发document的点击事件\r\n      event.stopPropagation();\r\n      this.showEmojiPicker = !this.showEmojiPicker;\r\n      \r\n      if (this.showEmojiPicker) {\r\n        // 计算表情选择器的位置\r\n        this.$nextTick(() => {\r\n          const buttonRect = this.$refs.emojiButton.getBoundingClientRect();\r\n          const pickerEl = this.$refs.emojiPicker;\r\n          \r\n          // 确保选择器显示在按钮上方且不超出视窗\r\n          pickerEl.style.bottom = '100%';\r\n          pickerEl.style.left = `${buttonRect.left}px`;\r\n        });\r\n      }\r\n    },\r\n    // 处理表情选择\r\n    onEmojiSelect(emoji) {\r\n      const textarea = this.$refs.messageInput;\r\n      const start = textarea.selectionStart;\r\n      const end = textarea.selectionEnd;\r\n      \r\n      // 获取表情符号（原生或自定义）\r\n      const emojiToInsert = emoji.native || emoji.imageUrl;\r\n      \r\n      // 插入表情\r\n      this.message = this.message.substring(0, start) + \r\n                    (emoji.native ? emojiToInsert : `[${emoji.name}]`) + \r\n                    this.message.substring(end);\r\n      \r\n      // 更新光标位置\r\n      this.$nextTick(() => {\r\n        const newPosition = start + (emoji.native ? emojiToInsert.length : emoji.name.length + 2);\r\n        textarea.selectionStart = textarea.selectionEnd = newPosition;\r\n        textarea.focus();\r\n      });\r\n      \r\n      this.showEmojiPicker = false;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$refs.messageInput.focus();\r\n    \r\n    // 点击其他地方时关闭表情选择器\r\n    document.addEventListener('click', (e) => {\r\n      if (this.showEmojiPicker && \r\n          !this.$refs.emojiPicker.contains(e.target) && \r\n          !this.$refs.emojiButton.contains(e.target)) {\r\n        this.showEmojiPicker = false;\r\n      }\r\n    });\r\n  },\r\n  beforeDestroy() {\r\n    // 清理事件监听\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-input-container {\r\n  display: flex;\r\n  padding: 1rem;\r\n  background-color: var(--input-background); /* 使用主题变量 */\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.message-input {\r\n  flex: 1;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 1.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  color: var(--input-color); /* 使用主题变量 */\r\n  font-size: 0.95rem;\r\n  resize: none;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  transition: all 0.2s ease;\r\n  margin-left: 0.5rem;\r\n}\r\n\r\n.message-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb, 138, 113, 88), 0.2);\r\n}\r\n\r\n.message-input::placeholder {\r\n  color: var(--input-placeholder); /* 使用主题变量 */\r\n  opacity: 0.7;\r\n}\r\n\r\n.send-button {\r\n  margin-left: 0.75rem;\r\n  padding: 0.5rem 1.25rem;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 1.5rem;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: var(--secondary-color);\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.send-button:active {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* 修改表情选择器容器样式 */\r\n.emoji-picker-container {\r\n  position: fixed; /* 改为fixed以避免容器限制 */\r\n  background-color: var(--background-primary);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n}\r\n\r\n/* 自定义 emoji-mart 样式 */\r\n:deep(.emoji-mart) {\r\n  background-color: var(--background-primary) !important;\r\n  border-color: var(--border-color) !important;\r\n}\r\n\r\n:deep(.emoji-mart-category-label) {\r\n  color: var(--text-normal) !important;\r\n}\r\n\r\n:deep(.emoji-mart-search input) {\r\n  background-color: var(--background-secondary) !important;\r\n  border-color: var(--border-color) !important;\r\n  color: var(--text-normal) !important;\r\n}\r\n\r\n:deep(.emoji-mart-bar) {\r\n  border-color: var(--border-color) !important;\r\n}\r\n\r\n/* 表情按钮样式优化 */\r\n.emoji-button {\r\n  padding: 0.5rem;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  transition: all 0.2s ease;\r\n  margin-right: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.emoji-button:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.emoji-button:focus {\r\n  outline: none;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAyB;;EAOJA,KAAK,EAAC,wBAAwB;EAACC,GAAG,EAAC;;;;uBAPnEC,mBAAA,CAgDM,OAhDNC,UAgDM,GA/CJC,mBAAA,UAAa,EACbC,mBAAA,CAES;IAFAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;IAAER,KAAK,EAAC,cAAc;IAACC,GAAG,EAAC;KAAc,MAE1E,yBAEAG,mBAAA,aAAgB,E,gBAChBC,mBAAA,CA6BM,OA7BNM,UA6BM,GA5BJC,YAAA,CA2BEC,iBAAA;IA1BCC,IAAI,EAAEC,KAAA,CAAAC,UAAU;IAChBC,MAAM,EAAE,IAAI;IACZ,cAAY,EAAE,IAAI;IAClB,aAAW,EAAE,IAAI;IACjB,iBAAe,EAAE,IAAI;IACrB,aAAW,EAAE,IAAI;IACjB,YAAU,EAAE,EAAE;IACd,kBAAgB,EAAE,EAAE;IACpB,WAAS,EAAEF,KAAA,CAAAG,QAAQ;IACnBC,QAAM,EAAEV,QAAA,CAAAW,aAAa;IACtBC,KAAK,EAAC,MAAM;IACX,eAAa,EAAEN,KAAA,CAAAO,YAAY;IAC3BC,IAAI,EAAE;;;;;;;;;;;;;;iHAdER,KAAA,CAAAS,eAAe,E,mBA+B5BnB,mBAAA,CAMY;IA7ChB,uBAAAE,MAAA,QAAAA,MAAA,MAAAkB,MAAA,IAwCeV,KAAA,CAAAW,OAAO,GAAAD,MAAA;IACfE,SAAO,EAAApB,MAAA,QAAAA,MAAA,MAzCdqB,SAAA,CAAAC,cAAA,KAAArB,IAAA,KAyC8BC,QAAA,CAAAqB,WAAA,IAAArB,QAAA,CAAAqB,WAAA,IAAAtB,IAAA,CAAW;IACnCuB,WAAW,EAAC,SAAS;IACrB/B,KAAK,EAAC,eAAe;IACrBC,GAAG,EAAC;iEAJKc,KAAA,CAAAW,OAAO,E,GAMlBrB,mBAAA,CAES;IAFAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAqB,WAAA,IAAArB,QAAA,CAAAqB,WAAA,IAAAtB,IAAA,CAAW;IAAER,KAAK,EAAC;KAAc,MAEjD,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}