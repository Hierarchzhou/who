{"ast":null,"code":"import StickerMessage from './StickerMessage.vue';\nimport { getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils';\nimport { formatTimestamp } from '@/utils/time'; // 假设你有这个工具函数\n\nexport default {\n  name: 'MessageList',\n  components: {\n    StickerMessage\n  },\n  props: {\n    messages: {\n      type: Array,\n      default: () => []\n    },\n    currentUsername: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      defaultAvatar: '/path/to/default-avatar.png' // 替换成你的默认头像路径\n    };\n  },\n  methods: {\n    formatTime(timestamp) {\n      return formatTimestamp(timestamp);\n    },\n    // 检查是否是表情包消息\n    isSticker(content) {\n      return content.startsWith('[sticker:') && content.endsWith(']');\n    },\n    // 从消息内容中提取表情包ID\n    extractStickerId(content) {\n      const match = content.match(/\\[sticker:(.+?)\\]/);\n      return match ? match[1] : null;\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        if (this.$refs.messageList) {\n          this.$refs.messageList.scrollTop = this.$refs.messageList.scrollHeight;\n        }\n      });\n    },\n    // 获取备用头像URL\n    getFallbackAvatarUrl() {\n      return getFallbackAvatarUrl();\n    },\n    // 处理头像加载错误\n    handleAvatarError(event) {\n      handleAvatarError(event);\n    }\n  },\n  watch: {\n    messages: {\n      handler() {\n        this.scrollToBottom();\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.scrollToBottom();\n  }\n};","map":{"version":3,"names":["StickerMessage","getFallbackAvatarUrl","handleAvatarError","formatTimestamp","name","components","props","messages","type","Array","default","currentUsername","String","data","defaultAvatar","methods","formatTime","timestamp","isSticker","content","startsWith","endsWith","extractStickerId","match","scrollToBottom","$nextTick","$refs","messageList","scrollTop","scrollHeight","event","watch","handler","deep","mounted"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\MessageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-list\" ref=\"messageList\">\r\n    <div v-if=\"messages.length === 0\" class=\"no-messages\">\r\n      暂无消息，开始聊天吧！\r\n    </div>\r\n    <div v-else>\r\n      <div \r\n        v-for=\"message in messages\" \r\n        :key=\"message.id || message.timestamp\" \r\n        class=\"message-item\"\r\n      >\r\n        <div class=\"message-avatar\">\r\n          <img \r\n            :src=\"message.avatar || defaultAvatar\" \r\n            :alt=\"message.username\" \r\n            class=\"avatar-img\" \r\n            @error=\"handleAvatarError\"\r\n          />\r\n        </div>\r\n        <div \r\n          class=\"message\"\r\n          :class=\"{ 'self': message.sender === currentUsername, 'other': message.sender !== currentUsername }\"\r\n        >\r\n          <div class=\"message-header\">\r\n            <span class=\"username\">{{ message.username }}</span>\r\n            <span class=\"timestamp\">{{ formatTime(message.timestamp) }}</span>\r\n          </div>\r\n          <div class=\"message-body\">\r\n            <template v-if=\"isSticker(message.content)\">\r\n              <StickerMessage :sticker-id=\"extractStickerId(message.content)\" />\r\n            </template>\r\n            <template v-else>\r\n              {{ message.content }}\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StickerMessage from './StickerMessage.vue'\r\nimport { getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils';\r\nimport { formatTimestamp } from '@/utils/time'  // 假设你有这个工具函数\r\n\r\nexport default {\r\n  name: 'MessageList',\r\n  components: {\r\n    StickerMessage\r\n  },\r\n  props: {\r\n    messages: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    currentUsername: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      defaultAvatar: '/path/to/default-avatar.png'  // 替换成你的默认头像路径\r\n    }\r\n  },\r\n  methods: {\r\n    formatTime(timestamp) {\r\n      return formatTimestamp(timestamp)\r\n    },\r\n    // 检查是否是表情包消息\r\n    isSticker(content) {\r\n      return content.startsWith('[sticker:') && content.endsWith(']')\r\n    },\r\n    // 从消息内容中提取表情包ID\r\n    extractStickerId(content) {\r\n      const match = content.match(/\\[sticker:(.+?)\\]/)\r\n      return match ? match[1] : null\r\n    },\r\n    scrollToBottom() {\r\n      this.$nextTick(() => {\r\n        if (this.$refs.messageList) {\r\n          this.$refs.messageList.scrollTop = this.$refs.messageList.scrollHeight\r\n        }\r\n      })\r\n    },\r\n    // 获取备用头像URL\r\n    getFallbackAvatarUrl() {\r\n      return getFallbackAvatarUrl();\r\n    },\r\n    // 处理头像加载错误\r\n    handleAvatarError(event) {\r\n      handleAvatarError(event);\r\n    }\r\n  },\r\n  watch: {\r\n    messages: {\r\n      handler() {\r\n        this.scrollToBottom()\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  mounted() {\r\n    this.scrollToBottom()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: var(--chat-background); /* 使用主题变量 */\r\n  position: relative;\r\n}\r\n\r\n.message-item {\r\n  display: flex;\r\n  margin-bottom: 1.5rem;\r\n  align-items: flex-start;\r\n}\r\n\r\n.message-avatar {\r\n  margin-right: 0.75rem;\r\n  flex-shrink: 0;\r\n  position: relative;\r\n}\r\n\r\n.avatar-img {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: var(--avatar-border, 2px solid rgba(255, 255, 255, 0.1));\r\n  box-shadow: var(--avatar-shadow, 0 2px 4px rgba(0, 0, 0, 0.2));\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n  position: relative;\r\n  z-index: 1;\r\n  background-color: #2f3136; /* Discord avatar background color */\r\n}\r\n\r\n.avatar-img:hover {\r\n  transform: scale(1.1);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.message-avatar::after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: var(--online-indicator);\r\n  border-radius: 50%;\r\n  bottom: 0;\r\n  left: 0;\r\n  border: 2px solid var(--chat-background);\r\n  z-index: 2;\r\n}\r\n\r\n.message {\r\n  max-width: 80%;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 0.5rem;\r\n  position: relative;\r\n  animation: fadeIn 0.3s ease-out;\r\n  box-shadow: var(--message-shadow);\r\n  transition: transform 0.2s ease;\r\n  background-color: var(--other-message-bg); /* 使用主题变量 */\r\n  color: var(--other-message-color); /* 使用主题变量 */\r\n}\r\n\r\n.message:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.message.self {\r\n  background-color: var(--self-message-bg); /* 使用主题变量 */\r\n  color: var(--self-message-color); /* 使用主题变量 */\r\n}\r\n\r\n.message-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.85rem;\r\n  opacity: 0.8;\r\n}\r\n\r\n.message-sender {\r\n  font-weight: bold;\r\n}\r\n\r\n.message-time {\r\n  font-size: 0.75rem;\r\n  opacity: 0.7;\r\n  margin-left: 0.75rem;\r\n}\r\n\r\n.message-content {\r\n  word-break: break-word;\r\n  line-height: 1.4;\r\n}\r\n\r\n.no-messages {\r\n  text-align: center;\r\n  color: var(--timestamp-color); /* 使用主题变量 */\r\n  margin-top: 2rem;\r\n  font-style: italic;\r\n  opacity: 0.7;\r\n}\r\n</style> "],"mappings":"AA0CA,OAAOA,cAAa,MAAO,sBAAqB;AAChD,SAASC,oBAAoB,EAAEC,iBAAgB,QAAS,yBAAyB;AACjF,SAASC,eAAc,QAAS,cAAa,EAAG;;AAEhD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVL;EACF,CAAC;EACDM,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACDC,eAAe,EAAE;MACfH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,6BAA4B,CAAG;IAChD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,SAAS,EAAE;MACpB,OAAOd,eAAe,CAACc,SAAS;IAClC,CAAC;IACD;IACAC,SAASA,CAACC,OAAO,EAAE;MACjB,OAAOA,OAAO,CAACC,UAAU,CAAC,WAAW,KAAKD,OAAO,CAACE,QAAQ,CAAC,GAAG;IAChE,CAAC;IACD;IACAC,gBAAgBA,CAACH,OAAO,EAAE;MACxB,MAAMI,KAAI,GAAIJ,OAAO,CAACI,KAAK,CAAC,mBAAmB;MAC/C,OAAOA,KAAI,GAAIA,KAAK,CAAC,CAAC,IAAI,IAAG;IAC/B,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACC,SAAS,CAAC,MAAM;QACnB,IAAI,IAAI,CAACC,KAAK,CAACC,WAAW,EAAE;UAC1B,IAAI,CAACD,KAAK,CAACC,WAAW,CAACC,SAAQ,GAAI,IAAI,CAACF,KAAK,CAACC,WAAW,CAACE,YAAW;QACvE;MACF,CAAC;IACH,CAAC;IACD;IACA5B,oBAAoBA,CAAA,EAAG;MACrB,OAAOA,oBAAoB,CAAC,CAAC;IAC/B,CAAC;IACD;IACAC,iBAAiBA,CAAC4B,KAAK,EAAE;MACvB5B,iBAAiB,CAAC4B,KAAK,CAAC;IAC1B;EACF,CAAC;EACDC,KAAK,EAAE;IACLxB,QAAQ,EAAE;MACRyB,OAAOA,CAAA,EAAG;QACR,IAAI,CAACR,cAAc,CAAC;MACtB,CAAC;MACDS,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACV,cAAc,CAAC;EACtB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}