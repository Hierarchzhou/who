{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sticker-picker\"\n};\nconst _hoisted_2 = {\n  class: \"sticker-picker-header\"\n};\nconst _hoisted_3 = {\n  class: \"search-container\"\n};\nconst _hoisted_4 = {\n  class: \"categories\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"stickers-grid\",\n  ref: \"gridContainer\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"src\", \"alt\"];\nconst _hoisted_9 = {\n  key: 0,\n  class: \"loading-more\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"loading\"\n};\nconst _hoisted_11 = {\n  key: 2,\n  class: \"no-results\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 标题 \"), _createElementVNode(\"div\", _hoisted_2, _toDisplayString($data.currentCategory === 'trending' ? '热门表情' : $data.categories.find(c => c.id === $data.currentCategory)?.name || '表情包'), 1 /* TEXT */), _createCommentVNode(\" 搜索框 \"), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event),\n    placeholder: \"搜索表情包...\",\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.handleSearch && $options.handleSearch(...args)),\n    class: \"search-input\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.searchQuery]])]), _createCommentVNode(\" 分类标签 \"), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: category.id,\n      onClick: $event => $options.selectCategory(category),\n      class: _normalizeClass(['category-btn', {\n        active: $data.currentCategory === category.id\n      }])\n    }, _toDisplayString(category.name), 11 /* TEXT, CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" 表情包网格 \"), _createElementVNode(\"div\", _hoisted_6, [$data.stickers.length > 0 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stickers, sticker => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: sticker.id,\n      class: \"sticker-item\",\n      onClick: $event => $options.selectSticker(sticker)\n    }, [_createCommentVNode(\" 使用固定宽度的图片 \"), _createElementVNode(\"img\", {\n      src: sticker.images.fixed_width.url,\n      alt: sticker.title,\n      loading: \"lazy\"\n    }, null, 8 /* PROPS */, _hoisted_8)], 8 /* PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 将加载提示移到底部 \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \" 加载更多... \")) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"加载中...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"未找到相关表情\"))], 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_toDisplayString","$data","currentCategory","categories","find","c","id","name","_hoisted_3","type","_cache","$event","searchQuery","placeholder","onInput","args","$options","handleSearch","_hoisted_4","_Fragment","_renderList","category","onClick","selectCategory","_normalizeClass","active","_hoisted_5","_hoisted_6","stickers","length","sticker","selectSticker","src","images","fixed_width","url","alt","title","loading","_hoisted_8","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\StickerPicker.vue"],"sourcesContent":["<template>\r\n  <div class=\"sticker-picker\">\r\n    <!-- 标题 -->\r\n    <div class=\"sticker-picker-header\">\r\n      {{ currentCategory === 'trending' ? '热门表情' : categories.find(c => c.id === currentCategory)?.name || '表情包' }}\r\n    </div>\r\n\r\n    <!-- 搜索框 -->\r\n    <div class=\"search-container\">\r\n      <input \r\n        type=\"text\" \r\n        v-model=\"searchQuery\"\r\n        placeholder=\"搜索表情包...\"\r\n        @input=\"handleSearch\"\r\n        class=\"search-input\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 分类标签 -->\r\n    <div class=\"categories\">\r\n      <button \r\n        v-for=\"category in categories\" \r\n        :key=\"category.id\"\r\n        @click=\"selectCategory(category)\"\r\n        :class=\"['category-btn', { active: currentCategory === category.id }]\"\r\n      >\r\n        {{ category.name }}\r\n      </button>\r\n    </div>\r\n\r\n    <!-- 表情包网格 -->\r\n    <div class=\"stickers-grid\" ref=\"gridContainer\">\r\n      <template v-if=\"stickers.length > 0\">\r\n        <div \r\n          v-for=\"sticker in stickers\" \r\n          :key=\"sticker.id\" \r\n          class=\"sticker-item\"\r\n          @click=\"selectSticker(sticker)\"\r\n        >\r\n          <!-- 使用固定宽度的图片 -->\r\n          <img \r\n            :src=\"sticker.images.fixed_width.url\"\r\n            :alt=\"sticker.title\"\r\n            loading=\"lazy\"\r\n          />\r\n        </div>\r\n        <!-- 将加载提示移到底部 -->\r\n        <div v-if=\"loading\" class=\"loading-more\">\r\n          加载更多...\r\n        </div>\r\n      </template>\r\n      <div v-else-if=\"loading\" class=\"loading\">加载中...</div>\r\n      <div v-else class=\"no-results\">未找到相关表情</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { GiphyFetch } from '@giphy/js-fetch-api'\r\nimport { GIPHY_API_KEY, GIPHY_CONFIG } from '@/config/giphy'\r\n\r\n// 初始化 GIPHY API 客户端\r\nconst gf = new GiphyFetch(GIPHY_API_KEY)\r\n\r\nexport default {\r\n  name: 'StickerPicker',\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      stickers: [],\r\n      loading: false,\r\n      currentCategory: 'trending',\r\n      categories: [\r\n        { id: 'trending', name: '热门', searchTerm: '' },\r\n        { id: 'reactions', name: '反应', searchTerm: 'reaction' },\r\n        { id: 'memes', name: '梗图', searchTerm: 'meme' },\r\n        { id: 'anime', name: '动漫', searchTerm: 'anime' },\r\n        { id: 'cute', name: '可爱', searchTerm: 'cute' }\r\n      ],\r\n      searchTimeout: null,\r\n      offset: 0,  // 添加 offset 用于分页\r\n      hasMore: true  // 是否还有更多数据\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchStickers(options = {}, loadMore = false) {\r\n      if (!loadMore) {\r\n        this.offset = 0\r\n        this.hasMore = true\r\n      }\r\n      \r\n      if (!this.hasMore || this.loading) return\r\n\r\n      this.loading = true\r\n      try {\r\n        let response\r\n        const params = {\r\n          ...GIPHY_CONFIG,\r\n          ...options,\r\n          type: 'stickers',\r\n          limit: 20,\r\n          offset: this.offset\r\n        }\r\n\r\n        const currentCategory = this.categories.find(c => c.id === this.currentCategory)\r\n        const searchTerm = this.searchQuery || currentCategory?.searchTerm || ''\r\n\r\n        if (searchTerm) {\r\n          response = await gf.search(searchTerm, params)\r\n        } else {\r\n          response = await gf.trending(params)\r\n        }\r\n\r\n        // 更新数据\r\n        if (loadMore) {\r\n          const container = this.$refs.gridContainer\r\n          const scrollTop = container.scrollTop\r\n\r\n          this.stickers = [...this.stickers, ...response.data]\r\n\r\n          this.$nextTick(() => {\r\n            container.scrollTop = scrollTop\r\n          })\r\n        } else {\r\n          this.stickers = response.data\r\n        }\r\n\r\n        // 更新分页信息\r\n        this.offset += response.data.length\r\n        this.hasMore = response.pagination.total_count > this.offset\r\n      } catch (error) {\r\n        console.error('Error fetching stickers:', error)\r\n      }\r\n      this.loading = false\r\n    },\r\n\r\n    handleScroll(event) {\r\n      const container = event.target\r\n      const scrollBottom = container.scrollHeight - container.scrollTop - container.clientHeight\r\n      \r\n      // 当滚动到距离底部 100px 时加载更多，增加提前加载的距离\r\n      if (scrollBottom < 100 && !this.loading && this.hasMore) {\r\n        this.fetchStickers({}, true)\r\n      }\r\n    },\r\n\r\n    handleSearch() {\r\n      if (this.searchTimeout) {\r\n        clearTimeout(this.searchTimeout)\r\n      }\r\n      this.searchTimeout = setTimeout(() => {\r\n        this.fetchStickers()\r\n      }, 300)\r\n    },\r\n\r\n    selectCategory(category) {\r\n      this.currentCategory = category.id\r\n      this.searchQuery = ''  // 清空搜索框\r\n      this.fetchStickers()\r\n    },\r\n\r\n    selectSticker(sticker) {\r\n      this.$emit('select', {\r\n        id: sticker.id,\r\n        url: sticker.images.fixed_width.url,  // 使用固定宽度的图片\r\n        title: sticker.title\r\n      })\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchStickers()\r\n    // 添加滚动事件监听\r\n    this.$refs.gridContainer.addEventListener('scroll', this.handleScroll)\r\n  },\r\n  beforeUnmount() {\r\n    // 移除滚动事件监听\r\n    this.$refs.gridContainer?.removeEventListener('scroll', this.handleScroll)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.sticker-picker {\r\n  width: 420px;  /* 设置固定宽度 */\r\n  height: 500px;  /* 增加高度 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #2f3136;\r\n  border-radius: 12px;  /* 增加圆角 */\r\n  overflow: hidden;\r\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);  /* 增强阴影 */\r\n  position: absolute;\r\n  bottom: 100%;\r\n  left: 0;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.sticker-picker-header {\r\n  padding: 16px 20px;  /* 增加水平内边距 */\r\n  background: #202225;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.search-container {\r\n  padding: 12px 20px;  /* 增加水平内边距 */\r\n  background: #202225;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.06);\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 16px;  /* 增加内边距 */\r\n  border-radius: 6px;  /* 增加圆角 */\r\n  border: none;\r\n  background: #40444b;\r\n  color: #dcddde;\r\n  font-size: 14px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.search-input:focus {\r\n  outline: none;\r\n  background: #454950;\r\n  box-shadow: 0 0 0 2px rgba(88, 101, 242, 0.3);  /* 添加焦点轮廓 */\r\n}\r\n\r\n.search-input::placeholder {\r\n  color: #72767d;\r\n}\r\n\r\n.categories {\r\n  padding: 8px 16px;  /* 增加水平内边距 */\r\n  display: flex;\r\n  gap: 8px;\r\n  background: #2f3136;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.06);\r\n  overflow-x: auto;\r\n  scrollbar-width: none;\r\n  position: relative;  /* 为底部指示条定位 */\r\n}\r\n\r\n.categories::-webkit-scrollbar {\r\n  display: none;\r\n}\r\n\r\n.category-btn {\r\n  padding: 8px 16px;  /* 增加内边距 */\r\n  border: none;\r\n  border-radius: 6px;  /* 增加圆角 */\r\n  background: transparent;\r\n  color: #b9bbbe;\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n  transition: all 0.2s ease;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  position: relative;\r\n}\r\n\r\n.category-btn:hover {\r\n  color: #fff;\r\n  background: rgba(255, 255, 255, 0.05);\r\n}\r\n\r\n.category-btn.active {\r\n  color: #fff;\r\n  background: #454950;\r\n}\r\n\r\n.category-btn.active::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: -9px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 2px;\r\n  background: #5865f2;\r\n  border-radius: 1px;\r\n}\r\n\r\n.stickers-grid {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 16px;  /* 减小内边距以获得更多空间 */\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 16px;\r\n  background: #36393f;\r\n  align-content: start;\r\n}\r\n\r\n.sticker-item {\r\n  aspect-ratio: auto;  /* 移除固定宽高比，让它根据内容自适应 */\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  background: #2f3136;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 8px;  /* 减小内边距 */\r\n  position: relative;\r\n  min-height: 120px;  /* 设置最小高度 */\r\n}\r\n\r\n.sticker-item:hover {\r\n  transform: translateY(-2px);\r\n  background: #40444b;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.sticker-item img {\r\n  max-width: 100%;\r\n  max-height: 120px;  /* 限制最大高度 */\r\n  width: auto;\r\n  height: auto;\r\n  object-fit: contain;  /* 确保图片完整显示 */\r\n  transition: transform 0.2s ease;\r\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));  /* 添加图片阴影 */\r\n}\r\n\r\n.sticker-item:hover img {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.loading {\r\n  grid-column: 1 / -1;\r\n  text-align: center;\r\n  padding: 32px;  /* 增加内边距 */\r\n  color: #72767d;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 12px;\r\n}\r\n\r\n.loading::after {\r\n  content: '';\r\n  width: 20px;  /* 增加尺寸 */\r\n  height: 20px;\r\n  border: 2px solid #72767d;\r\n  border-top-color: transparent;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.loading-more {\r\n  grid-column: 1 / -1;\r\n  text-align: center;\r\n  padding: 16px;\r\n  color: #72767d;\r\n  font-size: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  background: transparent;\r\n}\r\n\r\n.loading-more::after {\r\n  content: '';\r\n  width: 16px;\r\n  height: 16px;\r\n  border: 2px solid #72767d;\r\n  border-top-color: transparent;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.no-results {\r\n  grid-column: 1 / -1;\r\n  text-align: center;\r\n  padding: 32px;\r\n  color: #72767d;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 滚动条样式 */\r\n.stickers-grid::-webkit-scrollbar {\r\n  width: 6px;  /* 减小宽度 */\r\n}\r\n\r\n.stickers-grid::-webkit-scrollbar-track {\r\n  background: transparent;\r\n}\r\n\r\n.stickers-grid::-webkit-scrollbar-thumb {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 3px;\r\n}\r\n\r\n.stickers-grid::-webkit-scrollbar-thumb:hover {\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n</style> "],"mappings":";;;;EACOA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAuB;;EAK7BA,KAAK,EAAC;AAAkB;;EAWxBA,KAAK,EAAC;AAAY;mBAnB3B;;EA+BSA,KAAK,EAAC,eAAe;EAACC,GAAG,EAAC;;mBA/BnC;mBAAA;;EAAAC,GAAA;EA+C4BF,KAAK,EAAC;;;EA/ClCE,GAAA;EAmD+BF,KAAK,EAAC;;;EAnDrCE,GAAA;EAoDkBF,KAAK,EAAC;;;uBAnDtBG,mBAAA,CAqDM,OArDNC,UAqDM,GApDJC,mBAAA,QAAW,EACXC,mBAAA,CAEM,OAFNC,UAEM,EAAAC,gBAAA,CADDC,KAAA,CAAAC,eAAe,2BAA2BD,KAAA,CAAAE,UAAU,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,KAAA,CAAAC,eAAe,GAAGK,IAAI,2BAGnGV,mBAAA,SAAY,EACZC,mBAAA,CAQM,OARNU,UAQM,G,gBAPJV,mBAAA,CAME;IALAW,IAAI,EAAC,MAAM;IAVnB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWiBV,KAAA,CAAAW,WAAW,GAAAD,MAAA;IACpBE,WAAW,EAAC,UAAU;IACrBC,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IACpBvB,KAAK,EAAC;iEAHGS,KAAA,CAAAW,WAAW,E,KAOxBf,mBAAA,UAAa,EACbC,mBAAA,CASM,OATNoB,UASM,I,kBARJvB,mBAAA,CAOSwB,SAAA,QA3BfC,WAAA,CAqB2BnB,KAAA,CAAAE,UAAU,EAAtBkB,QAAQ;yBADjB1B,mBAAA,CAOS;MALND,GAAG,EAAE2B,QAAQ,CAACf,EAAE;MAChBgB,OAAK,EAAAX,MAAA,IAAEK,QAAA,CAAAO,cAAc,CAACF,QAAQ;MAC9B7B,KAAK,EAxBdgC,eAAA;QAAAC,MAAA,EAwB2CxB,KAAA,CAAAC,eAAe,KAAKmB,QAAQ,CAACf;MAAE;wBAE/De,QAAQ,CAACd,IAAI,gCA1BxBmB,UAAA;oCA8BI7B,mBAAA,WAAc,EACdC,mBAAA,CAsBM,OAtBN6B,UAsBM,GArBY1B,KAAA,CAAA2B,QAAQ,CAACC,MAAM,Q,cAA/BlC,mBAAA,CAkBWwB,SAAA;IAlDjBzB,GAAA;EAAA,K,kBAiCQC,mBAAA,CAYMwB,SAAA,QA7CdC,WAAA,CAkC4BnB,KAAA,CAAA2B,QAAQ,EAAnBE,OAAO;yBADhBnC,mBAAA,CAYM;MAVHD,GAAG,EAAEoC,OAAO,CAACxB,EAAE;MAChBd,KAAK,EAAC,cAAc;MACnB8B,OAAK,EAAAX,MAAA,IAAEK,QAAA,CAAAe,aAAa,CAACD,OAAO;QAE7BjC,mBAAA,eAAkB,EAClBC,mBAAA,CAIE;MAHCkC,GAAG,EAAEF,OAAO,CAACG,MAAM,CAACC,WAAW,CAACC,GAAG;MACnCC,GAAG,EAAEN,OAAO,CAACO,KAAK;MACnBC,OAAO,EAAC;4BA3CpBC,UAAA,E,iBAAAC,UAAA;kCA8CQ3C,mBAAA,eAAkB,EACPI,KAAA,CAAAqC,OAAO,I,cAAlB3C,mBAAA,CAEM,OAFN8C,UAEM,EAFmC,WAEzC,KAjDR5C,mBAAA,e,+BAmDsBI,KAAA,CAAAqC,OAAO,I,cAAvB3C,mBAAA,CAAqD,OAArD+C,WAAqD,EAAZ,QAAM,M,cAC/C/C,mBAAA,CAA4C,OAA5CgD,WAA4C,EAAb,SAAO,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}