{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withModifiers as _withModifiers, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"message-input-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"emoji-picker-container\",\n  ref: \"emojiPicker\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_EmojiPicker = _resolveComponent(\"EmojiPicker\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 表情按钮 \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleEmojiPicker && $options.toggleEmojiPicker(...args)),\n    class: \"emoji-button\",\n    ref: \"emojiButton\"\n  }, \" 😊 \", 512 /* NEED_PATCH */), _createCommentVNode(\" 专业表情选择器 \"), $data.showEmojiPicker ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_EmojiPicker, {\n    native: true,\n    \"show-skin-tones\": true,\n    \"show-preview\": true,\n    \"show-categories\": true,\n    \"show-search\": true,\n    onSelect: $options.onEmojiSelect,\n    theme: \"dark\",\n    categories: $data.categories,\n    style: {\n      '--ep-color-bg': 'var(--background-primary)',\n      '--ep-color-border': 'var(--border-color)',\n      '--ep-color-sbg': 'var(--background-secondary)',\n      '--ep-color-active': 'var(--background-modifier-hover)'\n    }\n  }, null, 8 /* PROPS */, [\"onSelect\", \"categories\"])], 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.message = $event),\n    onKeydown: _cache[2] || (_cache[2] = _withKeys(_withModifiers((...args) => $options.sendMessage && $options.sendMessage(...args), [\"prevent\"]), [\"enter\"])),\n    placeholder: \"输入消息...\",\n    class: \"message-input\",\n    ref: \"messageInput\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.message]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.sendMessage && $options.sendMessage(...args)),\n    class: \"send-button\"\n  }, \" 发送 \")]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","onClick","_cache","args","$options","toggleEmojiPicker","$data","showEmojiPicker","_hoisted_2","_createVNode","_component_EmojiPicker","native","onSelect","onEmojiSelect","theme","categories","style","$event","message","onKeydown","_withKeys","_withModifiers","sendMessage","placeholder"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\MessageInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-input-container\">\r\n    <!-- 表情按钮 -->\r\n    <button @click=\"toggleEmojiPicker\" class=\"emoji-button\" ref=\"emojiButton\">\r\n      😊\r\n    </button>\r\n    \r\n    <!-- 专业表情选择器 -->\r\n    <div v-if=\"showEmojiPicker\" class=\"emoji-picker-container\" ref=\"emojiPicker\">\r\n      <EmojiPicker \r\n        :native=\"true\"\r\n        :show-skin-tones=\"true\"\r\n        :show-preview=\"true\"\r\n        :show-categories=\"true\"\r\n        :show-search=\"true\"\r\n        @select=\"onEmojiSelect\"\r\n        theme=\"dark\"\r\n        :categories=\"categories\"\r\n        :style=\"{\r\n          '--ep-color-bg': 'var(--background-primary)',\r\n          '--ep-color-border': 'var(--border-color)',\r\n          '--ep-color-sbg': 'var(--background-secondary)',\r\n          '--ep-color-active': 'var(--background-modifier-hover)'\r\n        }\"\r\n      />\r\n    </div>\r\n\r\n    <textarea\r\n      v-model=\"message\"\r\n      @keydown.enter.prevent=\"sendMessage\"\r\n      placeholder=\"输入消息...\"\r\n      class=\"message-input\"\r\n      ref=\"messageInput\"\r\n    ></textarea>\r\n    <button @click=\"sendMessage\" class=\"send-button\">\r\n      发送\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EmojiPicker from 'vue3-emoji-picker'\r\nimport 'vue3-emoji-picker/css'\r\n\r\nexport default {\r\n  name: 'MessageInput',\r\n  components: {\r\n    EmojiPicker\r\n  },\r\n  data() {\r\n    return {\r\n      message: '',  // 存储用户输入的消息\r\n      showEmojiPicker: false,  // 控制表情选择器的显示/隐藏\r\n      categories: [\r\n        {\r\n          name: \"最近使用\",\r\n          icon: \"🕒\"\r\n        },\r\n        {\r\n          name: \"表情\",\r\n          icon: \"😀\"\r\n        },\r\n        {\r\n          name: \"动物\",\r\n          icon: \"🐶\"\r\n        },\r\n        {\r\n          name: \"食物\",\r\n          icon: \"🍔\"\r\n        },\r\n        {\r\n          name: \"活动\",\r\n          icon: \"⚽\"\r\n        },\r\n        {\r\n          name: \"旅行\",\r\n          icon: \"🚗\"\r\n        },\r\n        {\r\n          name: \"物品\",\r\n          icon: \"💡\"\r\n        },\r\n        {\r\n          name: \"符号\",\r\n          icon: \"❤️\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    // 发送消息\r\n    sendMessage() {\r\n      if (this.message.trim()) {\r\n        this.$emit('send-message', this.message);\r\n        this.message = '';\r\n        this.$nextTick(() => {\r\n          this.$refs.messageInput.focus();\r\n        });\r\n      }\r\n    },\r\n    // 切换表情选择器的显示/隐藏\r\n    toggleEmojiPicker(event) {\r\n      // 阻止事件冒泡，避免立即触发document的点击事件\r\n      event.stopPropagation();\r\n      this.showEmojiPicker = !this.showEmojiPicker;\r\n    },\r\n    // 处理表情选择\r\n    onEmojiSelect(emoji) {\r\n      const textarea = this.$refs.messageInput;\r\n      const start = textarea.selectionStart;\r\n      const end = textarea.selectionEnd;\r\n      \r\n      // 插入表情\r\n      this.message = this.message.substring(0, start) + emoji.i + this.message.substring(end);\r\n      \r\n      // 更新光标位置\r\n      this.$nextTick(() => {\r\n        textarea.selectionStart = textarea.selectionEnd = start + emoji.i.length;\r\n        textarea.focus();\r\n      });\r\n      \r\n      this.showEmojiPicker = false;\r\n    },\r\n    // 处理点击外部\r\n    handleClickOutside(e) {\r\n      if (this.showEmojiPicker && \r\n          !this.$refs.emojiPicker?.contains(e.target) && \r\n          !this.$refs.emojiButton?.contains(e.target)) {\r\n        this.showEmojiPicker = false;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$refs.messageInput.focus();\r\n    document.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-input-container {\r\n  display: flex;\r\n  padding: 1rem;\r\n  background-color: var(--input-background); /* 使用主题变量 */\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.message-input {\r\n  flex: 1;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 1.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  color: var(--input-color); /* 使用主题变量 */\r\n  font-size: 0.95rem;\r\n  resize: none;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  transition: all 0.2s ease;\r\n  margin-left: 0.5rem;\r\n}\r\n\r\n.message-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb, 138, 113, 88), 0.2);\r\n}\r\n\r\n.message-input::placeholder {\r\n  color: var(--input-placeholder); /* 使用主题变量 */\r\n  opacity: 0.7;\r\n}\r\n\r\n.send-button {\r\n  margin-left: 0.75rem;\r\n  padding: 0.5rem 1.25rem;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 1.5rem;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: var(--secondary-color);\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.send-button:active {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* 修改表情选择器容器样式 */\r\n.emoji-picker-container {\r\n  position: absolute;\r\n  bottom: 100%;\r\n  left: 0;\r\n  background-color: var(--background-primary);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  margin-bottom: 8px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n  width: 320px;\r\n}\r\n\r\n.emoji-category {\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.category-title {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n  color: var(--text-normal);\r\n  padding: 0 8px;\r\n}\r\n\r\n.emoji-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  gap: 8px;\r\n  padding: 0 8px;\r\n}\r\n\r\n.emoji-item {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  padding: 8px;\r\n  border-radius: 4px;\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.emoji-item:hover {\r\n  background-color: var(--background-modifier-hover);\r\n  transform: scale(1.2);\r\n}\r\n\r\n/* 表情按钮样式优化 */\r\n.emoji-button {\r\n  padding: 0.5rem;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  transition: all 0.2s ease;\r\n  margin-right: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.emoji-button:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.emoji-button:focus {\r\n  outline: none;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAyB;;EADtCC,GAAA;EAQgCD,KAAK,EAAC,wBAAwB;EAACE,GAAG,EAAC;;;;uBAPjEC,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,mBAAA,UAAa,EACbC,mBAAA,CAES;IAFAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;IAAET,KAAK,EAAC,cAAc;IAACE,GAAG,EAAC;KAAc,MAE1E,yBAEAG,mBAAA,aAAgB,EACLO,KAAA,CAAAC,eAAe,I,cAA1BV,mBAAA,CAiBM,OAjBNW,UAiBM,GAhBJC,YAAA,CAeEC,sBAAA;IAdCC,MAAM,EAAE,IAAI;IACZ,iBAAe,EAAE,IAAI;IACrB,cAAY,EAAE,IAAI;IAClB,iBAAe,EAAE,IAAI;IACrB,aAAW,EAAE,IAAI;IACjBC,QAAM,EAAER,QAAA,CAAAS,aAAa;IACtBC,KAAK,EAAC,MAAM;IACXC,UAAU,EAAET,KAAA,CAAAS,UAAU;IACtBC,KAAK,EAAE;;;;;;iFAlBhBjB,mBAAA,gB,gBA2BIC,mBAAA,CAMY;IAjChB,uBAAAE,MAAA,QAAAA,MAAA,MAAAe,MAAA,IA4BeX,KAAA,CAAAY,OAAO,GAAAD,MAAA;IACfE,SAAO,EAAAjB,MAAA,QAAAA,MAAA,MA7BdkB,SAAA,CAAAC,cAAA,KAAAlB,IAAA,KA6B8BC,QAAA,CAAAkB,WAAA,IAAAlB,QAAA,CAAAkB,WAAA,IAAAnB,IAAA,CAAW;IACnCoB,WAAW,EAAC,SAAS;IACrB7B,KAAK,EAAC,eAAe;IACrBE,GAAG,EAAC;iEAJKU,KAAA,CAAAY,OAAO,E,GAMlBlB,mBAAA,CAES;IAFAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAkB,WAAA,IAAAlB,QAAA,CAAAkB,WAAA,IAAAnB,IAAA,CAAW;IAAET,KAAK,EAAC;KAAc,MAEjD,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}