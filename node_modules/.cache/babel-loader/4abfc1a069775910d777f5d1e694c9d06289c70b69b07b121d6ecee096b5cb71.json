{"ast":null,"code":"import AvatarSelector from './AvatarSelector.vue'; // 导入头像选择器组件\n\nexport default {\n  name: 'UserNameInput',\n  components: {\n    AvatarSelector // 注册头像选择器组件\n  },\n  data() {\n    return {\n      username: '',\n      // 存储用户输入的昵称\n      avatar: '',\n      // 存储用户选择的头像\n      error: null // 存储错误信息\n    };\n  },\n  methods: {\n    // 设置头像\n    setAvatar(avatarUrl) {\n      this.avatar = avatarUrl; // 更新头像URL\n    },\n    // 设置用户名\n    setUsername() {\n      // 验证用户名是否为空\n      if (!this.username.trim()) {\n        this.error = '昵称不能为空';\n        return;\n      }\n\n      // 验证用户名长度\n      if (this.username.length > 20) {\n        this.error = '昵称不能超过20个字符';\n        return;\n      }\n\n      // 清除错误信息\n      this.error = null;\n\n      // 发送用户名和头像到父组件\n      this.$emit('set-username', {\n        username: this.username,\n        avatar: this.avatar\n      });\n    }\n  }\n};","map":{"version":3,"names":["AvatarSelector","name","components","data","username","avatar","error","methods","setAvatar","avatarUrl","setUsername","trim","length","$emit"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\just-do-it\\src\\components\\chat\\UserNameInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"username-container\">\r\n    <div class=\"username-card\">\r\n      <h2 class=\"title\">欢迎来到聊天室</h2>\r\n      <p class=\"subtitle\">请设置您的个人信息</p>\r\n      \r\n      <div class=\"avatar-section\">\r\n        <AvatarSelector \r\n          :username=\"username\" \r\n          @avatar-selected=\"setAvatar\" \r\n        />\r\n        <p class=\"avatar-hint\">点击头像进行更换</p>\r\n      </div>\r\n      \r\n      <input \r\n        v-model=\"username\" \r\n        @keyup.enter=\"setUsername\"\r\n        type=\"text\" \r\n        placeholder=\"输入昵称...\" \r\n        class=\"username-input\"\r\n      />\r\n      \r\n      <p v-if=\"error\" class=\"error-message\">{{ error }}</p>\r\n      \r\n      <button @click=\"setUsername\" class=\"enter-button\">进入聊天室</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AvatarSelector from './AvatarSelector.vue'; // 导入头像选择器组件\r\n\r\nexport default {\r\n  name: 'UserNameInput',\r\n  components: {\r\n    AvatarSelector // 注册头像选择器组件\r\n  },\r\n  data() {\r\n    return {\r\n      username: '', // 存储用户输入的昵称\r\n      avatar: '', // 存储用户选择的头像\r\n      error: null // 存储错误信息\r\n    }\r\n  },\r\n  methods: {\r\n    // 设置头像\r\n    setAvatar(avatarUrl) {\r\n      this.avatar = avatarUrl; // 更新头像URL\r\n    },\r\n    \r\n    // 设置用户名\r\n    setUsername() {\r\n      // 验证用户名是否为空\r\n      if (!this.username.trim()) {\r\n        this.error = '昵称不能为空';\r\n        return;\r\n      }\r\n      \r\n      // 验证用户名长度\r\n      if (this.username.length > 20) {\r\n        this.error = '昵称不能超过20个字符';\r\n        return;\r\n      }\r\n      \r\n      // 清除错误信息\r\n      this.error = null;\r\n      \r\n      // 发送用户名和头像到父组件\r\n      this.$emit('set-username', {\r\n        username: this.username,\r\n        avatar: this.avatar\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.username-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: var(--background-color); /* 使用主题变量 */\r\n}\r\n\r\n.username-card {\r\n  background-color: var(--message-background); /* 使用主题变量 */\r\n  border-radius: 0.5rem;\r\n  padding: 2rem;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  width: 100%;\r\n  max-width: 400px;\r\n  text-align: center;\r\n}\r\n\r\n.title {\r\n  color: var(--primary-color); /* 使用主题变量 */\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.subtitle {\r\n  color: var(--timestamp-color); /* 使用主题变量 */\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.avatar-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.avatar-hint {\r\n  margin-top: 0.5rem;\r\n  font-size: 0.75rem;\r\n  color: var(--timestamp-color);\r\n}\r\n\r\n.username-input {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid var(--input-border-color); /* 使用主题变量 */\r\n  border-radius: 0.25rem;\r\n  font-size: 1rem;\r\n  margin-bottom: 1rem;\r\n  outline: none;\r\n  background-color: var(--input-background); /* 使用主题变量 */\r\n  color: var(--input-text-color); /* 使用主题变量 */\r\n}\r\n\r\n.username-input:focus {\r\n  border-color: var(--primary-color); /* 使用主题变量 */\r\n  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb, 88, 101, 242), 0.2);\r\n}\r\n\r\n.error-message {\r\n  color: #e74c3c; /* 错误信息保持红色 */\r\n  margin-bottom: 1rem;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.enter-button {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  background-color: var(--primary-color); /* 使用主题变量 */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.enter-button:hover {\r\n  background-color: var(--secondary-color); /* 使用主题变量 */\r\n}\r\n\r\n.enter-button:active {\r\n  filter: brightness(0.9);\r\n}\r\n</style> "],"mappings":"AA8BA,OAAOA,cAAa,MAAO,sBAAsB,EAAE;;AAEnD,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACVF,cAAa,CAAE;EACjB,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,MAAM,EAAE,EAAE;MAAE;MACZC,KAAK,EAAE,IAAG,CAAE;IACd;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,SAASA,CAACC,SAAS,EAAE;MACnB,IAAI,CAACJ,MAAK,GAAII,SAAS,EAAE;IAC3B,CAAC;IAED;IACAC,WAAWA,CAAA,EAAG;MACZ;MACA,IAAI,CAAC,IAAI,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC,EAAE;QACzB,IAAI,CAACL,KAAI,GAAI,QAAQ;QACrB;MACF;;MAEA;MACA,IAAI,IAAI,CAACF,QAAQ,CAACQ,MAAK,GAAI,EAAE,EAAE;QAC7B,IAAI,CAACN,KAAI,GAAI,aAAa;QAC1B;MACF;;MAEA;MACA,IAAI,CAACA,KAAI,GAAI,IAAI;;MAEjB;MACA,IAAI,CAACO,KAAK,CAAC,cAAc,EAAE;QACzBT,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,MAAM,EAAE,IAAI,CAACA;MACf,CAAC,CAAC;IACJ;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}