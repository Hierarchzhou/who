{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"message-list\",\n  ref: \"messageList\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"no-messages\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"message-avatar\"\n};\nconst _hoisted_5 = [\"src\", \"alt\"];\nconst _hoisted_6 = {\n  class: \"message-header\"\n};\nconst _hoisted_7 = {\n  class: \"username\"\n};\nconst _hoisted_8 = {\n  class: \"timestamp\"\n};\nconst _hoisted_9 = {\n  class: \"message-body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StickerMessage = _resolveComponent(\"StickerMessage\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.messages.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" 暂无消息，开始聊天吧！ \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id || message.timestamp,\n      class: \"message-item\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n      src: message.avatar || $data.defaultAvatar,\n      alt: message.username,\n      class: \"avatar-img\",\n      onError: _cache[0] || (_cache[0] = (...args) => $options.handleAvatarError && $options.handleAvatarError(...args))\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5)]), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"message\", {\n        'self': message.sender === $props.currentUsername,\n        'other': message.sender !== $props.currentUsername\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, _toDisplayString(message.username), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_8, _toDisplayString($options.formatTime(message.timestamp)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [$options.isSticker(message.content) ? (_openBlock(), _createBlock(_component_StickerMessage, {\n      key: 0,\n      \"sticker-id\": $options.extractStickerId(message.content)\n    }, null, 8 /* PROPS */, [\"sticker-id\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(_toDisplayString(message.content), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))])], 2 /* CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))]))], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_hoisted_1","$props","messages","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","message","id","timestamp","_createElementVNode","_hoisted_4","src","avatar","$data","defaultAvatar","alt","username","onError","_cache","args","$options","handleAvatarError","_hoisted_5","_normalizeClass","sender","currentUsername","_hoisted_6","_hoisted_7","_toDisplayString","_hoisted_8","formatTime","_hoisted_9","isSticker","content","_createBlock","_component_StickerMessage","extractStickerId","_createTextVNode"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\MessageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-list\" ref=\"messageList\">\r\n    <div v-if=\"messages.length === 0\" class=\"no-messages\">\r\n      暂无消息，开始聊天吧！\r\n    </div>\r\n    <div v-else>\r\n      <div \r\n        v-for=\"message in messages\" \r\n        :key=\"message.id || message.timestamp\" \r\n        class=\"message-item\"\r\n      >\r\n        <div class=\"message-avatar\">\r\n          <img \r\n            :src=\"message.avatar || defaultAvatar\" \r\n            :alt=\"message.username\" \r\n            class=\"avatar-img\" \r\n            @error=\"handleAvatarError\"\r\n          />\r\n        </div>\r\n        <div \r\n          class=\"message\"\r\n          :class=\"{ 'self': message.sender === currentUsername, 'other': message.sender !== currentUsername }\"\r\n        >\r\n          <div class=\"message-header\">\r\n            <span class=\"username\">{{ message.username }}</span>\r\n            <span class=\"timestamp\">{{ formatTime(message.timestamp) }}</span>\r\n          </div>\r\n          <div class=\"message-body\">\r\n            <template v-if=\"isSticker(message.content)\">\r\n              <StickerMessage :sticker-id=\"extractStickerId(message.content)\" />\r\n            </template>\r\n            <template v-else>\r\n              {{ message.content }}\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StickerMessage from './StickerMessage.vue'\r\nimport { formatTimestamp } from '@/utils/time'\r\n\r\nexport default {\r\n  name: 'MessageList',\r\n  components: {\r\n    StickerMessage\r\n  },\r\n  props: {\r\n    messages: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    currentUsername: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      defaultAvatar: 'https://api.dicebear.com/7.x/bottts/svg'  // 使用 DiceBear API 生成默认头像\r\n    }\r\n  },\r\n  methods: {\r\n    formatTime(timestamp) {\r\n      return formatTimestamp(timestamp)\r\n    },\r\n    // 检查是否是表情包消息\r\n    isSticker(content) {\r\n      return typeof content === 'string' && content.startsWith('[sticker:') && content.endsWith(']')\r\n    },\r\n    // 从消息内容中提取表情包ID\r\n    extractStickerId(content) {\r\n      if (!content) return null\r\n      const match = content.match(/\\[sticker:(.+?)\\]/)\r\n      return match ? match[1] : null\r\n    },\r\n    scrollToBottom() {\r\n      this.$nextTick(() => {\r\n        if (this.$refs.messageList) {\r\n          this.$refs.messageList.scrollTop = this.$refs.messageList.scrollHeight\r\n        }\r\n      })\r\n    },\r\n    // 处理头像加载错误\r\n    handleAvatarError(event) {\r\n      event.target.src = this.defaultAvatar\r\n    }\r\n  },\r\n  watch: {\r\n    messages: {\r\n      handler() {\r\n        this.scrollToBottom()\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  mounted() {\r\n    this.scrollToBottom()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: var(--chat-background); /* 使用主题变量 */\r\n  position: relative;\r\n}\r\n\r\n.message-item {\r\n  display: flex;\r\n  margin-bottom: 1.5rem;\r\n  align-items: flex-start;\r\n}\r\n\r\n.message-avatar {\r\n  margin-right: 0.75rem;\r\n  flex-shrink: 0;\r\n  position: relative;\r\n}\r\n\r\n.avatar-img {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: var(--avatar-border, 2px solid rgba(255, 255, 255, 0.1));\r\n  box-shadow: var(--avatar-shadow, 0 2px 4px rgba(0, 0, 0, 0.2));\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n  position: relative;\r\n  z-index: 1;\r\n  background-color: #2f3136; /* Discord avatar background color */\r\n}\r\n\r\n.avatar-img:hover {\r\n  transform: scale(1.1);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.message-avatar::after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: var(--online-indicator);\r\n  border-radius: 50%;\r\n  bottom: 0;\r\n  left: 0;\r\n  border: 2px solid var(--chat-background);\r\n  z-index: 2;\r\n}\r\n\r\n.message {\r\n  max-width: 80%;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 0.5rem;\r\n  position: relative;\r\n  animation: fadeIn 0.3s ease-out;\r\n  box-shadow: var(--message-shadow);\r\n  transition: transform 0.2s ease;\r\n  background-color: var(--other-message-bg); /* 使用主题变量 */\r\n  color: var(--other-message-color); /* 使用主题变量 */\r\n}\r\n\r\n.message:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.message.self {\r\n  background-color: var(--self-message-bg); /* 使用主题变量 */\r\n  color: var(--self-message-color); /* 使用主题变量 */\r\n}\r\n\r\n.message-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.85rem;\r\n  opacity: 0.8;\r\n}\r\n\r\n.username {\r\n  font-weight: bold;\r\n}\r\n\r\n.timestamp {\r\n  font-size: 0.75rem;\r\n  opacity: 0.7;\r\n  margin-left: 0.75rem;\r\n}\r\n\r\n.message-body {\r\n  word-break: break-word;\r\n  line-height: 1.4;\r\n}\r\n\r\n.no-messages {\r\n  text-align: center;\r\n  color: var(--timestamp-color); /* 使用主题变量 */\r\n  margin-top: 2rem;\r\n  font-style: italic;\r\n  opacity: 0.7;\r\n}\r\n\r\n/* 表情包消息样式 */\r\n.message-body :deep(.sticker-message) {\r\n  display: inline-block;\r\n  margin: 0.25rem 0;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC,cAAc;EAACC,GAAG,EAAC;;;EADhCC,GAAA;EAEsCF,KAAK,EAAC;;;EAF5CE,GAAA;AAAA;;EAWaF,KAAK,EAAC;AAAgB;mBAXnC;;EAuBeA,KAAK,EAAC;AAAgB;;EACnBA,KAAK,EAAC;AAAU;;EAChBA,KAAK,EAAC;AAAW;;EAEpBA,KAAK,EAAC;AAAc;;;uBA1BjCG,mBAAA,CAqCM,OArCNC,UAqCM,GApCOC,MAAA,CAAAC,QAAQ,CAACC,MAAM,U,cAA1BJ,mBAAA,CAEM,OAFNK,UAEM,EAFgD,eAEtD,M,cACAL,mBAAA,CAgCM,OArCVM,UAAA,I,kBAMMN,mBAAA,CA8BMO,SAAA,QApCZC,WAAA,CAO0BN,MAAA,CAAAC,QAAQ,EAAnBM,OAAO;yBADhBT,mBAAA,CA8BM;MA5BHD,GAAG,EAAEU,OAAO,CAACC,EAAE,IAAID,OAAO,CAACE,SAAS;MACrCd,KAAK,EAAC;QAENe,mBAAA,CAOM,OAPNC,UAOM,GANJD,mBAAA,CAKE;MAJCE,GAAG,EAAEL,OAAO,CAACM,MAAM,IAAIC,KAAA,CAAAC,aAAa;MACpCC,GAAG,EAAET,OAAO,CAACU,QAAQ;MACtBtB,KAAK,EAAC,YAAY;MACjBuB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;6CAhBrCG,UAAA,E,GAmBQb,mBAAA,CAgBM;MAfJf,KAAK,EApBf6B,eAAA,EAoBgB,SAAS;QAAA,QACGjB,OAAO,CAACkB,MAAM,KAAKzB,MAAA,CAAA0B,eAAe;QAAA,SAAWnB,OAAO,CAACkB,MAAM,KAAKzB,MAAA,CAAA0B;MAAe;QAEjGhB,mBAAA,CAGM,OAHNiB,UAGM,GAFJjB,mBAAA,CAAoD,QAApDkB,UAAoD,EAAAC,gBAAA,CAA1BtB,OAAO,CAACU,QAAQ,kBAC1CP,mBAAA,CAAkE,QAAlEoB,UAAkE,EAAAD,gBAAA,CAAvCR,QAAA,CAAAU,UAAU,CAACxB,OAAO,CAACE,SAAS,kB,GAEzDC,mBAAA,CAOM,OAPNsB,UAOM,GANYX,QAAA,CAAAY,SAAS,CAAC1B,OAAO,CAAC2B,OAAO,K,cACvCC,YAAA,CAAkEC,yBAAA;MA7BhFvC,GAAA;MA6B+B,YAAU,EAAEwB,QAAA,CAAAgB,gBAAgB,CAAC9B,OAAO,CAAC2B,OAAO;8DAE/DpC,mBAAA,CAEWO,SAAA;MAjCvBR,GAAA;IAAA,IAAAyC,gBAAA,CAAAT,gBAAA,CAgCiBtB,OAAO,CAAC2B,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}