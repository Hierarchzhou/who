{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport CreateServerModal from './CreateServerModal.vue';\nexport default {\n  name: 'ServerList',\n  components: {\n    CreateServerModal\n  },\n  data() {\n    return {\n      // 从localStorage获取服务器列表\n      localServers: JSON.parse(localStorage.getItem('chat-servers') || '[]'),\n      showCreateDialog: false\n    };\n  },\n  props: {\n    // 外部传入的服务器列表\n    externalServers: {\n      type: Array,\n      default: () => []\n    },\n    currentServerId: {\n      type: String,\n      default: 'home'\n    }\n  },\n  computed: {\n    // 合并本地服务器和外部服务器\n    servers() {\n      return [...this.localServers, ...this.externalServers];\n    }\n  },\n  methods: {\n    changeServer(server) {\n      this.$emit('change-server', server);\n    },\n    getServerAcronym(name) {\n      // 获取服务器名称的首字母或第一个字符\n      return name.split(/\\s+/).map(word => word[0]).join('').slice(0, 2).toUpperCase();\n    },\n    // 处理localStorage变化\n    handleStorageChange(event) {\n      if (event.key === 'chat-servers') {\n        this.localServers = JSON.parse(event.newValue || '[]');\n      }\n    },\n    // 打开创建对话框\n    openCreateDialog() {\n      this.showCreateDialog = true;\n    },\n    // 关闭创建对话框\n    closeCreateDialog() {\n      this.showCreateDialog = false;\n    },\n    // 处理服务器创建\n    handleServerCreate(serverData) {\n      const newServer = {\n        id: Date.now().toString(),\n        ...serverData,\n        channels: [{\n          id: 'general',\n          name: 'general',\n          type: 'text',\n          description: 'General chat channel for everyone'\n        }],\n        roles: [{\n          id: 'admin',\n          name: '管理员',\n          permissions: ['manage_server', 'manage_channels', 'manage_roles']\n        }, {\n          id: 'member',\n          name: '成员',\n          permissions: ['send_messages', 'read_messages']\n        }],\n        categories: [{\n          id: 'text-channels',\n          name: '文字频道',\n          type: 'category',\n          channels: ['general']\n        }],\n        members: [],\n        createdAt: new Date().toISOString()\n      };\n\n      // 保存到localStorage\n      const servers = [...this.localServers, newServer];\n      localStorage.setItem('chat-servers', JSON.stringify(servers));\n      this.localServers = servers;\n\n      // 切换到新服务器\n      this.changeServer(newServer);\n    }\n  },\n  // 监听localStorage变化\n  mounted() {\n    window.addEventListener('storage', this.handleStorageChange);\n  },\n  beforeUnmount() {\n    window.removeEventListener('storage', this.handleStorageChange);\n  }\n};","map":{"version":3,"names":["CreateServerModal","name","components","data","localServers","JSON","parse","localStorage","getItem","showCreateDialog","props","externalServers","type","Array","default","currentServerId","String","computed","servers","methods","changeServer","server","$emit","getServerAcronym","split","map","word","join","slice","toUpperCase","handleStorageChange","event","key","newValue","openCreateDialog","closeCreateDialog","handleServerCreate","serverData","newServer","id","Date","now","toString","channels","description","roles","permissions","categories","members","createdAt","toISOString","setItem","stringify","mounted","window","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\components\\chat\\ServerList.vue"],"sourcesContent":["<template>\r\n  <div class=\"server-list\">\r\n    <!-- Home Button -->\r\n    <div class=\"server-section\">\r\n      <div \r\n        class=\"server-item home-button\"\r\n        :class=\"{ active: currentServerId === 'home' }\"\r\n        @click=\"changeServer({ id: 'home', name: '主页' })\"\r\n      >\r\n        <div class=\"server-icon\">\r\n          <img src=\"/favicon.ico\" alt=\"主页\" class=\"server-icon-image\" />\r\n        </div>\r\n        <div class=\"server-pill\" :class=\"{ active: currentServerId === 'home' }\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Server List Divider -->\r\n    <div class=\"server-divider\"></div>\r\n\r\n    <!-- Servers Section -->\r\n    <div class=\"server-section servers-container\">\r\n      <div \r\n        v-for=\"server in servers\" \r\n        :key=\"server.id\"\r\n        class=\"server-item\"\r\n        :class=\"{ active: currentServerId === server.id }\"\r\n        @click=\"changeServer(server)\"\r\n      >\r\n        <div class=\"server-icon\">\r\n          <template v-if=\"server.icon\">\r\n            <img :src=\"server.icon\" :alt=\"server.name\" class=\"server-icon-image\" />\r\n          </template>\r\n          <template v-else>\r\n            <div class=\"server-acronym\">{{ getServerAcronym(server.name) }}</div>\r\n          </template>\r\n        </div>\r\n        <div class=\"server-pill\" :class=\"{ active: currentServerId === server.id }\"></div>\r\n        <div v-if=\"server.hasNotification\" class=\"notification-badge\"></div>\r\n        <div v-if=\"server.mentionCount\" class=\"mention-badge\">{{ server.mentionCount }}</div>\r\n      </div>\r\n\r\n      <!-- Add Server Button -->\r\n      <div class=\"server-item add-server\" @click=\"openCreateDialog\">\r\n        <div class=\"server-icon\">\r\n          <span class=\"add-icon\">+</span>\r\n        </div>\r\n        <div class=\"server-tooltip\">添加服务器</div>\r\n      </div>\r\n\r\n      <!-- Explore Servers Button -->\r\n      <div class=\"server-item explore-servers\" @click=\"$emit('explore-servers')\">\r\n        <div class=\"server-icon\">\r\n          <span class=\"compass-icon\">🧭</span>\r\n        </div>\r\n        <div class=\"server-tooltip\">探索服务器</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Bottom Section -->\r\n    <div class=\"server-section\">\r\n      <div class=\"server-divider\"></div>\r\n      <div class=\"server-item settings-button\" @click=\"$emit('open-settings')\">\r\n        <div class=\"server-icon\">\r\n          <span class=\"settings-icon\">⚙️</span>\r\n        </div>\r\n        <div class=\"server-tooltip\">用户设置</div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 创建服务器的对话框 -->\r\n    <CreateServerModal \r\n      :is-open=\"showCreateDialog\"\r\n      @close=\"closeCreateDialog\"\r\n      @create=\"handleServerCreate\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CreateServerModal from './CreateServerModal.vue'\r\n\r\nexport default {\r\n  name: 'ServerList',\r\n  components: {\r\n    CreateServerModal\r\n  },\r\n  data() {\r\n    return {\r\n      // 从localStorage获取服务器列表\r\n      localServers: JSON.parse(localStorage.getItem('chat-servers') || '[]'),\r\n      showCreateDialog: false\r\n    }\r\n  },\r\n  props: {\r\n    // 外部传入的服务器列表\r\n    externalServers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    currentServerId: {\r\n      type: String,\r\n      default: 'home'\r\n    }\r\n  },\r\n  computed: {\r\n    // 合并本地服务器和外部服务器\r\n    servers() {\r\n      return [...this.localServers, ...this.externalServers]\r\n    }\r\n  },\r\n  methods: {\r\n    changeServer(server) {\r\n      this.$emit('change-server', server)\r\n    },\r\n    getServerAcronym(name) {\r\n      // 获取服务器名称的首字母或第一个字符\r\n      return name\r\n        .split(/\\s+/)\r\n        .map(word => word[0])\r\n        .join('')\r\n        .slice(0, 2)\r\n        .toUpperCase()\r\n    },\r\n    // 处理localStorage变化\r\n    handleStorageChange(event) {\r\n      if (event.key === 'chat-servers') {\r\n        this.localServers = JSON.parse(event.newValue || '[]')\r\n      }\r\n    },\r\n    // 打开创建对话框\r\n    openCreateDialog() {\r\n      this.showCreateDialog = true\r\n    },\r\n    // 关闭创建对话框\r\n    closeCreateDialog() {\r\n      this.showCreateDialog = false\r\n    },\r\n    // 处理服务器创建\r\n    handleServerCreate(serverData) {\r\n      const newServer = {\r\n        id: Date.now().toString(),\r\n        ...serverData,\r\n        channels: [\r\n          {\r\n            id: 'general',\r\n            name: 'general',\r\n            type: 'text',\r\n            description: 'General chat channel for everyone'\r\n          }\r\n        ],\r\n        roles: [\r\n          {\r\n            id: 'admin',\r\n            name: '管理员',\r\n            permissions: ['manage_server', 'manage_channels', 'manage_roles']\r\n          },\r\n          {\r\n            id: 'member',\r\n            name: '成员',\r\n            permissions: ['send_messages', 'read_messages']\r\n          }\r\n        ],\r\n        categories: [\r\n          {\r\n            id: 'text-channels',\r\n            name: '文字频道',\r\n            type: 'category',\r\n            channels: ['general']\r\n          }\r\n        ],\r\n        members: [],\r\n        createdAt: new Date().toISOString()\r\n      }\r\n      \r\n      // 保存到localStorage\r\n      const servers = [...this.localServers, newServer]\r\n      localStorage.setItem('chat-servers', JSON.stringify(servers))\r\n      this.localServers = servers\r\n      \r\n      // 切换到新服务器\r\n      this.changeServer(newServer)\r\n    }\r\n  },\r\n  // 监听localStorage变化\r\n  mounted() {\r\n    window.addEventListener('storage', this.handleStorageChange)\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('storage', this.handleStorageChange)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.server-list {\r\n  width: 72px;\r\n  height: 100vh;\r\n  background-color: var(--background-tertiary);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 12px 0;\r\n  gap: 8px;\r\n  position: relative;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.server-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.servers-container {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 0 12px;\r\n}\r\n\r\n.server-divider {\r\n  width: 32px;\r\n  height: 2px;\r\n  background-color: var(--background-accent);\r\n  border-radius: 1px;\r\n  margin: 4px 0;\r\n}\r\n\r\n.server-item {\r\n  position: relative;\r\n  width: 48px;\r\n  height: 48px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  transition: all 0.2s ease;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.server-item:hover {\r\n  border-radius: 16px;\r\n  background-color: var(--primary-color);\r\n}\r\n\r\n.server-item.active {\r\n  border-radius: 16px;\r\n}\r\n\r\n.server-icon {\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: inherit;\r\n  background-color: var(--background-accent);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.server-icon-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.server-acronym {\r\n  color: var(--text-normal);\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: var(--background-accent);\r\n  border-radius: inherit;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.server-item:hover .server-acronym {\r\n  color: var(--text-normal);\r\n  background-color: var(--primary-color);\r\n}\r\n\r\n.server-item.active .server-acronym {\r\n  color: var(--text-normal);\r\n  background-color: var(--primary-color);\r\n}\r\n\r\n.server-pill {\r\n  position: absolute;\r\n  left: -16px;\r\n  width: 8px;\r\n  height: 0;\r\n  background-color: var(--text-normal);\r\n  border-radius: 0 4px 4px 0;\r\n  transition: height 0.2s ease;\r\n}\r\n\r\n.server-item:hover .server-pill {\r\n  height: 20px;\r\n}\r\n\r\n.server-pill.active {\r\n  height: 40px;\r\n  background-color: var(--text-normal);\r\n}\r\n\r\n.notification-badge {\r\n  position: absolute;\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: var(--primary-color);\r\n  border-radius: 50%;\r\n  bottom: 0;\r\n  right: 0;\r\n}\r\n\r\n.mention-badge {\r\n  position: absolute;\r\n  min-width: 16px;\r\n  height: 16px;\r\n  padding: 0 4px;\r\n  background-color: var(--dnd-color);\r\n  border-radius: 8px;\r\n  color: var(--text-normal);\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  bottom: -4px;\r\n  right: -4px;\r\n}\r\n\r\n.add-icon, .compass-icon, .settings-icon {\r\n  font-size: 24px;\r\n  color: var(--interactive-normal);\r\n}\r\n\r\n.server-tooltip {\r\n  position: absolute;\r\n  left: 100%;\r\n  margin-left: 8px;\r\n  padding: 8px 12px;\r\n  background-color: var(--background-primary);\r\n  border-radius: 4px;\r\n  color: var(--text-normal);\r\n  font-size: 14px;\r\n  white-space: nowrap;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  transform: translateX(-8px);\r\n  transition: all 0.2s ease;\r\n  z-index: 1000;\r\n}\r\n\r\n.server-tooltip::before {\r\n  content: '';\r\n  position: absolute;\r\n  left: -4px;\r\n  top: 50%;\r\n  transform: translateY(-50%) rotate(45deg);\r\n  width: 8px;\r\n  height: 8px;\r\n  background-color: var(--background-primary);\r\n}\r\n\r\n.server-item:hover .server-tooltip {\r\n  opacity: 1;\r\n  transform: translateX(0);\r\n}\r\n\r\n/* 滚动条样式 */\r\n.servers-container::-webkit-scrollbar {\r\n  width: 0;\r\n  background: transparent;\r\n}\r\n\r\n/* 响应式样式 */\r\n@media (max-width: 768px) {\r\n  .server-list {\r\n    width: 100%;\r\n    height: 72px;\r\n    flex-direction: row;\r\n    padding: 0 12px;\r\n  }\r\n\r\n  .server-section {\r\n    flex-direction: row;\r\n  }\r\n\r\n  .servers-container {\r\n    flex-direction: row;\r\n    overflow-x: auto;\r\n    padding: 12px;\r\n  }\r\n\r\n  .server-divider {\r\n    width: 2px;\r\n    height: 32px;\r\n    margin: 0 8px;\r\n  }\r\n\r\n  .server-item {\r\n    margin-right: 8px;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .server-pill {\r\n    display: none;\r\n  }\r\n\r\n  .server-tooltip {\r\n    display: none;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}