{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { useStore } from 'vuex';\nimport { computed } from 'vue';\nexport default {\n  name: 'OnlineUsersSidebar',\n  props: {\n    onlineUsers: {\n      type: Array,\n      required: true,\n      default: () => []\n    }\n  },\n  emits: ['open-profile-editor'],\n  setup(props, {\n    emit\n  }) {\n    const store = useStore();\n    const defaultAvatar = 'https://ui-avatars.com/api/?name=User&background=random';\n    const currentUsername = computed(() => store.getters['userProfile/username']);\n    const currentUserAvatar = computed(() => store.getters['userProfile/avatar']);\n    const currentUserStatus = computed(() => store.getters['userProfile/status']);\n\n    // 添加其他用户的计算属性\n    const otherUsers = computed(() => props.onlineUsers.filter(user => user.username !== currentUsername.value));\n    const getStatusText = status => {\n      const statusMap = {\n        online: '在线',\n        away: '离开',\n        busy: '请勿打扰',\n        invisible: '隐身'\n      };\n      return statusMap[status] || '离线';\n    };\n    const getCurrentUserAvatar = () => {\n      return currentUserAvatar.value || defaultAvatar;\n    };\n    const onAvatarError = e => {\n      e.target.src = defaultAvatar;\n    };\n\n    // 添加处理头像点击的方法\n    const handleAvatarClick = () => {\n      emit('open-profile-editor');\n    };\n    return {\n      currentUsername,\n      currentUserStatus,\n      defaultAvatar,\n      getCurrentUserAvatar,\n      onAvatarError,\n      getStatusText,\n      otherUsers,\n      handleAvatarClick\n    };\n  }\n};","map":{"version":3,"names":["useStore","computed","name","props","onlineUsers","type","Array","required","default","emits","setup","emit","store","defaultAvatar","currentUsername","getters","currentUserAvatar","currentUserStatus","otherUsers","filter","user","username","value","getStatusText","status","statusMap","online","away","busy","invisible","getCurrentUserAvatar","onAvatarError","e","target","src","handleAvatarClick"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\components\\chat\\OnlineUsersSidebar.vue"],"sourcesContent":["<template>\n  <div class=\"online-users-sidebar\">\n    <!-- 频道头部 -->\n    <div class=\"sidebar-header\">\n      <h3 class=\"sidebar-title\">在线用户 ({{ onlineUsers.length }})</h3>\n    </div>\n    \n    <!-- 用户列表 -->\n    <div class=\"users-list\">\n      <!-- 当前用户 -->\n      <div class=\"user-item current-user\" v-if=\"currentUsername\">\n        <div class=\"user-avatar-container\">\n          <img \n            :src=\"getCurrentUserAvatar()\" \n            alt=\"当前用户头像\" \n            class=\"user-avatar clickable\"\n            @error=\"onAvatarError\"\n            @click=\"handleAvatarClick\"\n          />\n          <div :class=\"['user-status', currentUserStatus]\"></div>\n        </div>\n        <div class=\"user-info\">\n          <div class=\"user-name\">{{ currentUsername }} <span class=\"user-tag\">(我)</span></div>\n          <div class=\"user-status-text\">{{ getStatusText(currentUserStatus) }}</div>\n        </div>\n      </div>\n      \n      <!-- 分隔线 -->\n      <div class=\"sidebar-divider\"></div>\n      \n      <!-- 其他在线用户 -->\n      <div \n        v-for=\"user in otherUsers\" \n        :key=\"user.username\"\n        class=\"user-item\"\n      >\n        <div class=\"user-avatar-container\">\n          <img \n            :src=\"user.avatar || defaultAvatar\" \n            alt=\"用户头像\" \n            class=\"user-avatar\"\n            @error=\"onAvatarError\"\n          />\n          <div class=\"user-status online\"></div>\n        </div>\n        <div class=\"user-info\">\n          <div class=\"user-name\">{{ user.username }}</div>\n          <div class=\"user-status-text\">在线</div>\n        </div>\n      </div>\n      \n      <!-- 无用户时的提示 -->\n      <div v-if=\"otherUsers.length === 0 && !currentUsername\" class=\"no-users\">\n        暂无其他用户在线\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { useStore } from 'vuex'\nimport { computed } from 'vue'\n\nexport default {\n  name: 'OnlineUsersSidebar',\n  props: {\n    onlineUsers: {\n      type: Array,\n      required: true,\n      default: () => []\n    }\n  },\n  emits: ['open-profile-editor'],\n  setup(props, { emit }) {\n    const store = useStore()\n    const defaultAvatar = 'https://ui-avatars.com/api/?name=User&background=random'\n\n    const currentUsername = computed(() => store.getters['userProfile/username'])\n    const currentUserAvatar = computed(() => store.getters['userProfile/avatar'])\n    const currentUserStatus = computed(() => store.getters['userProfile/status'])\n    \n    // 添加其他用户的计算属性\n    const otherUsers = computed(() => \n      props.onlineUsers.filter(user => user.username !== currentUsername.value)\n    )\n\n    const getStatusText = (status) => {\n      const statusMap = {\n        online: '在线',\n        away: '离开',\n        busy: '请勿打扰',\n        invisible: '隐身'\n      }\n      return statusMap[status] || '离线'\n    }\n\n    const getCurrentUserAvatar = () => {\n      return currentUserAvatar.value || defaultAvatar\n    }\n\n    const onAvatarError = (e) => {\n      e.target.src = defaultAvatar\n    }\n\n    // 添加处理头像点击的方法\n    const handleAvatarClick = () => {\n      emit('open-profile-editor')\n    }\n\n    return {\n      currentUsername,\n      currentUserStatus,\n      defaultAvatar,\n      getCurrentUserAvatar,\n      onAvatarError,\n      getStatusText,\n      otherUsers,\n      handleAvatarClick\n    }\n  }\n}\n</script>\n\n<style scoped>\n.online-users-sidebar {\n  width: 240px; /* Discord频道列表宽度 */\n  height: 100vh;\n  background-color: #2f3136; /* Discord频道列表背景色 */\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  border-right: 1px solid #202225;\n}\n\n.sidebar-header {\n  padding: 16px;\n  border-bottom: 1px solid rgba(79, 84, 92, 0.48);\n  box-shadow: 0 1px 0 rgba(4, 4, 5, 0.2);\n}\n\n.sidebar-title {\n  color: #ffffff;\n  font-size: 16px;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.users-list {\n  flex: 1;\n  overflow-y: auto;\n  padding: 8px 0;\n}\n\n.user-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  cursor: pointer;\n  border-radius: 4px;\n  margin: 0 8px;\n  transition: background-color 0.2s ease;\n}\n\n.user-item:hover {\n  background-color: rgba(79, 84, 92, 0.16);\n}\n\n.user-item.current-user {\n  background-color: rgba(79, 84, 92, 0.32);\n}\n\n.user-avatar-container {\n  position: relative;\n  margin-right: 12px;\n}\n\n.user-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  object-fit: cover;\n}\n\n.user-status {\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  bottom: 0;\n  left: 0;\n  border: 2px solid #2f3136;\n}\n\n.user-status.online {\n  background-color: #43b581;\n}\n\n.user-status.away {\n  background-color: #faa61a;\n}\n\n.user-status.busy {\n  background-color: #f04747;\n}\n\n.user-status.invisible {\n  background-color: #747f8d;\n}\n\n.user-info {\n  flex: 1;\n  overflow: hidden;\n}\n\n.user-name {\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.user-tag {\n  color: #b9bbbe;\n  font-size: 12px;\n  font-weight: normal;\n}\n\n.user-status-text {\n  color: #b9bbbe;\n  font-size: 12px;\n  margin-top: 2px;\n}\n\n.sidebar-divider {\n  height: 1px;\n  background-color: rgba(79, 84, 92, 0.48);\n  margin: 8px 10px;\n}\n\n.no-users {\n  padding: 16px;\n  color: #b9bbbe;\n  font-style: italic;\n  text-align: center;\n}\n\n/* 滚动条样式 */\n.users-list::-webkit-scrollbar {\n  width: 4px;\n}\n\n.users-list::-webkit-scrollbar-thumb {\n  background-color: #202225;\n  border-radius: 2px;\n}\n\n.users-list::-webkit-scrollbar-track {\n  background-color: transparent;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .online-users-sidebar {\n    width: 100%;\n    height: auto;\n    max-height: 200px;\n    border-right: none;\n    border-bottom: 1px solid #202225;\n  }\n  \n  .users-list {\n    display: flex;\n    flex-wrap: wrap;\n    padding: 8px;\n  }\n  \n  .user-item {\n    width: auto;\n    margin: 4px;\n  }\n}\n\n.user-avatar.clickable {\n  cursor: pointer;\n  transition: transform 0.2s ease;\n}\n\n.user-avatar.clickable:hover {\n  transform: scale(1.1);\n}\n</style> "],"mappings":";;AA4DA,SAASA,QAAO,QAAS,MAAK;AAC9B,SAASC,QAAO,QAAS,KAAI;AAE7B,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,KAAK,EAAE,CAAC,qBAAqB,CAAC;EAC9BC,KAAKA,CAACP,KAAK,EAAE;IAAEQ;EAAK,CAAC,EAAE;IACrB,MAAMC,KAAI,GAAIZ,QAAQ,CAAC;IACvB,MAAMa,aAAY,GAAI,yDAAwD;IAE9E,MAAMC,eAAc,GAAIb,QAAQ,CAAC,MAAMW,KAAK,CAACG,OAAO,CAAC,sBAAsB,CAAC;IAC5E,MAAMC,iBAAgB,GAAIf,QAAQ,CAAC,MAAMW,KAAK,CAACG,OAAO,CAAC,oBAAoB,CAAC;IAC5E,MAAME,iBAAgB,GAAIhB,QAAQ,CAAC,MAAMW,KAAK,CAACG,OAAO,CAAC,oBAAoB,CAAC;;IAE5E;IACA,MAAMG,UAAS,GAAIjB,QAAQ,CAAC,MAC1BE,KAAK,CAACC,WAAW,CAACe,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,QAAO,KAAMP,eAAe,CAACQ,KAAK,CAC1E;IAEA,MAAMC,aAAY,GAAKC,MAAM,IAAK;MAChC,MAAMC,SAAQ,GAAI;QAChBC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,MAAM;QACZC,SAAS,EAAE;MACb;MACA,OAAOJ,SAAS,CAACD,MAAM,KAAK,IAAG;IACjC;IAEA,MAAMM,oBAAmB,GAAIA,CAAA,KAAM;MACjC,OAAOd,iBAAiB,CAACM,KAAI,IAAKT,aAAY;IAChD;IAEA,MAAMkB,aAAY,GAAKC,CAAC,IAAK;MAC3BA,CAAC,CAACC,MAAM,CAACC,GAAE,GAAIrB,aAAY;IAC7B;;IAEA;IACA,MAAMsB,iBAAgB,GAAIA,CAAA,KAAM;MAC9BxB,IAAI,CAAC,qBAAqB;IAC5B;IAEA,OAAO;MACLG,eAAe;MACfG,iBAAiB;MACjBJ,aAAa;MACbiB,oBAAoB;MACpBC,aAAa;MACbR,aAAa;MACbL,UAAU;MACViB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}