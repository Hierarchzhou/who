{"ast":null,"code":"import LoginForm from './components/auth/LoginForm.vue';\nimport ChatContainer from './components/chat/ChatContainer.vue';\nimport ServerList from './components/chat/ServerList.vue';\nimport OnlineUsersSidebar from './components/chat/OnlineUsersSidebar.vue';\nimport UserProfileEditor from './components/profile/UserProfileEditor.vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'App',\n  components: {\n    LoginForm,\n    ChatContainer,\n    ServerList,\n    OnlineUsersSidebar,\n    UserProfileEditor\n  },\n  data() {\n    return {\n      username: '',\n      avatar: '',\n      onlineUsers: [],\n      showProfileEditor: false,\n      userInfo: {\n        username: '',\n        avatar: '',\n        bio: ''\n      }\n    };\n  },\n  created() {\n    const store = useStore();\n\n    // 从localStorage获取用户信息\n    const savedUsername = localStorage.getItem('chat-username');\n    const savedAvatar = localStorage.getItem('chat-avatar');\n    const savedBio = localStorage.getItem('chat-bio');\n    if (savedUsername) {\n      this.username = savedUsername;\n      this.avatar = savedAvatar || '';\n      this.userInfo = {\n        username: savedUsername,\n        avatar: savedAvatar || '',\n        bio: savedBio || ''\n      };\n\n      // 初始化用户状态\n      store.dispatch('userStatus/setStatus', 'online');\n    }\n\n    // 应用保存的主题\n    const savedTheme = localStorage.getItem('chat-theme') || 'discord';\n    document.body.classList.add(`theme-${savedTheme}`);\n\n    // 添加页面可见性变化监听\n    document.addEventListener('visibilitychange', this.handleVisibilityChange);\n  },\n  beforeUnmount() {\n    // 移除页面可见性变化监听\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n\n    // 用户离开时设置离线状态\n    if (this.username) {\n      const store = useStore();\n      store.dispatch('userStatus/setStatus', 'offline');\n    }\n  },\n  methods: {\n    setUsername(userData) {\n      this.username = userData.username;\n      this.avatar = userData.avatar || '';\n      this.userInfo = {\n        ...this.userInfo,\n        username: userData.username,\n        avatar: userData.avatar || ''\n      };\n\n      // 保存用户信息到localStorage\n      localStorage.setItem('chat-username', this.username);\n      if (this.avatar) {\n        localStorage.setItem('chat-avatar', this.avatar);\n      }\n\n      // 设置初始在线状态\n      const store = useStore();\n      store.dispatch('userStatus/setStatus', 'online');\n    },\n    // 更新在线用户列表\n    updateOnlineUsers(users) {\n      this.onlineUsers = users;\n    },\n    // 处理页面可见性变化\n    handleVisibilityChange() {\n      if (!this.username) return;\n      const store = useStore();\n      if (document.hidden) {\n        store.dispatch('userStatus/setStatus', 'away');\n      } else {\n        store.dispatch('userStatus/setStatus', 'online');\n      }\n    },\n    // 打开个人资料编辑器\n    openProfileEditor() {\n      this.showProfileEditor = true;\n    },\n    // 更新个人资料\n    updateProfile(profileData) {\n      this.userInfo = {\n        ...this.userInfo,\n        ...profileData\n      };\n\n      // 更新localStorage\n      localStorage.setItem('chat-username', profileData.username);\n      localStorage.setItem('chat-avatar', profileData.avatar);\n      localStorage.setItem('chat-bio', profileData.bio);\n\n      // 更新状态\n      const store = useStore();\n      store.dispatch('userStatus/setStatus', profileData.status);\n      this.showProfileEditor = false;\n    },\n    getFallbackAvatarUrl() {\n      // Implement the logic to generate a fallback avatar URL\n      return 'https://via.placeholder.com/32x32.png?text=No+Avatar';\n    }\n  }\n};","map":{"version":3,"names":["LoginForm","ChatContainer","ServerList","OnlineUsersSidebar","UserProfileEditor","useStore","name","components","data","username","avatar","onlineUsers","showProfileEditor","userInfo","bio","created","store","savedUsername","localStorage","getItem","savedAvatar","savedBio","dispatch","savedTheme","document","body","classList","add","addEventListener","handleVisibilityChange","beforeUnmount","removeEventListener","methods","setUsername","userData","setItem","updateOnlineUsers","users","hidden","openProfileEditor","updateProfile","profileData","status","getFallbackAvatarUrl"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div v-if=\"!username\" class=\"login-container\">\r\n      <LoginForm @login=\"setUsername\" />\r\n    </div>\r\n    <div v-else class=\"discord-layout\">\r\n      <!-- 服务器列表 -->\r\n      <ServerList />\r\n      \r\n      <!-- 在线用户列表 -->\r\n      <OnlineUsersSidebar \r\n        :onlineUsers=\"onlineUsers\" \r\n        :currentUsername=\"username\"\r\n      />\r\n      \r\n      <!-- 聊天容器 -->\r\n      <div class=\"chat-main\">\r\n        <div class=\"chat-header\">\r\n          <h2>Vue聊天室</h2>\r\n          <div class=\"user-controls\">\r\n            <div class=\"user-profile\" @click=\"openProfileEditor\">\r\n              <img \r\n                :src=\"avatar || getFallbackAvatarUrl()\" \r\n                alt=\"用户头像\" \r\n                class=\"user-avatar\"\r\n              />\r\n              <div class=\"user-status\" :class=\"currentUserStatus\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <ChatContainer \r\n          :currentUser=\"{ username, avatar }\" \r\n          @update-online-users=\"updateOnlineUsers\"\r\n        />\r\n      </div>\r\n      \r\n      <!-- 个人资料编辑器 -->\r\n      <UserProfileEditor\r\n        v-if=\"showProfileEditor\"\r\n        :isOpen=\"showProfileEditor\"\r\n        :currentUserInfo=\"userInfo\"\r\n        @close=\"showProfileEditor = false\"\r\n        @update-profile=\"updateProfile\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LoginForm from './components/auth/LoginForm.vue'\r\nimport ChatContainer from './components/chat/ChatContainer.vue'\r\nimport ServerList from './components/chat/ServerList.vue'\r\nimport OnlineUsersSidebar from './components/chat/OnlineUsersSidebar.vue'\r\nimport UserProfileEditor from './components/profile/UserProfileEditor.vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    LoginForm,\r\n    ChatContainer,\r\n    ServerList,\r\n    OnlineUsersSidebar,\r\n    UserProfileEditor\r\n  },\r\n  data() {\r\n    return {\r\n      username: '',\r\n      avatar: '',\r\n      onlineUsers: [],\r\n      showProfileEditor: false,\r\n      userInfo: {\r\n        username: '',\r\n        avatar: '',\r\n        bio: ''\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const store = useStore()\r\n    \r\n    // 从localStorage获取用户信息\r\n    const savedUsername = localStorage.getItem('chat-username')\r\n    const savedAvatar = localStorage.getItem('chat-avatar')\r\n    const savedBio = localStorage.getItem('chat-bio')\r\n    \r\n    if (savedUsername) {\r\n      this.username = savedUsername\r\n      this.avatar = savedAvatar || ''\r\n      this.userInfo = {\r\n        username: savedUsername,\r\n        avatar: savedAvatar || '',\r\n        bio: savedBio || ''\r\n      }\r\n      \r\n      // 初始化用户状态\r\n      store.dispatch('userStatus/setStatus', 'online')\r\n    }\r\n    \r\n    // 应用保存的主题\r\n    const savedTheme = localStorage.getItem('chat-theme') || 'discord'\r\n    document.body.classList.add(`theme-${savedTheme}`)\r\n    \r\n    // 添加页面可见性变化监听\r\n    document.addEventListener('visibilitychange', this.handleVisibilityChange)\r\n  },\r\n  beforeUnmount() {\r\n    // 移除页面可见性变化监听\r\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange)\r\n    \r\n    // 用户离开时设置离线状态\r\n    if (this.username) {\r\n      const store = useStore()\r\n      store.dispatch('userStatus/setStatus', 'offline')\r\n    }\r\n  },\r\n  methods: {\r\n    setUsername(userData) {\r\n      this.username = userData.username\r\n      this.avatar = userData.avatar || ''\r\n      this.userInfo = {\r\n        ...this.userInfo,\r\n        username: userData.username,\r\n        avatar: userData.avatar || ''\r\n      }\r\n      \r\n      // 保存用户信息到localStorage\r\n      localStorage.setItem('chat-username', this.username)\r\n      if (this.avatar) {\r\n        localStorage.setItem('chat-avatar', this.avatar)\r\n      }\r\n      \r\n      // 设置初始在线状态\r\n      const store = useStore()\r\n      store.dispatch('userStatus/setStatus', 'online')\r\n    },\r\n    \r\n    // 更新在线用户列表\r\n    updateOnlineUsers(users) {\r\n      this.onlineUsers = users\r\n    },\r\n    \r\n    // 处理页面可见性变化\r\n    handleVisibilityChange() {\r\n      if (!this.username) return\r\n      \r\n      const store = useStore()\r\n      if (document.hidden) {\r\n        store.dispatch('userStatus/setStatus', 'away')\r\n      } else {\r\n        store.dispatch('userStatus/setStatus', 'online')\r\n      }\r\n    },\r\n    \r\n    // 打开个人资料编辑器\r\n    openProfileEditor() {\r\n      this.showProfileEditor = true\r\n    },\r\n    \r\n    // 更新个人资料\r\n    updateProfile(profileData) {\r\n      this.userInfo = {\r\n        ...this.userInfo,\r\n        ...profileData\r\n      }\r\n      \r\n      // 更新localStorage\r\n      localStorage.setItem('chat-username', profileData.username)\r\n      localStorage.setItem('chat-avatar', profileData.avatar)\r\n      localStorage.setItem('chat-bio', profileData.bio)\r\n      \r\n      // 更新状态\r\n      const store = useStore()\r\n      store.dispatch('userStatus/setStatus', profileData.status)\r\n      \r\n      this.showProfileEditor = false\r\n    },\r\n    \r\n    getFallbackAvatarUrl() {\r\n      // Implement the logic to generate a fallback avatar URL\r\n      return 'https://via.placeholder.com/32x32.png?text=No+Avatar'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式重置 */\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody, html {\r\n  height: 100%;\r\n  width: 100%;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n}\r\n\r\n#app {\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.app-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  padding: 1rem;\r\n}\r\n\r\n/* Discord布局 */\r\n.discord-layout {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .chat-main {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .discord-layout {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .server-list {\r\n    width: 100% !important;\r\n    height: auto !important;\r\n    flex-direction: row !important;\r\n    padding: 8px !important;\r\n  }\r\n  \r\n  .server-items {\r\n    flex-direction: row !important;\r\n    padding: 0 8px !important;\r\n  }\r\n  \r\n  .server-item {\r\n    margin-right: 8px !important;\r\n    margin-bottom: 0 !important;\r\n  }\r\n}\r\n\r\n.chat-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px;\r\n  background-color: var(--background-primary);\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.user-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.user-profile {\r\n  position: relative;\r\n  cursor: pointer;\r\n}\r\n\r\n.user-avatar {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.user-profile:hover .user-avatar {\r\n  opacity: 0.8;\r\n}\r\n\r\n.user-status {\r\n  position: absolute;\r\n  bottom: -2px;\r\n  right: -2px;\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  border: 2px solid var(--background-primary);\r\n  background-color: #747f8d;\r\n}\r\n\r\n.user-status.online { background-color: #43b581; }\r\n.user-status.away { background-color: #faa61a; }\r\n.user-status.busy { background-color: #f04747; }\r\n.user-status.invisible { background-color: #747f8d; }\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}