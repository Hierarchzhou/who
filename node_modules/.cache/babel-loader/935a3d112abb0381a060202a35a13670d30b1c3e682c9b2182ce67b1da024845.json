{"ast":null,"code":"export default {\n  name: 'MessageList',\n  props: {\n    messages: {\n      type: Array,\n      default: () => []\n    },\n    currentUsername: {\n      type: String,\n      default: ''\n    }\n  },\n  methods: {\n    formatTime(timestamp) {\n      if (!timestamp) return '';\n      const date = new Date(timestamp);\n      const now = new Date();\n      const diffMs = now - date;\n      const diffMins = Math.floor(diffMs / 60000);\n      const diffHours = Math.floor(diffMins / 60);\n      const diffDays = Math.floor(diffHours / 24);\n\n      // 今天的消息显示时间\n      if (diffDays < 1) {\n        return date.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      }\n\n      // 昨天的消息\n      if (diffDays === 1) {\n        return '昨天 ' + date.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      }\n\n      // 更早的消息显示完整日期\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    scrollToBottom() {\n      if (this.$refs.messageContainer) {\n        this.$refs.messageContainer.scrollTop = this.$refs.messageContainer.scrollHeight;\n      }\n    }\n  },\n  updated() {\n    this.scrollToBottom();\n  }\n};","map":{"version":3,"names":["name","props","messages","type","Array","default","currentUsername","String","methods","formatTime","timestamp","date","Date","now","diffMs","diffMins","Math","floor","diffHours","diffDays","toLocaleTimeString","hour","minute","toLocaleDateString","scrollToBottom","$refs","messageContainer","scrollTop","scrollHeight","updated"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\just-do-it\\src\\components\\chat\\MessageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-list\" ref=\"messageContainer\">\r\n    <div v-if=\"messages.length === 0\" class=\"no-messages\">\r\n      暂无消息，开始聊天吧！\r\n    </div>\r\n    <div v-else>\r\n      <div \r\n        v-for=\"message in messages\" \r\n        :key=\"message.id || message.timestamp\" \r\n        class=\"message-item\"\r\n      >\r\n        <div class=\"message-avatar\">\r\n          <img :src=\"message.avatar || '/avatars/default.png'\" alt=\"头像\" class=\"avatar-img\" />\r\n        </div>\r\n        <div \r\n          class=\"message\"\r\n          :class=\"{ 'self': message.sender === currentUsername, 'other': message.sender !== currentUsername }\"\r\n        >\r\n          <div class=\"message-header\">\r\n            <span class=\"message-sender\">{{ message.sender }}</span>\r\n            <span class=\"message-time\">{{ formatTime(message.timestamp) }}</span>\r\n          </div>\r\n          <div class=\"message-content\">{{ message.content }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MessageList',\r\n  props: {\r\n    messages: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    currentUsername: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  methods: {\r\n    formatTime(timestamp) {\r\n      if (!timestamp) return '';\r\n      \r\n      const date = new Date(timestamp);\r\n      const now = new Date();\r\n      const diffMs = now - date;\r\n      const diffMins = Math.floor(diffMs / 60000);\r\n      const diffHours = Math.floor(diffMins / 60);\r\n      const diffDays = Math.floor(diffHours / 24);\r\n      \r\n      // 今天的消息显示时间\r\n      if (diffDays < 1) {\r\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n      }\r\n      \r\n      // 昨天的消息\r\n      if (diffDays === 1) {\r\n        return '昨天 ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n      }\r\n      \r\n      // 更早的消息显示完整日期\r\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    },\r\n    \r\n    scrollToBottom() {\r\n      if (this.$refs.messageContainer) {\r\n        this.$refs.messageContainer.scrollTop = this.$refs.messageContainer.scrollHeight;\r\n      }\r\n    }\r\n  },\r\n  updated() {\r\n    this.scrollToBottom();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: var(--chat-background); /* 使用主题变量 */\r\n  position: relative;\r\n}\r\n\r\n.message-item {\r\n  display: flex;\r\n  margin-bottom: 1.5rem;\r\n  align-items: flex-start;\r\n}\r\n\r\n.message-avatar {\r\n  margin-right: 0.75rem;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.avatar-img {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: 2px solid rgba(255, 255, 255, 0.1);\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.message {\r\n  max-width: 80%;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 0.5rem;\r\n  position: relative;\r\n  animation: fadeIn 0.3s ease-out;\r\n  box-shadow: var(--message-shadow);\r\n  transition: transform 0.2s ease;\r\n  background-color: var(--other-message-bg); /* 使用主题变量 */\r\n  color: var(--other-message-color); /* 使用主题变量 */\r\n}\r\n\r\n.message:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.message.self {\r\n  background-color: var(--self-message-bg); /* 使用主题变量 */\r\n  color: var(--self-message-color); /* 使用主题变量 */\r\n}\r\n\r\n.message-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.85rem;\r\n  opacity: 0.8;\r\n}\r\n\r\n.message-sender {\r\n  font-weight: bold;\r\n}\r\n\r\n.message-time {\r\n  font-size: 0.75rem;\r\n  opacity: 0.7;\r\n  margin-left: 0.75rem;\r\n}\r\n\r\n.message-content {\r\n  word-break: break-word;\r\n  line-height: 1.4;\r\n}\r\n\r\n/* 文艺电影主题特定样式 */\r\n:global(.theme-cinematic) .message {\r\n  backdrop-filter: blur(5px);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  background-color: rgba(40, 40, 40, 0.5); /* 半透明的深色 */\r\n}\r\n\r\n:global(.theme-cinematic) .message.self {\r\n  background-color: rgba(166, 124, 82, 0.2); /* 半透明的金棕色 */\r\n  border-color: rgba(166, 124, 82, 0.3);\r\n}\r\n\r\n:global(.theme-cinematic) .avatar-img {\r\n  border: 2px solid rgba(166, 124, 82, 0.3);\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n:global(.theme-cinematic) .message-sender {\r\n  font-family: 'Playfair Display', serif;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n:global(.theme-cinematic) .message-time {\r\n  font-style: italic;\r\n}\r\n\r\n.no-messages {\r\n  text-align: center;\r\n  color: var(--timestamp-color); /* 使用主题变量 */\r\n  margin-top: 2rem;\r\n  font-style: italic;\r\n  opacity: 0.7;\r\n}\r\n</style> "],"mappings":"AA8BA,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACDC,eAAe,EAAE;MACfH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,UAAUA,CAACC,SAAS,EAAE;MACpB,IAAI,CAACA,SAAS,EAAE,OAAO,EAAE;MAEzB,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,SAAS,CAAC;MAChC,MAAMG,GAAE,GAAI,IAAID,IAAI,CAAC,CAAC;MACtB,MAAME,MAAK,GAAID,GAAE,GAAIF,IAAI;MACzB,MAAMI,QAAO,GAAIC,IAAI,CAACC,KAAK,CAACH,MAAK,GAAI,KAAK,CAAC;MAC3C,MAAMI,SAAQ,GAAIF,IAAI,CAACC,KAAK,CAACF,QAAO,GAAI,EAAE,CAAC;MAC3C,MAAMI,QAAO,GAAIH,IAAI,CAACC,KAAK,CAACC,SAAQ,GAAI,EAAE,CAAC;;MAE3C;MACA,IAAIC,QAAO,GAAI,CAAC,EAAE;QAChB,OAAOR,IAAI,CAACS,kBAAkB,CAAC,EAAE,EAAE;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAU,CAAC,CAAC;MAC5E;;MAEA;MACA,IAAIH,QAAO,KAAM,CAAC,EAAE;QAClB,OAAO,KAAI,GAAIR,IAAI,CAACS,kBAAkB,CAAC,EAAE,EAAE;UAAEC,IAAI,EAAE,SAAS;UAAEC,MAAM,EAAE;QAAU,CAAC,CAAC;MACpF;;MAEA;MACA,OAAOX,IAAI,CAACY,kBAAkB,CAAC,IAAI,GAAE,GAAIZ,IAAI,CAACS,kBAAkB,CAAC,EAAE,EAAE;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;IAC9G,CAAC;IAEDE,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACC,KAAK,CAACC,gBAAgB,EAAE;QAC/B,IAAI,CAACD,KAAK,CAACC,gBAAgB,CAACC,SAAQ,GAAI,IAAI,CAACF,KAAK,CAACC,gBAAgB,CAACE,YAAY;MAClF;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACL,cAAc,CAAC,CAAC;EACvB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}