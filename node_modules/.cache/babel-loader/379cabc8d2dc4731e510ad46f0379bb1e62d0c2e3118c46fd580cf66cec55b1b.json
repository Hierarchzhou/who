{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __require = /* @__PURE__ */(x => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function (x) {\n  if (typeof require !== \"undefined\") return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not supported');\n});\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = {\n    exports: {}\n  }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// package.json\nvar require_package = __commonJS({\n  \"package.json\"(exports, module) {\n    module.exports = {\n      scripts: {\n        lint: \"run -T eslint . --ext .ts,.tsx\",\n        clean: \"rm -rf ./dist\",\n        dev: \"parcel public/test.html\",\n        docs: \"typedoc src/index.ts\",\n        build: \"run -T tsup src/index.ts --format cjs,esm --dts && run -T publint\",\n        prepublish: \"npm run clean && npm run build\",\n        test: \"run -T jest --config ./jestconfig.js\",\n        \"test:watch\": \"run -T jest --config ./jestconfig.js --watchAll\"\n      },\n      name: \"@giphy/js-fetch-api\",\n      version: \"5.6.0\",\n      description: \"Javascript API to fetch gifs and stickers from the GIPHY API.\",\n      homepage: \"https://github.com/Giphy/giphy-js/tree/master/packages/fetch-api\",\n      main: \"dist/index.cjs\",\n      types: \"dist/index.d.ts\",\n      module: \"dist/index.js\",\n      type: \"module\",\n      sideEffects: false,\n      exports: {\n        \".\": {\n          types: \"./dist/index.d.ts\",\n          import: \"./dist/index.js\",\n          require: \"./dist/index.cjs\"\n        },\n        \"./package.json\": \"./package.json\"\n      },\n      files: [\"dist/\", \"src/**/*\"],\n      license: \"MIT\",\n      publishConfig: {\n        access: \"public\"\n      },\n      dependencies: {\n        \"@giphy/js-types\": \"*\",\n        \"@giphy/js-util\": \"*\"\n      },\n      devDependencies: {\n        \"jest-fetch-mock\": \"^3.0.3\",\n        \"parcel-bundler\": \"latest\",\n        typedoc: \"^0.20.37\",\n        \"typedoc-thunder-theme\": \"^0.0.3\",\n        typescript: \"^5.0.4\"\n      }\n    };\n  }\n});\n\n// src/index.ts\nimport { appendGiphySDKRequestHeader, getGiphySDKRequestHeaders } from \"@giphy/js-util\";\n\n// src/api.ts\nimport { getPingbackId } from \"@giphy/js-util\";\n\n// src/normalize/gif.ts\nvar BOOL_PROPS = [\"is_anonymous\", \"is_community\", \"is_featured\", \"is_hidden\", \"is_indexable\", \"is_preserve_size\", \"is_realtime\", \"is_removed\", \"is_sticker\", \"is_dynamic\"\n// not finalized, and not adding to Gif type until type RFC is finished\n];\nvar USER_BOOL_PROPS = [\"suppress_chrome\", \"is_public\", \"is_verified\"];\nvar makeBool = obj => prop => obj[prop] = !!obj[prop];\nvar getTag = tag => typeof tag === \"string\" ? tag : tag.text;\nvar normalize = (gif, responseId = \"\") => {\n  const newGif = __spreadValues({}, gif);\n  newGif.id = String(newGif.id);\n  newGif.tags = (newGif.tags || []).map(getTag);\n  if (!newGif.bottle_data) {\n    newGif.bottle_data = {};\n  }\n  newGif.response_id = responseId;\n  BOOL_PROPS.forEach(makeBool(newGif));\n  Object.keys(newGif.images || {}).forEach(name => {\n    const img = newGif.images[name];\n    img.width = parseInt(img.width);\n    img.height = parseInt(img.height);\n  });\n  const {\n    user\n  } = newGif;\n  if (user) {\n    const newUser = __spreadValues({}, user);\n    USER_BOOL_PROPS.forEach(makeBool(newUser));\n    newGif.user = newUser;\n  }\n  return newGif;\n};\nvar normalizeGif = result => {\n  const {\n    response_id\n  } = result.meta;\n  result.data = normalize(result.data, response_id);\n  return result;\n};\nvar normalizeGifs = result => {\n  const {\n    response_id\n  } = result.meta;\n  result.data = result.data.map(gif => normalize(gif, response_id));\n  return result;\n};\n\n// src/constants.ts\nvar gl = (typeof window !== \"undefined\" ? window : global) || {};\nvar serverUrl = gl.GIPHY_API_URL || \"https://api.giphy.com/v1/\";\nvar setServerUrl = url => {\n  serverUrl = url;\n};\n\n// src/fetch-error.ts\nvar FetchError = class extends Error {\n  constructor(message, url, status = 0, statusText = \"\") {\n    super(message);\n    this.url = url;\n    this.status = status;\n    this.statusText = statusText;\n  }\n};\nvar GeoFetchError = class extends FetchError {};\nvar fetch_error_default = FetchError;\n\n// src/request.ts\nvar ERROR_PREFIX = `@giphy/js-fetch-api: `;\nvar DEFAULT_ERROR = \"Error fetching\";\nvar identity = i => i;\nvar requestMap = {};\nvar maxLife = 6e4;\nvar errorMaxLife = 6e3;\nvar purgeCache = () => {\n  const now = Date.now();\n  Object.keys(requestMap).forEach(key => {\n    const ttl = requestMap[key].isError ? errorMaxLife : maxLife;\n    if (now - requestMap[key].ts >= ttl) {\n      delete requestMap[key];\n    }\n  });\n};\nfunction request(url, options = {}) {\n  const {\n    apiVersion = 1,\n    noCache = false,\n    normalizer = identity\n  } = options;\n  const serverUrl_ = serverUrl.replace(/\\/v\\d+\\/$/, `/v${apiVersion}/`);\n  purgeCache();\n  if (!requestMap[url] || noCache) {\n    const fullUrl = `${serverUrl_}${url}`;\n    const makeRequest = () => __async(this, null, function* () {\n      var _a2, _b;\n      let fetchError;\n      try {\n        const response = yield fetch(fullUrl, {\n          method: \"get\"\n        });\n        if (response.ok) {\n          const result = yield response.json();\n          if (!((_a2 = result.meta) == null ? void 0 : _a2.response_id)) {\n            throw {\n              message: `synthetic response`\n            };\n          } else {\n            return normalizer(result);\n          }\n        } else {\n          let message = DEFAULT_ERROR;\n          try {\n            const result = yield response.json();\n            if (result.message) message = result.message;\n            if ((_b = result.meta) == null ? void 0 : _b.msg) message = result.meta.msg;\n          } catch (_) {}\n          if (requestMap[url]) {\n            requestMap[url].isError = true;\n          }\n          let Cls = fetch_error_default;\n          if (message === \"This content is not available in your location\") {\n            Cls = GeoFetchError;\n          }\n          fetchError = new Cls(`${ERROR_PREFIX}${message}`, fullUrl, response.status, response.statusText);\n        }\n      } catch (unexpectedError) {\n        fetchError = new fetch_error_default(unexpectedError.message, fullUrl);\n        if (requestMap[url]) {\n          requestMap[url].isError = true;\n        }\n      }\n      throw fetchError;\n    });\n    requestMap[url] = {\n      request: makeRequest(),\n      ts: Date.now()\n    };\n  }\n  return requestMap[url].request;\n}\nvar request_default = request;\n\n// src/api.ts\nvar getType = options => options && options.type ? options.type : \"gifs\";\nvar GiphyFetch = class {\n  constructor(apiKey, qsParams = {}) {\n    /**\n     * @hidden\n     */\n    this.getQS = (options = {}) => {\n      const searchParams = new URLSearchParams(__spreadValues(__spreadProps(__spreadValues({}, options), {\n        api_key: this.apiKey,\n        pingback_id: getPingbackId()\n      }), this.qsParams));\n      return searchParams.toString();\n    };\n    this.apiKey = apiKey;\n    this.qsParams = qsParams;\n  }\n  /**\n   * A list of categories\n   *\n   * @param {CategoriesOptions} [options]\n   * @returns {Promise<CategoriesResult>}\n   */\n  categories(options) {\n    return request_default(`gifs/categories?${this.getQS(options)}`);\n  }\n  /**\n   * Get a single gif by a id\n   * @param {string} id\n   * @returns {Promise<GifsResult>}\n   **/\n  gif(id, options) {\n    const prefix = (options == null ? void 0 : options.internal) ? \"internal/\" : \"\";\n    return request_default(`${prefix}gifs/${id}?${this.getQS()}`, {\n      normalizer: normalizeGif\n    });\n  }\n  gifs(arg1, arg2) {\n    if (Array.isArray(arg1)) {\n      return request_default(`gifs?${this.getQS({\n        ids: arg1.join(\",\")\n      })}`, {\n        normalizer: normalizeGifs\n      });\n    }\n    return request_default(`gifs/categories/${arg1}/${arg2}?${this.getQS()}`, {\n      normalizer: normalizeGifs\n    });\n  }\n  emoji(options) {\n    return request_default(`emoji?${this.getQS(options)}`, {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Returns a list of all the default emoji variations\n   *\n   * @param {PaginationOptions} options\n   * @returns {Promise<GifsResult>}\n   **/\n  emojiDefaultVariations(options) {\n    return request_default(`emoji?${this.getQS(options)}`, {\n      apiVersion: 2,\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Returns a list of gifs representing all the variations for the emoji\n   *\n   * @param {string} id\n   * @returns {Promise<NonPaginatedGifsResult>}\n   **/\n  emojiVariations(id) {\n    return request_default(`emoji/${id}/variations?${this.getQS()}`, {\n      apiVersion: 2,\n      normalizer: normalizeGifs\n    });\n  }\n  animate(text, options = {}) {\n    const qsParams = this.getQS(__spreadProps(__spreadValues({}, options), {\n      m: text\n    }));\n    return request_default(`text/animate?${qsParams}`, {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * @param term: string The term you're searching for\n   * @param options: SearchOptions\n   * @returns {Promise<GifsResult>}\n   **/\n  search(term, options = {}) {\n    const q = options.channel ? `@${options.channel} ${term}` : term;\n    let excludeDynamicResults;\n    if (options.type === \"text\") {\n      excludeDynamicResults = true;\n    }\n    const qsParams = this.getQS(__spreadProps(__spreadValues({\n      rating: \"pg-13\"\n    }, options), {\n      q,\n      excludeDynamicResults\n    }));\n    return request_default(`${getType(options)}/search?${qsParams}`, {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Get a list of subcategories\n   * @param {string} category\n   * @param {SubcategoriesOptions} options\n   * @returns {Promise<CategoriesResult>}\n   */\n  subcategories(category, options) {\n    return request_default(`gifs/categories/${category}?${this.getQS(options)}`);\n  }\n  /**\n   * Get trending gifs\n   *\n   * @param {TrendingOptions} options\n   * @returns {Promise<GifsResult>}\n   */\n  trending(options = {}) {\n    return request_default(`${getType(options)}/trending?${this.getQS(__spreadValues({\n      rating: \"pg-13\"\n    }, options))}`, {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Get a random gif\n   * @param {RandomOptions} options\n   * @returns {Promise<GifResult>}\n   **/\n  random(options) {\n    return request_default(`${getType(options)}/random?${this.getQS(__spreadValues({\n      rating: \"pg-13\"\n    }, options))}`, {\n      noCache: true,\n      normalizer: normalizeGif\n    });\n  }\n  /**\n   * Get related gifs by a id\n   * @param {string} id\n   * @param {SubcategoriesOptions} options\n   * @returns {Promise<GifsResult>}\n   **/\n  related(id, options = {}) {\n    const {\n      type = \"gifs\"\n    } = options;\n    return request_default(`${type}/related?${this.getQS(__spreadValues({\n      gif_id: id,\n      rating: \"pg-13\"\n    }, options))}`, {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Search for channels based on a term\n   * @param {string} term\n   * @param options: SearchOptions\n   * @returns {Promise<ChannelsResult>}\n   **/\n  channels(term, options = {}) {\n    return request_default(`channels/search?${this.getQS(__spreadValues({\n      q: term,\n      rating: \"pg-13\"\n    }, options))}`);\n  }\n};\nvar api_default = GiphyFetch;\n\n// src/paginator.ts\nvar gifPaginator = (fetchGifs, initialGifs = []) => {\n  const gifs = [...initialGifs];\n  const gifIds = initialGifs.map(g => g.id);\n  let offset = initialGifs.length;\n  let isDoneFetching = false;\n  return () => __async(void 0, null, function* () {\n    if (isDoneFetching) {\n      return gifs;\n    }\n    const result = yield fetchGifs(offset);\n    const {\n      pagination,\n      data: newGifs\n    } = result;\n    offset = pagination.count + pagination.offset;\n    isDoneFetching = offset === pagination.total_count;\n    newGifs.forEach(gif => {\n      const {\n        id\n      } = gif;\n      if (!gifIds.includes(id)) {\n        gifs.push(gif);\n        gifIds.push(id);\n      }\n    });\n    return [...gifs];\n  });\n};\n\n// src/index.ts\nvar _a;\nif (typeof __require !== \"undefined\") {\n  const {\n    version\n  } = require_package();\n  if (!((_a = getGiphySDKRequestHeaders()) == null ? void 0 : _a.get(`X-GIPHY-SDK-NAME`))) {\n    appendGiphySDKRequestHeader(`X-GIPHY-SDK-NAME`, \"FetchAPI\");\n    appendGiphySDKRequestHeader(`X-GIPHY-SDK-VERSION`, version);\n  }\n}\nexport { fetch_error_default as FetchError, GeoFetchError, api_default as GiphyFetch, gifPaginator, request_default as request, serverUrl, setServerUrl };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropNames","getOwnPropertyNames","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__require","x","require","Proxy","get","apply","arguments","Error","__commonJS","cb","mod","__require2","exports","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","done","then","require_package","package.json","module","scripts","lint","clean","dev","docs","build","prepublish","test","name","version","description","homepage","main","types","type","sideEffects","import","files","license","publishConfig","access","dependencies","devDependencies","typedoc","typescript","appendGiphySDKRequestHeader","getGiphySDKRequestHeaders","getPingbackId","BOOL_PROPS","USER_BOOL_PROPS","makeBool","getTag","tag","text","normalize","gif","responseId","newGif","id","String","tags","map","bottle_data","response_id","forEach","keys","images","img","width","parseInt","height","user","newUser","normalizeGif","result","meta","data","normalizeGifs","gl","window","global","serverUrl","GIPHY_API_URL","setServerUrl","url","FetchError","constructor","message","status","statusText","GeoFetchError","fetch_error_default","ERROR_PREFIX","DEFAULT_ERROR","identity","i","requestMap","maxLife","errorMaxLife","purgeCache","now","Date","ttl","isError","ts","request","options","apiVersion","noCache","normalizer","serverUrl_","replace","fullUrl","makeRequest","_a2","_b","fetchError","response","fetch","method","ok","json","msg","_","Cls","unexpectedError","request_default","getType","GiphyFetch","apiKey","qsParams","getQS","searchParams","URLSearchParams","api_key","pingback_id","toString","categories","prefix","internal","gifs","arg1","arg2","Array","isArray","ids","join","emoji","emojiDefaultVariations","emojiVariations","animate","m","search","term","q","channel","excludeDynamicResults","rating","subcategories","category","trending","random","related","gif_id","channels","api_default","gifPaginator","fetchGifs","initialGifs","gifIds","g","offset","length","isDoneFetching","pagination","newGifs","count","total_count","includes","push","_a"],"sources":["C:/Users/Administrator/Desktop/discord-chat-app/fack/just-do-it/node_modules/@giphy/js-fetch-api/dist/index.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\")\n    return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not supported');\n});\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// package.json\nvar require_package = __commonJS({\n  \"package.json\"(exports, module) {\n    module.exports = {\n      scripts: {\n        lint: \"run -T eslint . --ext .ts,.tsx\",\n        clean: \"rm -rf ./dist\",\n        dev: \"parcel public/test.html\",\n        docs: \"typedoc src/index.ts\",\n        build: \"run -T tsup src/index.ts --format cjs,esm --dts && run -T publint\",\n        prepublish: \"npm run clean && npm run build\",\n        test: \"run -T jest --config ./jestconfig.js\",\n        \"test:watch\": \"run -T jest --config ./jestconfig.js --watchAll\"\n      },\n      name: \"@giphy/js-fetch-api\",\n      version: \"5.6.0\",\n      description: \"Javascript API to fetch gifs and stickers from the GIPHY API.\",\n      homepage: \"https://github.com/Giphy/giphy-js/tree/master/packages/fetch-api\",\n      main: \"dist/index.cjs\",\n      types: \"dist/index.d.ts\",\n      module: \"dist/index.js\",\n      type: \"module\",\n      sideEffects: false,\n      exports: {\n        \".\": {\n          types: \"./dist/index.d.ts\",\n          import: \"./dist/index.js\",\n          require: \"./dist/index.cjs\"\n        },\n        \"./package.json\": \"./package.json\"\n      },\n      files: [\n        \"dist/\",\n        \"src/**/*\"\n      ],\n      license: \"MIT\",\n      publishConfig: {\n        access: \"public\"\n      },\n      dependencies: {\n        \"@giphy/js-types\": \"*\",\n        \"@giphy/js-util\": \"*\"\n      },\n      devDependencies: {\n        \"jest-fetch-mock\": \"^3.0.3\",\n        \"parcel-bundler\": \"latest\",\n        typedoc: \"^0.20.37\",\n        \"typedoc-thunder-theme\": \"^0.0.3\",\n        typescript: \"^5.0.4\"\n      }\n    };\n  }\n});\n\n// src/index.ts\nimport { appendGiphySDKRequestHeader, getGiphySDKRequestHeaders } from \"@giphy/js-util\";\n\n// src/api.ts\nimport { getPingbackId } from \"@giphy/js-util\";\n\n// src/normalize/gif.ts\nvar BOOL_PROPS = [\n  \"is_anonymous\",\n  \"is_community\",\n  \"is_featured\",\n  \"is_hidden\",\n  \"is_indexable\",\n  \"is_preserve_size\",\n  \"is_realtime\",\n  \"is_removed\",\n  \"is_sticker\",\n  \"is_dynamic\"\n  // not finalized, and not adding to Gif type until type RFC is finished\n];\nvar USER_BOOL_PROPS = [\"suppress_chrome\", \"is_public\", \"is_verified\"];\nvar makeBool = (obj) => (prop) => obj[prop] = !!obj[prop];\nvar getTag = (tag) => typeof tag === \"string\" ? tag : tag.text;\nvar normalize = (gif, responseId = \"\") => {\n  const newGif = __spreadValues({}, gif);\n  newGif.id = String(newGif.id);\n  newGif.tags = (newGif.tags || []).map(getTag);\n  if (!newGif.bottle_data) {\n    newGif.bottle_data = {};\n  }\n  newGif.response_id = responseId;\n  BOOL_PROPS.forEach(makeBool(newGif));\n  Object.keys(newGif.images || {}).forEach((name) => {\n    const img = newGif.images[name];\n    img.width = parseInt(img.width);\n    img.height = parseInt(img.height);\n  });\n  const { user } = newGif;\n  if (user) {\n    const newUser = __spreadValues({}, user);\n    USER_BOOL_PROPS.forEach(makeBool(newUser));\n    newGif.user = newUser;\n  }\n  return newGif;\n};\nvar normalizeGif = (result) => {\n  const { response_id } = result.meta;\n  result.data = normalize(result.data, response_id);\n  return result;\n};\nvar normalizeGifs = (result) => {\n  const { response_id } = result.meta;\n  result.data = result.data.map((gif) => normalize(gif, response_id));\n  return result;\n};\n\n// src/constants.ts\nvar gl = (typeof window !== \"undefined\" ? window : global) || {};\nvar serverUrl = gl.GIPHY_API_URL || \"https://api.giphy.com/v1/\";\nvar setServerUrl = (url) => {\n  serverUrl = url;\n};\n\n// src/fetch-error.ts\nvar FetchError = class extends Error {\n  constructor(message, url, status = 0, statusText = \"\") {\n    super(message);\n    this.url = url;\n    this.status = status;\n    this.statusText = statusText;\n  }\n};\nvar GeoFetchError = class extends FetchError {\n};\nvar fetch_error_default = FetchError;\n\n// src/request.ts\nvar ERROR_PREFIX = `@giphy/js-fetch-api: `;\nvar DEFAULT_ERROR = \"Error fetching\";\nvar identity = (i) => i;\nvar requestMap = {};\nvar maxLife = 6e4;\nvar errorMaxLife = 6e3;\nvar purgeCache = () => {\n  const now = Date.now();\n  Object.keys(requestMap).forEach((key) => {\n    const ttl = requestMap[key].isError ? errorMaxLife : maxLife;\n    if (now - requestMap[key].ts >= ttl) {\n      delete requestMap[key];\n    }\n  });\n};\nfunction request(url, options = {}) {\n  const { apiVersion = 1, noCache = false, normalizer = identity } = options;\n  const serverUrl_ = serverUrl.replace(/\\/v\\d+\\/$/, `/v${apiVersion}/`);\n  purgeCache();\n  if (!requestMap[url] || noCache) {\n    const fullUrl = `${serverUrl_}${url}`;\n    const makeRequest = () => __async(this, null, function* () {\n      var _a2, _b;\n      let fetchError;\n      try {\n        const response = yield fetch(fullUrl, {\n          method: \"get\"\n        });\n        if (response.ok) {\n          const result = yield response.json();\n          if (!((_a2 = result.meta) == null ? void 0 : _a2.response_id)) {\n            throw { message: `synthetic response` };\n          } else {\n            return normalizer(result);\n          }\n        } else {\n          let message = DEFAULT_ERROR;\n          try {\n            const result = yield response.json();\n            if (result.message)\n              message = result.message;\n            if ((_b = result.meta) == null ? void 0 : _b.msg)\n              message = result.meta.msg;\n          } catch (_) {\n          }\n          if (requestMap[url]) {\n            requestMap[url].isError = true;\n          }\n          let Cls = fetch_error_default;\n          if (message === \"This content is not available in your location\") {\n            Cls = GeoFetchError;\n          }\n          fetchError = new Cls(`${ERROR_PREFIX}${message}`, fullUrl, response.status, response.statusText);\n        }\n      } catch (unexpectedError) {\n        fetchError = new fetch_error_default(unexpectedError.message, fullUrl);\n        if (requestMap[url]) {\n          requestMap[url].isError = true;\n        }\n      }\n      throw fetchError;\n    });\n    requestMap[url] = { request: makeRequest(), ts: Date.now() };\n  }\n  return requestMap[url].request;\n}\nvar request_default = request;\n\n// src/api.ts\nvar getType = (options) => options && options.type ? options.type : \"gifs\";\nvar GiphyFetch = class {\n  constructor(apiKey, qsParams = {}) {\n    /**\n     * @hidden\n     */\n    this.getQS = (options = {}) => {\n      const searchParams = new URLSearchParams(__spreadValues(__spreadProps(__spreadValues({}, options), {\n        api_key: this.apiKey,\n        pingback_id: getPingbackId()\n      }), this.qsParams));\n      return searchParams.toString();\n    };\n    this.apiKey = apiKey;\n    this.qsParams = qsParams;\n  }\n  /**\n   * A list of categories\n   *\n   * @param {CategoriesOptions} [options]\n   * @returns {Promise<CategoriesResult>}\n   */\n  categories(options) {\n    return request_default(`gifs/categories?${this.getQS(options)}`);\n  }\n  /**\n   * Get a single gif by a id\n   * @param {string} id\n   * @returns {Promise<GifsResult>}\n   **/\n  gif(id, options) {\n    const prefix = (options == null ? void 0 : options.internal) ? \"internal/\" : \"\";\n    return request_default(`${prefix}gifs/${id}?${this.getQS()}`, { normalizer: normalizeGif });\n  }\n  gifs(arg1, arg2) {\n    if (Array.isArray(arg1)) {\n      return request_default(`gifs?${this.getQS({ ids: arg1.join(\",\") })}`, {\n        normalizer: normalizeGifs\n      });\n    }\n    return request_default(`gifs/categories/${arg1}/${arg2}?${this.getQS()}`, {\n      normalizer: normalizeGifs\n    });\n  }\n  emoji(options) {\n    return request_default(`emoji?${this.getQS(options)}`, { normalizer: normalizeGifs });\n  }\n  /**\n   * Returns a list of all the default emoji variations\n   *\n   * @param {PaginationOptions} options\n   * @returns {Promise<GifsResult>}\n   **/\n  emojiDefaultVariations(options) {\n    return request_default(`emoji?${this.getQS(options)}`, {\n      apiVersion: 2,\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Returns a list of gifs representing all the variations for the emoji\n   *\n   * @param {string} id\n   * @returns {Promise<NonPaginatedGifsResult>}\n   **/\n  emojiVariations(id) {\n    return request_default(`emoji/${id}/variations?${this.getQS()}`, {\n      apiVersion: 2,\n      normalizer: normalizeGifs\n    });\n  }\n  animate(text, options = {}) {\n    const qsParams = this.getQS(__spreadProps(__spreadValues({}, options), { m: text }));\n    return request_default(`text/animate?${qsParams}`, { normalizer: normalizeGifs });\n  }\n  /**\n   * @param term: string The term you're searching for\n   * @param options: SearchOptions\n   * @returns {Promise<GifsResult>}\n   **/\n  search(term, options = {}) {\n    const q = options.channel ? `@${options.channel} ${term}` : term;\n    let excludeDynamicResults;\n    if (options.type === \"text\") {\n      excludeDynamicResults = true;\n    }\n    const qsParams = this.getQS(__spreadProps(__spreadValues({ rating: \"pg-13\" }, options), { q, excludeDynamicResults }));\n    return request_default(`${getType(options)}/search?${qsParams}`, { normalizer: normalizeGifs });\n  }\n  /**\n   * Get a list of subcategories\n   * @param {string} category\n   * @param {SubcategoriesOptions} options\n   * @returns {Promise<CategoriesResult>}\n   */\n  subcategories(category, options) {\n    return request_default(`gifs/categories/${category}?${this.getQS(options)}`);\n  }\n  /**\n   * Get trending gifs\n   *\n   * @param {TrendingOptions} options\n   * @returns {Promise<GifsResult>}\n   */\n  trending(options = {}) {\n    return request_default(`${getType(options)}/trending?${this.getQS(__spreadValues({ rating: \"pg-13\" }, options))}`, {\n      normalizer: normalizeGifs\n    });\n  }\n  /**\n   * Get a random gif\n   * @param {RandomOptions} options\n   * @returns {Promise<GifResult>}\n   **/\n  random(options) {\n    return request_default(`${getType(options)}/random?${this.getQS(__spreadValues({ rating: \"pg-13\" }, options))}`, {\n      noCache: true,\n      normalizer: normalizeGif\n    });\n  }\n  /**\n   * Get related gifs by a id\n   * @param {string} id\n   * @param {SubcategoriesOptions} options\n   * @returns {Promise<GifsResult>}\n   **/\n  related(id, options = {}) {\n    const { type = \"gifs\" } = options;\n    return request_default(\n      `${type}/related?${this.getQS(__spreadValues({\n        gif_id: id,\n        rating: \"pg-13\"\n      }, options))}`,\n      { normalizer: normalizeGifs }\n    );\n  }\n  /**\n   * Search for channels based on a term\n   * @param {string} term\n   * @param options: SearchOptions\n   * @returns {Promise<ChannelsResult>}\n   **/\n  channels(term, options = {}) {\n    return request_default(\n      `channels/search?${this.getQS(__spreadValues({ q: term, rating: \"pg-13\" }, options))}`\n    );\n  }\n};\nvar api_default = GiphyFetch;\n\n// src/paginator.ts\nvar gifPaginator = (fetchGifs, initialGifs = []) => {\n  const gifs = [...initialGifs];\n  const gifIds = initialGifs.map((g) => g.id);\n  let offset = initialGifs.length;\n  let isDoneFetching = false;\n  return () => __async(void 0, null, function* () {\n    if (isDoneFetching) {\n      return gifs;\n    }\n    const result = yield fetchGifs(offset);\n    const { pagination, data: newGifs } = result;\n    offset = pagination.count + pagination.offset;\n    isDoneFetching = offset === pagination.total_count;\n    newGifs.forEach((gif) => {\n      const { id } = gif;\n      if (!gifIds.includes(id)) {\n        gifs.push(gif);\n        gifIds.push(id);\n      }\n    });\n    return [...gifs];\n  });\n};\n\n// src/index.ts\nvar _a;\nif (typeof __require !== \"undefined\") {\n  const { version } = require_package();\n  if (!((_a = getGiphySDKRequestHeaders()) == null ? void 0 : _a.get(`X-GIPHY-SDK-NAME`))) {\n    appendGiphySDKRequestHeader(`X-GIPHY-SDK-NAME`, \"FetchAPI\");\n    appendGiphySDKRequestHeader(`X-GIPHY-SDK-VERSION`, version);\n  }\n}\nexport {\n  fetch_error_default as FetchError,\n  GeoFetchError,\n  api_default as GiphyFetch,\n  gifPaginator,\n  request_default as request,\n  serverUrl,\n  setServerUrl\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}