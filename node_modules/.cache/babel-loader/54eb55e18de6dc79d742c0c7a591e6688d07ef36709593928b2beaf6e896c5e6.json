{"ast":null,"code":"export default {\n  name: 'ThemeSelector',\n  data() {\n    return {\n      selectedTheme: localStorage.getItem('chat-theme') || 'discord',\n      // 从本地存储获取主题，默认为discord主题\n      themes: [{\n        id: 'discord',\n        name: 'Discord风格'\n      },\n      // Discord风格主题\n      {\n        id: 'dark',\n        name: '暗黑模式'\n      },\n      // 暗黑模式主题\n      {\n        id: 'light',\n        name: '明亮模式'\n      },\n      // 明亮模式主题\n      {\n        id: 'retro',\n        name: '复古风格'\n      },\n      // 复古风格主题\n      {\n        id: 'cinematic',\n        name: '文艺电影'\n      } // 文艺电影风格主题\n      ]\n    };\n  },\n  created() {\n    // 组件创建时应用保存的主题\n    this.applyTheme(this.selectedTheme);\n  },\n  methods: {\n    // 切换主题\n    changeTheme() {\n      this.applyTheme(this.selectedTheme); // 应用选择的主题\n      localStorage.setItem('chat-theme', this.selectedTheme); // 保存主题选择到本地存储\n      this.$emit('theme-changed', this.selectedTheme); // 发送主题变更事件到父组件\n    },\n    // 应用主题\n    applyTheme(themeId) {\n      // 移除所有主题类\n      document.body.classList.remove('theme-discord', 'theme-dark', 'theme-light', 'theme-retro', 'theme-cinematic');\n      // 添加选择的主题类\n      document.body.classList.add(`theme-${themeId}`);\n    }\n  }\n};","map":{"version":3,"names":["name","data","selectedTheme","localStorage","getItem","themes","id","created","applyTheme","methods","changeTheme","setItem","$emit","themeId","document","body","classList","remove","add"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\just-do-it\\src\\components\\chat\\ThemeSelector.vue"],"sourcesContent":["<template>\r\n  <div class=\"theme-selector\">\r\n    <label for=\"theme-select\">主题风格：</label>\r\n    <select \r\n      id=\"theme-select\" \r\n      v-model=\"selectedTheme\" \r\n      @change=\"changeTheme\" \r\n      class=\"theme-select\"\r\n    >\r\n      <option v-for=\"theme in themes\" :key=\"theme.id\" :value=\"theme.id\">\r\n        {{ theme.name }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ThemeSelector',\r\n  data() {\r\n    return {\r\n      selectedTheme: localStorage.getItem('chat-theme') || 'discord', // 从本地存储获取主题，默认为discord主题\r\n      themes: [\r\n        { id: 'discord', name: 'Discord风格' }, // Discord风格主题\r\n        { id: 'dark', name: '暗黑模式' }, // 暗黑模式主题\r\n        { id: 'light', name: '明亮模式' }, // 明亮模式主题\r\n        { id: 'retro', name: '复古风格' }, // 复古风格主题\r\n        { id: 'cinematic', name: '文艺电影' } // 文艺电影风格主题\r\n      ]\r\n    }\r\n  },\r\n  created() {\r\n    // 组件创建时应用保存的主题\r\n    this.applyTheme(this.selectedTheme);\r\n  },\r\n  methods: {\r\n    // 切换主题\r\n    changeTheme() {\r\n      this.applyTheme(this.selectedTheme); // 应用选择的主题\r\n      localStorage.setItem('chat-theme', this.selectedTheme); // 保存主题选择到本地存储\r\n      this.$emit('theme-changed', this.selectedTheme); // 发送主题变更事件到父组件\r\n    },\r\n    \r\n    // 应用主题\r\n    applyTheme(themeId) {\r\n      // 移除所有主题类\r\n      document.body.classList.remove('theme-discord', 'theme-dark', 'theme-light', 'theme-retro', 'theme-cinematic');\r\n      // 添加选择的主题类\r\n      document.body.classList.add(`theme-${themeId}`);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.theme-selector {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 1rem;\r\n}\r\n\r\n.theme-select {\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 0.25rem;\r\n  border: 1px solid #ccc;\r\n  background-color: white;\r\n  margin-left: 0.5rem;\r\n  cursor: pointer;\r\n}\r\n\r\n/* 在暗黑模式下的样式 */\r\n:global(.theme-dark) .theme-select {\r\n  background-color: #2c2f33;\r\n  color: white;\r\n  border-color: #1e2124;\r\n}\r\n</style> "],"mappings":"AAiBA,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,YAAY,KAAK,SAAS;MAAE;MAChEC,MAAM,EAAE,CACN;QAAEC,EAAE,EAAE,SAAS;QAAEN,IAAI,EAAE;MAAY,CAAC;MAAE;MACtC;QAAEM,EAAE,EAAE,MAAM;QAAEN,IAAI,EAAE;MAAO,CAAC;MAAE;MAC9B;QAAEM,EAAE,EAAE,OAAO;QAAEN,IAAI,EAAE;MAAO,CAAC;MAAE;MAC/B;QAAEM,EAAE,EAAE,OAAO;QAAEN,IAAI,EAAE;MAAO,CAAC;MAAE;MAC/B;QAAEM,EAAE,EAAE,WAAW;QAAEN,IAAI,EAAE;MAAO,EAAE;MAAA;IAEtC;EACF,CAAC;EACDO,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,UAAU,CAAC,IAAI,CAACN,aAAa,CAAC;EACrC,CAAC;EACDO,OAAO,EAAE;IACP;IACAC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACF,UAAU,CAAC,IAAI,CAACN,aAAa,CAAC,EAAE;MACrCC,YAAY,CAACQ,OAAO,CAAC,YAAY,EAAE,IAAI,CAACT,aAAa,CAAC,EAAE;MACxD,IAAI,CAACU,KAAK,CAAC,eAAe,EAAE,IAAI,CAACV,aAAa,CAAC,EAAE;IACnD,CAAC;IAED;IACAM,UAAUA,CAACK,OAAO,EAAE;MAClB;MACAC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,eAAe,EAAE,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,iBAAiB,CAAC;MAC9G;MACAH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAAC,SAASL,OAAO,EAAE,CAAC;IACjD;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}