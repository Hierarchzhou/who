{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"login-container\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"discord-layout\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LoginForm = _resolveComponent(\"LoginForm\");\n  const _component_ServerList = _resolveComponent(\"ServerList\");\n  const _component_OnlineUsersSidebar = _resolveComponent(\"OnlineUsersSidebar\");\n  const _component_ChatContainer = _resolveComponent(\"ChatContainer\");\n  const _component_UserProfileEditor = _resolveComponent(\"UserProfileEditor\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.username ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_LoginForm, {\n    onLogin: $options.setUsername\n  }, null, 8 /* PROPS */, [\"onLogin\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" 服务器列表 \"), _createVNode(_component_ServerList), _createCommentVNode(\" 在线用户列表 \"), _createVNode(_component_OnlineUsersSidebar, {\n    onlineUsers: $data.onlineUsers,\n    currentUsername: $data.username,\n    onClickProfile: $options.openProfileEditor\n  }, null, 8 /* PROPS */, [\"onlineUsers\", \"currentUsername\", \"onClickProfile\"]), _createCommentVNode(\" 聊天容器 \"), _createVNode(_component_ChatContainer, {\n    currentUser: {\n      username: $data.username,\n      avatar: $data.avatar\n    },\n    onUpdateOnlineUsers: $options.updateOnlineUsers\n  }, null, 8 /* PROPS */, [\"currentUser\", \"onUpdateOnlineUsers\"]), _createCommentVNode(\" 个人资料编辑器 \"), $data.showProfileEditor ? (_openBlock(), _createBlock(_component_UserProfileEditor, {\n    key: 0,\n    isOpen: $data.showProfileEditor,\n    currentUserInfo: $data.userInfo,\n    onClose: _cache[0] || (_cache[0] = $event => $data.showProfileEditor = false),\n    onUpdateProfile: $options.updateProfile\n  }, null, 8 /* PROPS */, [\"isOpen\", \"currentUserInfo\", \"onUpdateProfile\"])) : _createCommentVNode(\"v-if\", true)]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","username","_hoisted_2","_createVNode","_component_LoginForm","onLogin","$options","setUsername","_hoisted_3","_createCommentVNode","_component_ServerList","_component_OnlineUsersSidebar","onlineUsers","currentUsername","onClickProfile","openProfileEditor","_component_ChatContainer","currentUser","avatar","onUpdateOnlineUsers","updateOnlineUsers","showProfileEditor","_createBlock","_component_UserProfileEditor","isOpen","currentUserInfo","userInfo","onClose","_cache","$event","onUpdateProfile","updateProfile"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div v-if=\"!username\" class=\"login-container\">\r\n      <LoginForm @login=\"setUsername\" />\r\n    </div>\r\n    <div v-else class=\"discord-layout\">\r\n      <!-- 服务器列表 -->\r\n      <ServerList />\r\n      \r\n      <!-- 在线用户列表 -->\r\n      <OnlineUsersSidebar \r\n        :onlineUsers=\"onlineUsers\" \r\n        :currentUsername=\"username\"\r\n        @click-profile=\"openProfileEditor\"\r\n      />\r\n      \r\n      <!-- 聊天容器 -->\r\n      <ChatContainer \r\n        :currentUser=\"{ username, avatar }\" \r\n        @update-online-users=\"updateOnlineUsers\"\r\n      />\r\n      \r\n      <!-- 个人资料编辑器 -->\r\n      <UserProfileEditor\r\n        v-if=\"showProfileEditor\"\r\n        :isOpen=\"showProfileEditor\"\r\n        :currentUserInfo=\"userInfo\"\r\n        @close=\"showProfileEditor = false\"\r\n        @update-profile=\"updateProfile\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LoginForm from './components/auth/LoginForm.vue'\r\nimport ChatContainer from './components/chat/ChatContainer.vue'\r\nimport ServerList from './components/chat/ServerList.vue'\r\nimport OnlineUsersSidebar from './components/chat/OnlineUsersSidebar.vue'\r\nimport UserProfileEditor from './components/profile/UserProfileEditor.vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    LoginForm,\r\n    ChatContainer,\r\n    ServerList,\r\n    OnlineUsersSidebar,\r\n    UserProfileEditor\r\n  },\r\n  data() {\r\n    return {\r\n      username: '',\r\n      avatar: '',\r\n      onlineUsers: [],\r\n      showProfileEditor: false,\r\n      userInfo: {\r\n        username: '',\r\n        avatar: '',\r\n        bio: ''\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    const store = useStore()\r\n    \r\n    // 从localStorage获取用户信息\r\n    const savedUsername = localStorage.getItem('chat-username')\r\n    const savedAvatar = localStorage.getItem('chat-avatar')\r\n    const savedBio = localStorage.getItem('chat-bio')\r\n    \r\n    if (savedUsername) {\r\n      this.username = savedUsername\r\n      this.avatar = savedAvatar || ''\r\n      this.userInfo = {\r\n        username: savedUsername,\r\n        avatar: savedAvatar || '',\r\n        bio: savedBio || ''\r\n      }\r\n      \r\n      // 初始化用户状态\r\n      store.dispatch('userStatus/setStatus', 'online')\r\n    }\r\n    \r\n    // 应用保存的主题\r\n    const savedTheme = localStorage.getItem('chat-theme') || 'discord'\r\n    document.body.classList.add(`theme-${savedTheme}`)\r\n    \r\n    // 添加页面可见性变化监听\r\n    document.addEventListener('visibilitychange', this.handleVisibilityChange)\r\n  },\r\n  beforeUnmount() {\r\n    // 移除页面可见性变化监听\r\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange)\r\n    \r\n    // 用户离开时设置离线状态\r\n    if (this.username) {\r\n      const store = useStore()\r\n      store.dispatch('userStatus/setStatus', 'offline')\r\n    }\r\n  },\r\n  methods: {\r\n    setUsername(userData) {\r\n      this.username = userData.username\r\n      this.avatar = userData.avatar || ''\r\n      this.userInfo = {\r\n        ...this.userInfo,\r\n        username: userData.username,\r\n        avatar: userData.avatar || ''\r\n      }\r\n      \r\n      // 保存用户信息到localStorage\r\n      localStorage.setItem('chat-username', this.username)\r\n      if (this.avatar) {\r\n        localStorage.setItem('chat-avatar', this.avatar)\r\n      }\r\n      \r\n      // 设置初始在线状态\r\n      const store = useStore()\r\n      store.dispatch('userStatus/setStatus', 'online')\r\n    },\r\n    \r\n    // 更新在线用户列表\r\n    updateOnlineUsers(users) {\r\n      this.onlineUsers = users\r\n    },\r\n    \r\n    // 处理页面可见性变化\r\n    handleVisibilityChange() {\r\n      if (!this.username) return\r\n      \r\n      const store = useStore()\r\n      if (document.hidden) {\r\n        store.dispatch('userStatus/setStatus', 'away')\r\n      } else {\r\n        store.dispatch('userStatus/setStatus', 'online')\r\n      }\r\n    },\r\n    \r\n    // 打开个人资料编辑器\r\n    openProfileEditor() {\r\n      this.showProfileEditor = true\r\n    },\r\n    \r\n    // 更新个人资料\r\n    updateProfile(profileData) {\r\n      this.userInfo = {\r\n        ...this.userInfo,\r\n        ...profileData\r\n      }\r\n      \r\n      // 更新localStorage\r\n      localStorage.setItem('chat-username', profileData.username)\r\n      localStorage.setItem('chat-avatar', profileData.avatar)\r\n      localStorage.setItem('chat-bio', profileData.bio)\r\n      \r\n      // 更新状态\r\n      const store = useStore()\r\n      store.dispatch('userStatus/setStatus', profileData.status)\r\n      \r\n      this.showProfileEditor = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式重置 */\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody, html {\r\n  height: 100%;\r\n  width: 100%;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n}\r\n\r\n#app {\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.app-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  padding: 1rem;\r\n}\r\n\r\n/* Discord布局 */\r\n.discord-layout {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .chat-main {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .discord-layout {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .server-list {\r\n    width: 100% !important;\r\n    height: auto !important;\r\n    flex-direction: row !important;\r\n    padding: 8px !important;\r\n  }\r\n  \r\n  .server-items {\r\n    flex-direction: row !important;\r\n    padding: 0 8px !important;\r\n  }\r\n  \r\n  .server-item {\r\n    margin-right: 8px !important;\r\n    margin-bottom: 0 !important;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAD5BC,GAAA;EAE0BD,KAAK,EAAC;;;EAFhCC,GAAA;EAKgBD,KAAK,EAAC;;;;;;;;uBAJpBE,mBAAA,CA8BM,OA9BNC,UA8BM,G,CA7BQC,KAAA,CAAAC,QAAQ,I,cAApBH,mBAAA,CAEM,OAFNI,UAEM,GADJC,YAAA,CAAkCC,oBAAA;IAAtBC,OAAK,EAAEC,QAAA,CAAAC;EAAW,qC,oBAEhCT,mBAAA,CAyBM,OAzBNU,UAyBM,GAxBJC,mBAAA,WAAc,EACdN,YAAA,CAAcO,qBAAA,GAEdD,mBAAA,YAAe,EACfN,YAAA,CAIEQ,6BAAA;IAHCC,WAAW,EAAEZ,KAAA,CAAAY,WAAW;IACxBC,eAAe,EAAEb,KAAA,CAAAC,QAAQ;IACzBa,cAAa,EAAER,QAAA,CAAAS;iFAGlBN,mBAAA,UAAa,EACbN,YAAA,CAGEa,wBAAA;IAFCC,WAAW;MAAAhB,QAAA,EAAID,KAAA,CAAAC,QAAQ;MAAAiB,MAAA,EAAElB,KAAA,CAAAkB;IAAM;IAC/BC,mBAAmB,EAAEb,QAAA,CAAAc;mEAGxBX,mBAAA,aAAgB,EAERT,KAAA,CAAAqB,iBAAiB,I,cADzBC,YAAA,CAMEC,4BAAA;IA7BR1B,GAAA;IAyBS2B,MAAM,EAAExB,KAAA,CAAAqB,iBAAiB;IACzBI,eAAe,EAAEzB,KAAA,CAAA0B,QAAQ;IACzBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAE7B,KAAA,CAAAqB,iBAAiB;IACxBS,eAAc,EAAExB,QAAA,CAAAyB;+EA5BzBtB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}