{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LoginForm from './components/auth/LoginForm.vue';\nimport ChatContainer from './components/chat/ChatContainer.vue';\nimport ServerList from './components/chat/ServerList.vue';\nimport OnlineUsersSidebar from './components/chat/OnlineUsersSidebar.vue';\nimport UserProfileEditor from './components/chat/UserProfileEditor.vue';\nimport ChannelList from './components/chat/ChannelList.vue';\nexport default {\n  name: 'App',\n  components: {\n    LoginForm,\n    ChatContainer,\n    ServerList,\n    OnlineUsersSidebar,\n    UserProfileEditor,\n    ChannelList\n  },\n  data() {\n    return {\n      username: localStorage.getItem('chat-username') || '',\n      avatar: localStorage.getItem('chat-avatar') || '',\n      showProfileEditor: false,\n      onlineUsers: [],\n      currentServerId: localStorage.getItem('current-server-id') || 'home',\n      currentServer: {\n        id: 'home',\n        name: '主页',\n        description: '欢迎来到聊天室！'\n      },\n      currentChannelId: '',\n      currentChannel: null\n    };\n  },\n  created() {\n    // 从localStorage获取用户信息\n    const savedUsername = localStorage.getItem('chat-username');\n    const savedAvatar = localStorage.getItem('chat-avatar');\n    if (savedUsername) {\n      this.username = savedUsername;\n      this.avatar = savedAvatar || '';\n    }\n\n    // 应用保存的主题\n    const savedTheme = localStorage.getItem('chat-theme') || 'discord';\n    document.body.classList.add(`theme-${savedTheme}`);\n\n    // 恢复上次选择的服务器\n    const savedServerId = localStorage.getItem('current-server-id');\n    if (savedServerId) {\n      this.currentServerId = savedServerId;\n    }\n\n    // 初始化默认服务器\n    const servers = this.getServers();\n    if (servers.length === 0) {\n      const defaultServer = this.createNewServer('测试服务器');\n      this.currentServerId = defaultServer.id;\n      this.currentServer = defaultServer;\n    } else if (this.currentServerId === 'home') {\n      // 如果当前是主页，切换到第一个服务器\n      this.currentServerId = servers[0].id;\n      this.currentServer = servers[0];\n    }\n  },\n  methods: {\n    setUsername(userData) {\n      this.username = userData.username;\n      this.avatar = userData.avatar || '';\n\n      // 保存用户信息到localStorage\n      localStorage.setItem('chat-username', this.username);\n      if (this.avatar) {\n        localStorage.setItem('chat-avatar', this.avatar);\n      }\n    },\n    // 更新在线用户列表\n    updateOnlineUsers(users) {\n      this.onlineUsers = users;\n    },\n    // 打开个人资料编辑器\n    openProfileEditor() {\n      this.showProfileEditor = true;\n    },\n    // 关闭个人资料编辑器\n    closeProfileEditor() {\n      this.showProfileEditor = false;\n    },\n    // 更新个人资料\n    updateProfile(updatedProfile) {\n      this.username = updatedProfile.username;\n      this.avatar = updatedProfile.avatar;\n      this.showProfileEditor = false;\n\n      // 保存到localStorage\n      localStorage.setItem('chat-username', this.username);\n      localStorage.setItem('chat-avatar', this.avatar);\n    },\n    // 切换服务器\n    changeServer(server) {\n      this.currentServerId = server.id;\n      this.currentServer = server;\n      this.currentChannelId = '';\n      this.currentChannel = null;\n\n      // 保存当前服务器ID到localStorage\n      localStorage.setItem('current-server-id', server.id);\n    },\n    // 选择频道\n    selectChannel(channel) {\n      this.currentChannelId = channel.id;\n      this.currentChannel = channel;\n    },\n    // 打开服务器设置\n    openServerSettings() {\n      // TODO: 实现服务器设置功能\n      console.log('Opening server settings');\n    },\n    // 显示添加服务器对话框\n    showAddServerDialog() {\n      // TODO: 实现添加服务器功能\n      console.log('Opening add server dialog');\n    },\n    // 显示服务器浏览\n    showExploreServers() {\n      // TODO: 实现服务器浏览功能\n      console.log('Opening server browser');\n    },\n    // 创建新服务器\n    createNewServer(serverName) {\n      const serverId = 'server-' + Date.now();\n      const newServer = {\n        id: serverId,\n        name: serverName,\n        icon: null,\n        description: this.serverTemplate.description,\n        channels: [...this.serverTemplate.channels],\n        roles: [...this.serverTemplate.roles],\n        categories: [...this.serverTemplate.categories],\n        members: [],\n        createdAt: new Date().toISOString(),\n        ownerId: this.username\n      };\n\n      // 保存服务器信息到 localStorage\n      const servers = JSON.parse(localStorage.getItem('chat-servers') || '[]');\n      servers.push(newServer);\n      localStorage.setItem('chat-servers', JSON.stringify(servers));\n      return newServer;\n    },\n    // 获取所有服务器\n    getServers() {\n      return JSON.parse(localStorage.getItem('chat-servers') || '[]');\n    },\n    // 更新服务器信息\n    updateServer(server) {\n      const servers = this.getServers();\n      const index = servers.findIndex(s => s.id === server.id);\n      if (index !== -1) {\n        servers[index] = server;\n        localStorage.setItem('chat-servers', JSON.stringify(servers));\n      }\n    }\n  }\n};","map":{"version":3,"names":["LoginForm","ChatContainer","ServerList","OnlineUsersSidebar","UserProfileEditor","ChannelList","name","components","data","username","localStorage","getItem","avatar","showProfileEditor","onlineUsers","currentServerId","currentServer","id","description","currentChannelId","currentChannel","created","savedUsername","savedAvatar","savedTheme","document","body","classList","add","savedServerId","servers","getServers","length","defaultServer","createNewServer","methods","setUsername","userData","setItem","updateOnlineUsers","users","openProfileEditor","closeProfileEditor","updateProfile","updatedProfile","changeServer","server","selectChannel","channel","openServerSettings","console","log","showAddServerDialog","showExploreServers","serverName","serverId","Date","now","newServer","icon","serverTemplate","channels","roles","categories","members","createdAt","toISOString","ownerId","JSON","parse","push","stringify","updateServer","index","findIndex","s"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div v-if=\"!username\" class=\"login-container\">\r\n      <LoginForm @login=\"setUsername\" />\r\n    </div>\r\n    <div v-else class=\"discord-layout\">\r\n      <!-- 服务器列表 -->\r\n      <ServerList \r\n        :external-servers=\"[]\"\r\n        :current-server-id=\"currentServerId\"\r\n        @change-server=\"changeServer\"\r\n        @add-server=\"showAddServerDialog\"\r\n        @explore-servers=\"showExploreServers\"\r\n        @open-settings=\"openProfileEditor\"\r\n      />\r\n      \r\n      <!-- 频道列表 -->\r\n      <div class=\"channels-sidebar\">\r\n        <div class=\"server-header\">\r\n          <h2>{{ currentServer.name || '服务器' }}</h2>\r\n          <button class=\"server-settings-button\" @click=\"openServerSettings\">\r\n            ⚙️\r\n          </button>\r\n        </div>\r\n        \r\n        <ChannelList\r\n          :current-channel-id=\"currentChannelId\"\r\n          @select-channel=\"selectChannel\"\r\n        />\r\n      </div>\r\n\r\n      <!-- 在线用户列表 -->\r\n      <OnlineUsersSidebar \r\n        :onlineUsers=\"onlineUsers\" \r\n        :currentUsername=\"username\"\r\n        @open-profile-editor=\"openProfileEditor\"\r\n      />\r\n      \r\n      <!-- 聊天容器 -->\r\n      <ChatContainer \r\n        :currentUser=\"{ username, avatar }\" \r\n        :current-server=\"currentServer\"\r\n        :current-channel=\"currentChannel\"\r\n        @update-online-users=\"updateOnlineUsers\"\r\n        @open-profile-editor=\"openProfileEditor\"\r\n      />\r\n\r\n      <!-- 个人资料编辑器 -->\r\n      <UserProfileEditor\r\n        v-if=\"showProfileEditor\"\r\n        :isOpen=\"showProfileEditor\"\r\n        @close=\"closeProfileEditor\"\r\n        @update-profile=\"updateProfile\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LoginForm from './components/auth/LoginForm.vue'\r\nimport ChatContainer from './components/chat/ChatContainer.vue'\r\nimport ServerList from './components/chat/ServerList.vue'\r\nimport OnlineUsersSidebar from './components/chat/OnlineUsersSidebar.vue'\r\nimport UserProfileEditor from './components/chat/UserProfileEditor.vue'\r\nimport ChannelList from './components/chat/ChannelList.vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    LoginForm,\r\n    ChatContainer,\r\n    ServerList,\r\n    OnlineUsersSidebar,\r\n    UserProfileEditor,\r\n    ChannelList\r\n  },\r\n  data() {\r\n    return {\r\n      username: localStorage.getItem('chat-username') || '',\r\n      avatar: localStorage.getItem('chat-avatar') || '',\r\n      showProfileEditor: false,\r\n      onlineUsers: [],\r\n      currentServerId: localStorage.getItem('current-server-id') || 'home',\r\n      currentServer: {\r\n        id: 'home',\r\n        name: '主页',\r\n        description: '欢迎来到聊天室！'\r\n      },\r\n      currentChannelId: '',\r\n      currentChannel: null\r\n    }\r\n  },\r\n  created() {\r\n    // 从localStorage获取用户信息\r\n    const savedUsername = localStorage.getItem('chat-username')\r\n    const savedAvatar = localStorage.getItem('chat-avatar')\r\n    \r\n    if (savedUsername) {\r\n      this.username = savedUsername\r\n      this.avatar = savedAvatar || ''\r\n    }\r\n    \r\n    // 应用保存的主题\r\n    const savedTheme = localStorage.getItem('chat-theme') || 'discord'\r\n    document.body.classList.add(`theme-${savedTheme}`)\r\n\r\n    // 恢复上次选择的服务器\r\n    const savedServerId = localStorage.getItem('current-server-id')\r\n    if (savedServerId) {\r\n      this.currentServerId = savedServerId\r\n    }\r\n\r\n    // 初始化默认服务器\r\n    const servers = this.getServers()\r\n    if (servers.length === 0) {\r\n      const defaultServer = this.createNewServer('测试服务器')\r\n      this.currentServerId = defaultServer.id\r\n      this.currentServer = defaultServer\r\n    } else if (this.currentServerId === 'home') {\r\n      // 如果当前是主页，切换到第一个服务器\r\n      this.currentServerId = servers[0].id\r\n      this.currentServer = servers[0]\r\n    }\r\n  },\r\n  methods: {\r\n    setUsername(userData) {\r\n      this.username = userData.username\r\n      this.avatar = userData.avatar || ''\r\n      \r\n      // 保存用户信息到localStorage\r\n      localStorage.setItem('chat-username', this.username)\r\n      if (this.avatar) {\r\n        localStorage.setItem('chat-avatar', this.avatar)\r\n      }\r\n    },\r\n    \r\n    // 更新在线用户列表\r\n    updateOnlineUsers(users) {\r\n      this.onlineUsers = users\r\n    },\r\n    \r\n    // 打开个人资料编辑器\r\n    openProfileEditor() {\r\n      this.showProfileEditor = true\r\n    },\r\n    \r\n    // 关闭个人资料编辑器\r\n    closeProfileEditor() {\r\n      this.showProfileEditor = false\r\n    },\r\n    \r\n    // 更新个人资料\r\n    updateProfile(updatedProfile) {\r\n      this.username = updatedProfile.username\r\n      this.avatar = updatedProfile.avatar\r\n      this.showProfileEditor = false\r\n      \r\n      // 保存到localStorage\r\n      localStorage.setItem('chat-username', this.username)\r\n      localStorage.setItem('chat-avatar', this.avatar)\r\n    },\r\n\r\n    // 切换服务器\r\n    changeServer(server) {\r\n      this.currentServerId = server.id\r\n      this.currentServer = server\r\n      this.currentChannelId = ''\r\n      this.currentChannel = null\r\n      \r\n      // 保存当前服务器ID到localStorage\r\n      localStorage.setItem('current-server-id', server.id)\r\n    },\r\n\r\n    // 选择频道\r\n    selectChannel(channel) {\r\n      this.currentChannelId = channel.id\r\n      this.currentChannel = channel\r\n    },\r\n\r\n    // 打开服务器设置\r\n    openServerSettings() {\r\n      // TODO: 实现服务器设置功能\r\n      console.log('Opening server settings')\r\n    },\r\n\r\n    // 显示添加服务器对话框\r\n    showAddServerDialog() {\r\n      // TODO: 实现添加服务器功能\r\n      console.log('Opening add server dialog')\r\n    },\r\n\r\n    // 显示服务器浏览\r\n    showExploreServers() {\r\n      // TODO: 实现服务器浏览功能\r\n      console.log('Opening server browser')\r\n    },\r\n\r\n    // 创建新服务器\r\n    createNewServer(serverName) {\r\n      const serverId = 'server-' + Date.now()\r\n      const newServer = {\r\n        id: serverId,\r\n        name: serverName,\r\n        icon: null,\r\n        description: this.serverTemplate.description,\r\n        channels: [...this.serverTemplate.channels],\r\n        roles: [...this.serverTemplate.roles],\r\n        categories: [...this.serverTemplate.categories],\r\n        members: [],\r\n        createdAt: new Date().toISOString(),\r\n        ownerId: this.username\r\n      }\r\n\r\n      // 保存服务器信息到 localStorage\r\n      const servers = JSON.parse(localStorage.getItem('chat-servers') || '[]')\r\n      servers.push(newServer)\r\n      localStorage.setItem('chat-servers', JSON.stringify(servers))\r\n\r\n      return newServer\r\n    },\r\n\r\n    // 获取所有服务器\r\n    getServers() {\r\n      return JSON.parse(localStorage.getItem('chat-servers') || '[]')\r\n    },\r\n\r\n    // 更新服务器信息\r\n    updateServer(server) {\r\n      const servers = this.getServers()\r\n      const index = servers.findIndex(s => s.id === server.id)\r\n      if (index !== -1) {\r\n        servers[index] = server\r\n        localStorage.setItem('chat-servers', JSON.stringify(servers))\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式重置 */\r\n:root {\r\n  /* Discord's color palette */\r\n  --background-primary: #36393f;         /* Main chat background */\r\n  --background-secondary: #2f3136;       /* Sidebar background */\r\n  --background-tertiary: #202225;        /* Server list background */\r\n  --background-accent: #4f545c;          /* Hover states */\r\n  --text-normal: #dcddde;               /* Normal text color */\r\n  --text-muted: #72767d;                /* Muted text color */\r\n  --text-link: #00b0f4;                 /* Link color */\r\n  --header-primary: #fff;               /* Header text color */\r\n  --interactive-normal: #b9bbbe;        /* Interactive elements */\r\n  --interactive-hover: #dcddde;         /* Interactive elements on hover */\r\n  --interactive-active: #fff;           /* Interactive elements when active */\r\n  --primary-color: #5865f2;             /* Brand color */\r\n  --online-color: #3ba55d;              /* Online status */\r\n  --idle-color: #faa81a;                /* Idle status */\r\n  --dnd-color: #ed4245;                 /* Do not disturb status */\r\n  --offline-color: #747f8d;             /* Offline status */\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody, html {\r\n  height: 100%;\r\n  width: 100%;\r\n  font-family: 'gg sans', 'Noto Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;  /* Discord's font stack */\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: var(--text-normal);\r\n  background-color: var(--background-tertiary);\r\n}\r\n\r\n#app {\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.app-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  padding: 1rem;\r\n  background-color: var(--background-tertiary);\r\n}\r\n\r\n/* Discord布局 */\r\n.discord-layout {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-color: var(--background-primary);\r\n}\r\n\r\n/* 滚动条样式 */\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n  height: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background-color: transparent;\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: var(--background-accent);\r\n  border-radius: 4px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background-color: var(--interactive-normal);\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .chat-main {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .discord-layout {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .server-list {\r\n    width: 100% !important;\r\n    height: auto !important;\r\n    flex-direction: row !important;\r\n    padding: 8px !important;\r\n  }\r\n  \r\n  .server-items {\r\n    flex-direction: row !important;\r\n    padding: 0 8px !important;\r\n  }\r\n  \r\n  .server-item {\r\n    margin-right: 8px !important;\r\n    margin-bottom: 0 !important;\r\n  }\r\n}\r\n\r\n/* 动画过渡 */\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.fade-enter-from, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n/* 按钮基础样式 */\r\nbutton {\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: var(--background-accent);\r\n}\r\n\r\n/* 输入框基础样式 */\r\ninput, textarea {\r\n  background-color: var(--background-tertiary);\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px;\r\n  color: var(--text-normal);\r\n  font-size: 14px;\r\n  outline: none;\r\n  transition: border-color 0.2s ease;\r\n}\r\n\r\ninput:focus, textarea:focus {\r\n  box-shadow: 0 0 0 2px var(--primary-color);\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n.app-container {\r\n  height: 100vh;\r\n  background-color: var(--background-primary);\r\n}\r\n\r\n.discord-layout {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n.channels-sidebar {\r\n  width: 240px;\r\n  background-color: var(--background-secondary);\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.server-header {\r\n  height: 48px;\r\n  padding: 0 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid var(--background-tertiary);\r\n  background-color: var(--background-secondary);\r\n}\r\n\r\n.server-header h2 {\r\n  margin: 0;\r\n  color: var(--header-primary);\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.server-settings-button {\r\n  width: 32px;\r\n  height: 32px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-muted);\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  transition: color 0.2s ease;\r\n}\r\n\r\n.server-settings-button:hover {\r\n  color: var(--text-normal);\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}