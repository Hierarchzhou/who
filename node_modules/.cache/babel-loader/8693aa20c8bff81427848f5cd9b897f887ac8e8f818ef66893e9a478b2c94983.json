{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"message-list\",\n  ref: \"messageList\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"no-messages\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"message-avatar\"\n};\nconst _hoisted_5 = [\"src\", \"alt\", \"onClick\"];\nconst _hoisted_6 = {\n  key: 1,\n  class: \"status-indicator online\"\n};\nconst _hoisted_7 = {\n  class: \"message-header\"\n};\nconst _hoisted_8 = {\n  class: \"username\"\n};\nconst _hoisted_9 = {\n  class: \"timestamp\"\n};\nconst _hoisted_10 = {\n  class: \"message-body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StickerMessage = _resolveComponent(\"StickerMessage\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_ctx.messages.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" 暂无消息，开始聊天吧！ \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.messages, message => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: message.id || message.timestamp,\n      class: \"message-item\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n      src: message.avatar || _ctx.defaultAvatar,\n      alt: message.username,\n      class: _normalizeClass([\"avatar-img\", {\n        'clickable': message.sender === _ctx.currentUsername\n      }]),\n      onError: _cache[0] || (_cache[0] = (...args) => _ctx.handleAvatarError && _ctx.handleAvatarError(...args)),\n      onClick: $event => _ctx.handleAvatarClick(message.sender)\n    }, null, 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_5), message.sender === _ctx.currentUsername ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: _normalizeClass(['status-indicator', _ctx.userStatus])\n    }, null, 2 /* CLASS */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6))]), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"message\", {\n        'self': message.sender === _ctx.currentUsername,\n        'other': message.sender !== _ctx.currentUsername\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString(message.username), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, _toDisplayString(_ctx.formatTime(message.timestamp)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_ctx.isSticker(message.content) ? (_openBlock(), _createBlock(_component_StickerMessage, {\n      key: 0,\n      \"sticker-id\": _ctx.extractStickerId(message.content)\n    }, null, 8 /* PROPS */, [\"sticker-id\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createTextVNode(_toDisplayString(message.content), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))])], 2 /* CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))]))], 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","key","_createElementBlock","_hoisted_1","_ctx","messages","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","message","id","timestamp","_createElementVNode","_hoisted_4","src","avatar","defaultAvatar","alt","username","_normalizeClass","sender","currentUsername","onError","_cache","args","handleAvatarError","onClick","$event","handleAvatarClick","_hoisted_5","userStatus","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","_hoisted_9","formatTime","_hoisted_10","isSticker","content","_createBlock","_component_StickerMessage","extractStickerId","_createTextVNode"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\MessageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-list\" ref=\"messageList\">\r\n    <div v-if=\"messages.length === 0\" class=\"no-messages\">\r\n      暂无消息，开始聊天吧！\r\n    </div>\r\n    <div v-else>\r\n      <div \r\n        v-for=\"message in messages\" \r\n        :key=\"message.id || message.timestamp\" \r\n        class=\"message-item\"\r\n      >\r\n        <div class=\"message-avatar\">\r\n          <img \r\n            :src=\"message.avatar || defaultAvatar\" \r\n            :alt=\"message.username\" \r\n            class=\"avatar-img\" \r\n            @error=\"handleAvatarError\"\r\n            @click=\"handleAvatarClick(message.sender)\"\r\n            :class=\"{ 'clickable': message.sender === currentUsername }\"\r\n          />\r\n          <div \r\n            v-if=\"message.sender === currentUsername\"\r\n            :class=\"['status-indicator', userStatus]\"\r\n          ></div>\r\n          <div \r\n            v-else\r\n            class=\"status-indicator online\"\r\n          ></div>\r\n        </div>\r\n        <div \r\n          class=\"message\"\r\n          :class=\"{ 'self': message.sender === currentUsername, 'other': message.sender !== currentUsername }\"\r\n        >\r\n          <div class=\"message-header\">\r\n            <span class=\"username\">{{ message.username }}</span>\r\n            <span class=\"timestamp\">{{ formatTime(message.timestamp) }}</span>\r\n          </div>\r\n          <div class=\"message-body\">\r\n            <template v-if=\"isSticker(message.content)\">\r\n              <StickerMessage :sticker-id=\"extractStickerId(message.content)\" />\r\n            </template>\r\n            <template v-else>\r\n              {{ message.content }}\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, computed, ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport StickerMessage from './StickerMessage.vue'\r\nimport { formatTimestamp } from '@/utils/time'\r\n\r\nexport default defineComponent({\r\n  name: 'MessageList',\r\n  components: {\r\n    StickerMessage\r\n  },\r\n  props: {\r\n    messages: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    currentUsername: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  emits: ['open-profile-editor'],\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n    const defaultAvatar = 'https://api.dicebear.com/7.x/bottts/svg'\r\n    const messageList = ref(null)\r\n    \r\n    // 获取当前状态，使用userProfile store\r\n    const userStatus = computed(() => store.getters['userProfile/status'])\r\n\r\n    const handleAvatarError = (event) => {\r\n      event.target.src = defaultAvatar\r\n    }\r\n\r\n    const handleAvatarClick = (sender) => {\r\n      if (sender === props.currentUsername) {\r\n        emit('open-profile-editor')\r\n      }\r\n    }\r\n\r\n    const isSticker = (content) => {\r\n      return typeof content === 'string' && content.startsWith('[sticker:') && content.endsWith(']')\r\n    }\r\n\r\n    const extractStickerId = (content) => {\r\n      if (!content) return null\r\n      const match = content.match(/\\[sticker:(.+?)\\]/)\r\n      return match ? match[1] : null\r\n    }\r\n\r\n    const scrollToBottom = () => {\r\n      if (messageList.value) {\r\n        messageList.value.scrollTop = messageList.value.scrollHeight\r\n      }\r\n    }\r\n\r\n    return {\r\n      defaultAvatar,\r\n      userStatus,\r\n      handleAvatarError,\r\n      handleAvatarClick,\r\n      formatTime: formatTimestamp,\r\n      isSticker,\r\n      extractStickerId,\r\n      scrollToBottom,\r\n      messageList\r\n    }\r\n  },\r\n  watch: {\r\n    messages: {\r\n      handler() {\r\n        this.scrollToBottom()\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  mounted() {\r\n    this.scrollToBottom()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.message-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: var(--chat-background); /* 使用主题变量 */\r\n  position: relative;\r\n}\r\n\r\n.message-item {\r\n  display: flex;\r\n  margin-bottom: 1.5rem;\r\n  align-items: flex-start;\r\n}\r\n\r\n.message-avatar {\r\n  margin-right: 0.75rem;\r\n  flex-shrink: 0;\r\n  position: relative;\r\n}\r\n\r\n.avatar-img {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: var(--avatar-border, 2px solid rgba(255, 255, 255, 0.1));\r\n  box-shadow: var(--avatar-shadow, 0 2px 4px rgba(0, 0, 0, 0.2));\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n  position: relative;\r\n  z-index: 1;\r\n  background-color: #2f3136; /* Discord avatar background color */\r\n}\r\n\r\n.avatar-img:hover {\r\n  transform: scale(1.1);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n/* 添加状态指示器样式 */\r\n.status-indicator {\r\n  position: absolute;\r\n  bottom: -2px;\r\n  right: -2px;\r\n  width: 14px;\r\n  height: 14px;\r\n  border-radius: 50%;\r\n  background-color: #747f8d;\r\n  border: 2px solid var(--chat-background);\r\n  z-index: 2;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.status-indicator.online {\r\n  background-color: #43b581;\r\n}\r\n\r\n.status-indicator.away {\r\n  background-color: #faa61a;\r\n}\r\n\r\n.status-indicator.busy {\r\n  background-color: #f04747;\r\n}\r\n\r\n.status-indicator.invisible {\r\n  background-color: #747f8d;\r\n}\r\n\r\n.status-indicator.online {\r\n  background-color: #43b581;\r\n}\r\n\r\n.status-indicator.away {\r\n  background-color: #faa61a;\r\n}\r\n\r\n.status-indicator.busy {\r\n  background-color: #f04747;\r\n}\r\n\r\n.status-indicator.invisible {\r\n  background-color: #747f8d;\r\n}\r\n\r\n.message-avatar::after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: var(--online-indicator);\r\n  border-radius: 50%;\r\n  bottom: 0;\r\n  left: 0;\r\n  border: 2px solid var(--chat-background);\r\n  z-index: 2;\r\n}\r\n\r\n.message {\r\n  max-width: 80%;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 0.5rem;\r\n  position: relative;\r\n  animation: fadeIn 0.3s ease-out;\r\n  box-shadow: var(--message-shadow);\r\n  transition: transform 0.2s ease;\r\n  background-color: var(--other-message-bg); /* 使用主题变量 */\r\n  color: var(--other-message-color); /* 使用主题变量 */\r\n}\r\n\r\n.message:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.message.self {\r\n  background-color: var(--self-message-bg); /* 使用主题变量 */\r\n  color: var(--self-message-color); /* 使用主题变量 */\r\n}\r\n\r\n.message-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.85rem;\r\n  opacity: 0.8;\r\n}\r\n\r\n.username {\r\n  font-weight: bold;\r\n}\r\n\r\n.timestamp {\r\n  font-size: 0.75rem;\r\n  opacity: 0.7;\r\n  margin-left: 0.75rem;\r\n}\r\n\r\n.message-body {\r\n  word-break: break-word;\r\n  line-height: 1.4;\r\n}\r\n\r\n.no-messages {\r\n  text-align: center;\r\n  color: var(--timestamp-color); /* 使用主题变量 */\r\n  margin-top: 2rem;\r\n  font-style: italic;\r\n  opacity: 0.7;\r\n}\r\n\r\n/* 表情包消息样式 */\r\n.message-body :deep(.sticker-message) {\r\n  display: inline-block;\r\n  margin: 0.25rem 0;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC,cAAc;EAACC,GAAG,EAAC;;;EADhCC,GAAA;EAEsCF,KAAK,EAAC;;;EAF5CE,GAAA;AAAA;;EAWaF,KAAK,EAAC;AAAgB;mBAXnC;;EAAAE,GAAA;EA0BYF,KAAK,EAAC;;;EAOHA,KAAK,EAAC;AAAgB;;EACnBA,KAAK,EAAC;AAAU;;EAChBA,KAAK,EAAC;AAAW;;EAEpBA,KAAK,EAAC;AAAc;;;uBApCjCG,mBAAA,CA+CM,OA/CNC,UA+CM,GA9COC,IAAA,CAAAC,QAAQ,CAACC,MAAM,U,cAA1BJ,mBAAA,CAEM,OAFNK,UAEM,EAFgD,eAEtD,M,cACAL,mBAAA,CA0CM,OA/CVM,UAAA,I,kBAMMN,mBAAA,CAwCMO,SAAA,QA9CZC,WAAA,CAO0BN,IAAA,CAAAC,QAAQ,EAAnBM,OAAO;yBADhBT,mBAAA,CAwCM;MAtCHD,GAAG,EAAEU,OAAO,CAACC,EAAE,IAAID,OAAO,CAACE,SAAS;MACrCd,KAAK,EAAC;QAENe,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJD,mBAAA,CAOE;MANCE,GAAG,EAAEL,OAAO,CAACM,MAAM,IAAIb,IAAA,CAAAc,aAAa;MACpCC,GAAG,EAAER,OAAO,CAACS,QAAQ;MACtBrB,KAAK,EAfjBsB,eAAA,EAekB,YAAY;QAAA,aAGKV,OAAO,CAACW,MAAM,KAAKlB,IAAA,CAAAmB;MAAe;MAFxDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEtB,IAAA,CAAAuB,iBAAA,IAAAvB,IAAA,CAAAuB,iBAAA,IAAAD,IAAA,CAAiB;MACxBE,OAAK,EAAAC,MAAA,IAAEzB,IAAA,CAAA0B,iBAAiB,CAACnB,OAAO,CAACW,MAAM;oDAjBpDS,UAAA,GAqBkBpB,OAAO,CAACW,MAAM,KAAKlB,IAAA,CAAAmB,eAAe,I,cAD1CrB,mBAAA,CAGO;MAvBjBD,GAAA;MAsBaF,KAAK,EAtBlBsB,eAAA,sBAsByCjB,IAAA,CAAA4B,UAAU;8CAEzC9B,mBAAA,CAGO,OAHP+B,UAGO,G,GAETnB,mBAAA,CAgBM;MAfJf,KAAK,EA9BfsB,eAAA,EA8BgB,SAAS;QAAA,QACGV,OAAO,CAACW,MAAM,KAAKlB,IAAA,CAAAmB,eAAe;QAAA,SAAWZ,OAAO,CAACW,MAAM,KAAKlB,IAAA,CAAAmB;MAAe;QAEjGT,mBAAA,CAGM,OAHNoB,UAGM,GAFJpB,mBAAA,CAAoD,QAApDqB,UAAoD,EAAAC,gBAAA,CAA1BzB,OAAO,CAACS,QAAQ,kBAC1CN,mBAAA,CAAkE,QAAlEuB,UAAkE,EAAAD,gBAAA,CAAvChC,IAAA,CAAAkC,UAAU,CAAC3B,OAAO,CAACE,SAAS,kB,GAEzDC,mBAAA,CAOM,OAPNyB,WAOM,GANYnC,IAAA,CAAAoC,SAAS,CAAC7B,OAAO,CAAC8B,OAAO,K,cACvCC,YAAA,CAAkEC,yBAAA;MAvChF1C,GAAA;MAuC+B,YAAU,EAAEG,IAAA,CAAAwC,gBAAgB,CAACjC,OAAO,CAAC8B,OAAO;8DAE/DvC,mBAAA,CAEWO,SAAA;MA3CvBR,GAAA;IAAA,IAAA4C,gBAAA,CAAAT,gBAAA,CA0CiBzB,OAAO,CAAC8B,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}