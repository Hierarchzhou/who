{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal-container\"\n};\nconst _hoisted_2 = {\n  class: \"modal-header\"\n};\nconst _hoisted_3 = {\n  class: \"modal-content\"\n};\nconst _hoisted_4 = {\n  class: \"channel-type-selector\"\n};\nconst _hoisted_5 = {\n  class: \"type-options\"\n};\nconst _hoisted_6 = {\n  class: \"channel-settings\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = {\n  class: \"checkbox-label\"\n};\nconst _hoisted_11 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_12 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.isOpen ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"modal-overlay\",\n    onClick: _cache[8] || (_cache[8] = _withModifiers((...args) => $options.closeModal && $options.closeModal(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 模态框头部 \"), _createElementVNode(\"div\", _hoisted_2, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"创建频道\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"×\")]), _createCommentVNode(\" 模态框内容 \"), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 频道类型选择 \"), _createElementVNode(\"div\", _hoisted_4, [_cache[12] || (_cache[12] = _createElementVNode(\"h3\", null, \"频道类型\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"type-option\", {\n      active: $data.selectedType === 'text'\n    }]),\n    onClick: _cache[1] || (_cache[1] = $event => $data.selectedType = 'text')\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"span\", {\n    class: \"type-icon\"\n  }, \"#\", -1 /* HOISTED */), _createElementVNode(\"div\", {\n    class: \"type-info\"\n  }, [_createElementVNode(\"h4\", null, \"文字频道\"), _createElementVNode(\"p\", null, \"发送消息、图片和文件\")], -1 /* HOISTED */)]), 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"type-option\", {\n      active: $data.selectedType === 'voice'\n    }]),\n    onClick: _cache[2] || (_cache[2] = $event => $data.selectedType = 'voice')\n  }, _cache[11] || (_cache[11] = [_createElementVNode(\"span\", {\n    class: \"type-icon\"\n  }, \"🔊\", -1 /* HOISTED */), _createElementVNode(\"div\", {\n    class: \"type-info\"\n  }, [_createElementVNode(\"h4\", null, \"语音频道\"), _createElementVNode(\"p\", null, \"语音聊天和视频通话\")], -1 /* HOISTED */)]), 2 /* CLASS */)])]), _createCommentVNode(\" 频道设置 \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    for: \"channelName\"\n  }, \"频道名称\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"channelName\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.channelName = $event),\n    placeholder: \"输入频道名称\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.channelName]])]), _createElementVNode(\"div\", _hoisted_8, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    for: \"channelTopic\"\n  }, \"频道主题（可选）\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"channelTopic\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.channelTopic = $event),\n    placeholder: \"输入频道主题\",\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.channelTopic]])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"label\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.isPrivate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.isPrivate]]), _cache[15] || (_cache[15] = _createElementVNode(\"span\", null, \"设为私密频道\", -1 /* HOISTED */))]), _cache[16] || (_cache[16] = _createElementVNode(\"p\", {\n    class: \"help-text\"\n  }, \"只有被邀请的成员才能访问此频道\", -1 /* HOISTED */))])])]), _createCommentVNode(\" 模态框底部 \"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    class: \"cancel-button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"取消\"), _createElementVNode(\"button\", {\n    class: \"create-button\",\n    disabled: !$options.isValid,\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.createChannel && $options.createChannel(...args))\n  }, \" 创建频道 \", 8 /* PROPS */, _hoisted_12)])])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","$props","isOpen","_createElementBlock","key","onClick","_cache","_withModifiers","args","$options","closeModal","_createElementVNode","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_normalizeClass","active","$data","selectedType","$event","_hoisted_6","_hoisted_7","for","type","id","channelName","placeholder","_hoisted_8","channelTopic","_hoisted_9","_hoisted_10","isPrivate","_hoisted_11","disabled","isValid","createChannel","_hoisted_12"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\components\\chat\\CreateChannelModal.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal-overlay\" v-if=\"isOpen\" @click.self=\"closeModal\">\r\n    <div class=\"modal-container\">\r\n      <!-- 模态框头部 -->\r\n      <div class=\"modal-header\">\r\n        <h2>创建频道</h2>\r\n        <button class=\"close-button\" @click=\"closeModal\">×</button>\r\n      </div>\r\n\r\n      <!-- 模态框内容 -->\r\n      <div class=\"modal-content\">\r\n        <!-- 频道类型选择 -->\r\n        <div class=\"channel-type-selector\">\r\n          <h3>频道类型</h3>\r\n          <div class=\"type-options\">\r\n            <div \r\n              class=\"type-option\" \r\n              :class=\"{ active: selectedType === 'text' }\"\r\n              @click=\"selectedType = 'text'\"\r\n            >\r\n              <span class=\"type-icon\">#</span>\r\n              <div class=\"type-info\">\r\n                <h4>文字频道</h4>\r\n                <p>发送消息、图片和文件</p>\r\n              </div>\r\n            </div>\r\n            <div \r\n              class=\"type-option\" \r\n              :class=\"{ active: selectedType === 'voice' }\"\r\n              @click=\"selectedType = 'voice'\"\r\n            >\r\n              <span class=\"type-icon\">🔊</span>\r\n              <div class=\"type-info\">\r\n                <h4>语音频道</h4>\r\n                <p>语音聊天和视频通话</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 频道设置 -->\r\n        <div class=\"channel-settings\">\r\n          <div class=\"form-group\">\r\n            <label for=\"channelName\">频道名称</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"channelName\"\r\n              v-model=\"channelName\"\r\n              placeholder=\"输入频道名称\"\r\n              class=\"input-field\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"channelTopic\">频道主题（可选）</label>\r\n            <input \r\n              type=\"text\" \r\n              id=\"channelTopic\"\r\n              v-model=\"channelTopic\"\r\n              placeholder=\"输入频道主题\"\r\n              class=\"input-field\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"checkbox-label\">\r\n              <input \r\n                type=\"checkbox\" \r\n                v-model=\"isPrivate\"\r\n              />\r\n              <span>设为私密频道</span>\r\n            </label>\r\n            <p class=\"help-text\">只有被邀请的成员才能访问此频道</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 模态框底部 -->\r\n      <div class=\"modal-footer\">\r\n        <button class=\"cancel-button\" @click=\"closeModal\">取消</button>\r\n        <button \r\n          class=\"create-button\" \r\n          :disabled=\"!isValid\"\r\n          @click=\"createChannel\"\r\n        >\r\n          创建频道\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CreateChannelModal',\r\n  props: {\r\n    isOpen: {\r\n      type: Boolean,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      selectedType: 'text',  // 默认为文字频道\r\n      channelName: '',\r\n      channelTopic: '',\r\n      isPrivate: false\r\n    }\r\n  },\r\n  computed: {\r\n    isValid() {\r\n      return this.channelName.trim().length > 0\r\n    }\r\n  },\r\n  methods: {\r\n    closeModal() {\r\n      this.$emit('close')\r\n    },\r\n    createChannel() {\r\n      if (!this.isValid) return\r\n\r\n      const channelData = {\r\n        type: this.selectedType,\r\n        name: this.channelName.trim(),\r\n        topic: this.channelTopic.trim(),\r\n        isPrivate: this.isPrivate\r\n      }\r\n\r\n      this.$emit('create', channelData)\r\n      this.resetForm()\r\n      this.closeModal()\r\n    },\r\n    resetForm() {\r\n      this.selectedType = 'text'\r\n      this.channelName = ''\r\n      this.channelTopic = ''\r\n      this.isPrivate = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-container {\r\n  background-color: var(--background-primary);\r\n  border-radius: 8px;\r\n  width: 480px;\r\n  max-width: 90vw;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.modal-header {\r\n  padding: 16px 24px;\r\n  border-bottom: 1px solid var(--background-tertiary);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal-header h2 {\r\n  margin: 0;\r\n  color: var(--header-primary);\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-muted);\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n  padding: 0;\r\n}\r\n\r\n.close-button:hover {\r\n  color: var(--text-normal);\r\n}\r\n\r\n.modal-content {\r\n  padding: 24px;\r\n}\r\n\r\n.channel-type-selector h3 {\r\n  margin: 0 0 16px;\r\n  color: var(--header-secondary);\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.type-options {\r\n  display: grid;\r\n  gap: 12px;\r\n}\r\n\r\n.type-option {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 16px;\r\n  padding: 16px;\r\n  background-color: var(--background-secondary);\r\n  border: 2px solid var(--background-tertiary);\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.type-option:hover {\r\n  background-color: var(--background-secondary-alt);\r\n}\r\n\r\n.type-option.active {\r\n  border-color: var(--primary-color);\r\n  background-color: var(--background-secondary-alt);\r\n}\r\n\r\n.type-icon {\r\n  font-size: 24px;\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: var(--background-tertiary);\r\n  border-radius: 50%;\r\n}\r\n\r\n.type-info h4 {\r\n  margin: 0 0 4px;\r\n  color: var(--header-primary);\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.type-info p {\r\n  margin: 0;\r\n  color: var(--text-muted);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.channel-settings {\r\n  margin-top: 24px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  color: var(--header-secondary);\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: var(--background-tertiary);\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: var(--text-normal);\r\n  font-size: 1rem;\r\n}\r\n\r\n.input-field:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px var(--primary-color);\r\n}\r\n\r\n.checkbox-label {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n  color: var(--header-secondary);\r\n  font-size: 0.875rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.help-text {\r\n  margin: 4px 0 0 24px;\r\n  color: var(--text-muted);\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 16px 24px;\r\n  border-top: 1px solid var(--background-tertiary);\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n}\r\n\r\n.cancel-button,\r\n.create-button {\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 0.875rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.cancel-button {\r\n  background-color: transparent;\r\n  color: var(--text-normal);\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: var(--background-modifier-hover);\r\n}\r\n\r\n.create-button {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.create-button:hover {\r\n  background-color: var(--primary-color-dark);\r\n}\r\n\r\n.create-button:disabled {\r\n  background-color: var(--primary-color-disabled);\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}