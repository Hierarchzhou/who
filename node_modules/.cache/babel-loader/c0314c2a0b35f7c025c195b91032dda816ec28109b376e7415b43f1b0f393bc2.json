{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { useStore } from 'vuex';\nimport { computed } from 'vue';\nexport default {\n  name: 'OnlineUsersSidebar',\n  props: {\n    onlineUsers: {\n      type: Array,\n      required: true,\n      default: () => []\n    }\n  },\n  emits: ['open-profile-editor'],\n  setup(props, {\n    emit\n  }) {\n    const store = useStore();\n    const defaultAvatar = 'https://ui-avatars.com/api/?name=User&background=random';\n    const currentUsername = computed(() => store.getters['userProfile/username']);\n    const currentUserAvatar = computed(() => store.getters['userProfile/avatar']);\n    const currentUserStatus = computed(() => store.getters['userProfile/status']);\n\n    // Ê∑ªÂä†ÂÖ∂‰ªñÁî®Êà∑ÁöÑËÆ°ÁÆóÂ±ûÊÄß\n    const otherUsers = computed(() => props.onlineUsers.filter(user => user.username !== currentUsername.value));\n    const getStatusText = status => {\n      const statusMap = {\n        online: 'Âú®Á∫ø',\n        away: 'Á¶ªÂºÄ',\n        busy: 'ËØ∑ÂãøÊâìÊâ∞',\n        invisible: 'ÈöêË∫´'\n      };\n      return statusMap[status] || 'Á¶ªÁ∫ø';\n    };\n    const getCurrentUserAvatar = () => {\n      return currentUserAvatar.value || defaultAvatar;\n    };\n    const onAvatarError = e => {\n      e.target.src = defaultAvatar;\n    };\n\n    // Ê∑ªÂä†Â§ÑÁêÜÂ§¥ÂÉèÁÇπÂáªÁöÑÊñπÊ≥ï\n    const handleAvatarClick = () => {\n      emit('open-profile-editor');\n    };\n    return {\n      currentUsername,\n      currentUserStatus,\n      defaultAvatar,\n      getCurrentUserAvatar,\n      onAvatarError,\n      getStatusText,\n      otherUsers,\n      handleAvatarClick\n    };\n  }\n};","map":{"version":3,"names":["useStore","computed","name","props","onlineUsers","type","Array","required","default","emits","setup","emit","store","defaultAvatar","currentUsername","getters","currentUserAvatar","currentUserStatus","otherUsers","filter","user","username","value","getStatusText","status","statusMap","online","away","busy","invisible","getCurrentUserAvatar","onAvatarError","e","target","src","handleAvatarClick"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\components\\chat\\OnlineUsersSidebar.vue"],"sourcesContent":["<template>\r\n  <div class=\"online-users-sidebar\">\r\n    <!-- È¢ëÈÅì‰ø°ÊÅØ -->\r\n    <div class=\"channel-info\">\r\n      <h3 class=\"channel-name\">general</h3>\r\n      <button class=\"channel-button\">\r\n        <span class=\"icon\">‚öôÔ∏è</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Áî®Êà∑ÂàÜÁªÑÂàóË°® -->\r\n    <div class=\"users-list\">\r\n      <!-- Âú®Á∫øÁî®Êà∑ÁªÑ -->\r\n      <div class=\"user-group\">\r\n        <div class=\"group-header\">\r\n          <span class=\"group-name\">Âú®Á∫ø ‚Äî {{ onlineUsers.length }}</span>\r\n          <button class=\"group-collapse-button\">\r\n            <span class=\"icon\">‚ñº</span>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- ÂΩìÂâçÁî®Êà∑ -->\r\n        <div \r\n          class=\"user-item current-user\" \r\n          v-if=\"currentUsername\"\r\n          @click=\"handleAvatarClick\"\r\n        >\r\n          <div class=\"user-avatar-container\">\r\n            <img \r\n              :src=\"getCurrentUserAvatar()\" \r\n              alt=\"ÂΩìÂâçÁî®Êà∑Â§¥ÂÉè\" \r\n              class=\"user-avatar\"\r\n              @error=\"onAvatarError\"\r\n            />\r\n            <div \r\n              :class=\"['status-indicator', currentUserStatus]\"\r\n              :title=\"getStatusText(currentUserStatus)\"\r\n            ></div>\r\n          </div>\r\n          <div class=\"user-info\">\r\n            <div class=\"user-name\">{{ currentUsername }}</div>\r\n            <div class=\"user-status-text\">{{ getStatusText(currentUserStatus) }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- ÂÖ∂‰ªñÂú®Á∫øÁî®Êà∑ -->\r\n        <div \r\n          v-for=\"user in otherUsers\" \r\n          :key=\"user.username\"\r\n          class=\"user-item\"\r\n        >\r\n          <div class=\"user-avatar-container\">\r\n            <img \r\n              :src=\"user.avatar || defaultAvatar\" \r\n              alt=\"Áî®Êà∑Â§¥ÂÉè\" \r\n              class=\"user-avatar\"\r\n              @error=\"onAvatarError\"\r\n            />\r\n            <div \r\n              class=\"status-indicator online\"\r\n              title=\"Âú®Á∫ø\"\r\n            ></div>\r\n          </div>\r\n          <div class=\"user-info\">\r\n            <div class=\"user-name\">{{ user.username }}</div>\r\n            <div class=\"user-status-text\">Âú®Á∫ø</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Á¶ªÁ∫øÁî®Êà∑ÁªÑ -->\r\n      <div class=\"user-group\">\r\n        <div class=\"group-header\">\r\n          <span class=\"group-name\">Á¶ªÁ∫ø ‚Äî 0</span>\r\n          <button class=\"group-collapse-button\">\r\n            <span class=\"icon\">‚ñº</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- DiscordÈ£éÊ†ºÁöÑÁî®Êà∑ÂäüËÉΩÊ†è -->\r\n    <div class=\"user-controls\">\r\n      <!-- ÂΩìÂâçÁî®Êà∑‰ø°ÊÅØ -->\r\n      <div class=\"current-user-info\" @click=\"handleAvatarClick\">\r\n        <div class=\"user-avatar-container\">\r\n          <img \r\n            :src=\"getCurrentUserAvatar()\" \r\n            alt=\"ÂΩìÂâçÁî®Êà∑Â§¥ÂÉè\" \r\n            class=\"user-avatar\"\r\n            @error=\"onAvatarError\"\r\n          />\r\n          <div \r\n            :class=\"['status-indicator', currentUserStatus]\"\r\n            :title=\"getStatusText(currentUserStatus)\"\r\n          ></div>\r\n        </div>\r\n        <div class=\"user-details\">\r\n          <div class=\"user-name\">{{ currentUsername }}</div>\r\n          <div class=\"user-status\">{{ getStatusText(currentUserStatus) }}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- ÂäüËÉΩÊåâÈíÆÁªÑ -->\r\n      <div class=\"control-buttons\">\r\n        <button class=\"control-button\" title=\"È∫¶ÂÖãÈ£é\">\r\n          <span class=\"icon\">üé§</span>\r\n        </button>\r\n        <button class=\"control-button\" title=\"ËÄ≥Êú∫\">\r\n          <span class=\"icon\">üéß</span>\r\n        </button>\r\n        <button class=\"control-button\" title=\"ËÆæÁΩÆ\" @click=\"handleAvatarClick\">\r\n          <span class=\"icon\">‚öôÔ∏è</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useStore } from 'vuex'\r\nimport { computed } from 'vue'\r\n\r\nexport default {\r\n  name: 'OnlineUsersSidebar',\r\n  props: {\r\n    onlineUsers: {\r\n      type: Array,\r\n      required: true,\r\n      default: () => []\r\n    }\r\n  },\r\n  emits: ['open-profile-editor'],\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n    const defaultAvatar = 'https://ui-avatars.com/api/?name=User&background=random'\r\n\r\n    const currentUsername = computed(() => store.getters['userProfile/username'])\r\n    const currentUserAvatar = computed(() => store.getters['userProfile/avatar'])\r\n    const currentUserStatus = computed(() => store.getters['userProfile/status'])\r\n    \r\n    // Ê∑ªÂä†ÂÖ∂‰ªñÁî®Êà∑ÁöÑËÆ°ÁÆóÂ±ûÊÄß\r\n    const otherUsers = computed(() => \r\n      props.onlineUsers.filter(user => user.username !== currentUsername.value)\r\n    )\r\n\r\n    const getStatusText = (status) => {\r\n      const statusMap = {\r\n        online: 'Âú®Á∫ø',\r\n        away: 'Á¶ªÂºÄ',\r\n        busy: 'ËØ∑ÂãøÊâìÊâ∞',\r\n        invisible: 'ÈöêË∫´'\r\n      }\r\n      return statusMap[status] || 'Á¶ªÁ∫ø'\r\n    }\r\n\r\n    const getCurrentUserAvatar = () => {\r\n      return currentUserAvatar.value || defaultAvatar\r\n    }\r\n\r\n    const onAvatarError = (e) => {\r\n      e.target.src = defaultAvatar\r\n    }\r\n\r\n    // Ê∑ªÂä†Â§ÑÁêÜÂ§¥ÂÉèÁÇπÂáªÁöÑÊñπÊ≥ï\r\n    const handleAvatarClick = () => {\r\n      emit('open-profile-editor')\r\n    }\r\n\r\n    return {\r\n      currentUsername,\r\n      currentUserStatus,\r\n      defaultAvatar,\r\n      getCurrentUserAvatar,\r\n      onAvatarError,\r\n      getStatusText,\r\n      otherUsers,\r\n      handleAvatarClick\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.online-users-sidebar {\r\n  width: 240px;\r\n  height: 100vh;\r\n  background-color: var(--background-secondary);\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-shrink: 0;\r\n  border-left: 1px solid var(--background-tertiary);\r\n}\r\n\r\n.channel-info {\r\n  height: 48px;\r\n  padding: 0 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid var(--background-tertiary);\r\n  flex-shrink: 0;\r\n}\r\n\r\n.channel-name {\r\n  color: var(--header-primary);\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  flex: 1;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.channel-button {\r\n  width: 32px;\r\n  height: 32px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: none;\r\n  background: transparent;\r\n  border-radius: 4px;\r\n  color: var(--interactive-normal);\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.channel-button:hover {\r\n  color: var(--interactive-hover);\r\n  background-color: var(--background-modifier-hover);\r\n}\r\n\r\n.users-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 8px 0;\r\n}\r\n\r\n.user-group {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.group-header {\r\n  padding: 8px 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n}\r\n\r\n.group-name {\r\n  color: var(--channels-default);\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.group-collapse-button {\r\n  width: 16px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: none;\r\n  background: transparent;\r\n  color: var(--interactive-normal);\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.group-collapse-button:hover {\r\n  color: var(--interactive-hover);\r\n}\r\n\r\n.group-collapse-button .icon {\r\n  font-size: 10px;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 6px 8px;\r\n  margin: 1px 8px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.user-item:hover {\r\n  background-color: var(--background-modifier-hover);\r\n}\r\n\r\n.user-avatar-container {\r\n  position: relative;\r\n  width: 32px;\r\n  height: 32px;\r\n  margin-right: 12px;\r\n}\r\n\r\n.user-avatar {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n\r\n.status-indicator {\r\n  position: absolute;\r\n  bottom: -2px;\r\n  right: -2px;\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  border: 3px solid var(--background-secondary);\r\n  background-color: var(--offline-color);\r\n}\r\n\r\n.status-indicator.online {\r\n  background-color: var(--online-color);\r\n}\r\n\r\n.status-indicator.away {\r\n  background-color: var(--idle-color);\r\n}\r\n\r\n.status-indicator.busy {\r\n  background-color: var(--dnd-color);\r\n}\r\n\r\n.status-indicator.invisible {\r\n  background-color: var(--offline-color);\r\n}\r\n\r\n.user-info {\r\n  flex: 1;\r\n  min-width: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 2px;\r\n}\r\n\r\n.user-name {\r\n  color: var(--header-primary);\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.user-status-text {\r\n  color: var(--text-muted);\r\n  font-size: 12px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n/* ÊªöÂä®Êù°Ê†∑Âºè */\r\n.users-list::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n\r\n.users-list::-webkit-scrollbar-track {\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n}\r\n\r\n.users-list::-webkit-scrollbar-thumb {\r\n  background-color: var(--background-tertiary);\r\n  border-radius: 4px;\r\n  min-height: 40px;\r\n}\r\n\r\n.users-list::-webkit-scrollbar-thumb:hover {\r\n  background-color: var(--background-accent);\r\n}\r\n\r\n/* ÂìçÂ∫îÂºèÊ†∑Âºè */\r\n@media (max-width: 768px) {\r\n  .online-users-sidebar {\r\n    position: fixed;\r\n    right: 0;\r\n    top: 0;\r\n    z-index: 100;\r\n    transform: translateX(100%);\r\n    transition: transform 0.3s ease;\r\n  }\r\n\r\n  .online-users-sidebar.show {\r\n    transform: translateX(0);\r\n  }\r\n}\r\n\r\n/* DiscordÈ£éÊ†ºÁöÑÁî®Êà∑ÂäüËÉΩÊ†è */\r\n.user-controls {\r\n  height: 52px;\r\n  padding: 0 8px;\r\n  background-color: var(--background-tertiary);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-top: 1px solid var(--background-accent);\r\n}\r\n\r\n.current-user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n  flex: 1;\r\n}\r\n\r\n.current-user-info:hover {\r\n  background-color: var(--background-modifier-hover);\r\n}\r\n\r\n.user-details {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.user-name {\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: var(--header-primary);\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.user-status {\r\n  font-size: 12px;\r\n  color: var(--text-muted);\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.control-buttons {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n}\r\n\r\n.control-button {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: transparent;\r\n  border: none;\r\n  color: var(--interactive-normal);\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.control-button:hover {\r\n  color: var(--interactive-hover);\r\n  background-color: var(--background-modifier-hover);\r\n}\r\n\r\n.control-button .icon {\r\n  font-size: 20px;\r\n}\r\n\r\n/* ÂìçÂ∫îÂºèÊ†∑Âºè */\r\n@media (max-width: 768px) {\r\n  .user-controls {\r\n    padding: 0 4px;\r\n  }\r\n\r\n  .current-user-info {\r\n    padding: 4px;\r\n  }\r\n\r\n  .user-details {\r\n    display: none;\r\n  }\r\n\r\n  .control-button {\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n\r\n  .control-button .icon {\r\n    font-size: 18px;\r\n  }\r\n}\r\n</style> "],"mappings":";;AAwHA,SAASA,QAAO,QAAS,MAAK;AAC9B,SAASC,QAAO,QAAS,KAAI;AAE7B,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE;IACLC,WAAW,EAAE;MACXC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,KAAK,EAAE,CAAC,qBAAqB,CAAC;EAC9BC,KAAKA,CAACP,KAAK,EAAE;IAAEQ;EAAK,CAAC,EAAE;IACrB,MAAMC,KAAI,GAAIZ,QAAQ,CAAC;IACvB,MAAMa,aAAY,GAAI,yDAAwD;IAE9E,MAAMC,eAAc,GAAIb,QAAQ,CAAC,MAAMW,KAAK,CAACG,OAAO,CAAC,sBAAsB,CAAC;IAC5E,MAAMC,iBAAgB,GAAIf,QAAQ,CAAC,MAAMW,KAAK,CAACG,OAAO,CAAC,oBAAoB,CAAC;IAC5E,MAAME,iBAAgB,GAAIhB,QAAQ,CAAC,MAAMW,KAAK,CAACG,OAAO,CAAC,oBAAoB,CAAC;;IAE5E;IACA,MAAMG,UAAS,GAAIjB,QAAQ,CAAC,MAC1BE,KAAK,CAACC,WAAW,CAACe,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,QAAO,KAAMP,eAAe,CAACQ,KAAK,CAC1E;IAEA,MAAMC,aAAY,GAAKC,MAAM,IAAK;MAChC,MAAMC,SAAQ,GAAI;QAChBC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,MAAM;QACZC,SAAS,EAAE;MACb;MACA,OAAOJ,SAAS,CAACD,MAAM,KAAK,IAAG;IACjC;IAEA,MAAMM,oBAAmB,GAAIA,CAAA,KAAM;MACjC,OAAOd,iBAAiB,CAACM,KAAI,IAAKT,aAAY;IAChD;IAEA,MAAMkB,aAAY,GAAKC,CAAC,IAAK;MAC3BA,CAAC,CAACC,MAAM,CAACC,GAAE,GAAIrB,aAAY;IAC7B;;IAEA;IACA,MAAMsB,iBAAgB,GAAIA,CAAA,KAAM;MAC9BxB,IAAI,CAAC,qBAAqB;IAC5B;IAEA,OAAO;MACLG,eAAe;MACfG,iBAAiB;MACjBJ,aAAa;MACbiB,oBAAoB;MACpBC,aAAa;MACbR,aAAa;MACbL,UAAU;MACViB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}