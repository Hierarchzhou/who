{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils';\nexport default {\n  name: 'OnlineUsersSidebar',\n  props: {\n    // 在线用户列表\n    onlineUsers: {\n      type: Array,\n      default: () => []\n    },\n    // 当前用户名\n    currentUsername: {\n      type: String,\n      default: ''\n    }\n  },\n  setup(props) {\n    const store = useStore();\n\n    // 获取当前用户状态\n    const currentUserStatus = computed(() => store.getters['userStatus/currentStatus']);\n\n    // 除了当前用户之外的其他用户\n    const otherUsers = computed(() => props.onlineUsers.filter(user => user.username !== props.currentUsername));\n\n    // 获取当前用户头像\n    const getCurrentUserAvatar = () => {\n      const currentUser = props.onlineUsers.find(user => user.username === props.currentUsername);\n      return currentUser ? currentUser.avatar : getFallbackAvatarUrl();\n    };\n\n    // 获取状态文本\n    const getStatusText = status => {\n      const statusMap = {\n        online: '在线',\n        away: '离开',\n        busy: '请勿打扰',\n        invisible: '隐身',\n        offline: '离线'\n      };\n      return statusMap[status] || '在线';\n    };\n    return {\n      currentUserStatus,\n      otherUsers,\n      getCurrentUserAvatar,\n      getStatusText,\n      getFallbackAvatarUrl,\n      handleAvatarError\n    };\n  }\n};","map":{"version":3,"names":["computed","useStore","getFallbackAvatarUrl","handleAvatarError","name","props","onlineUsers","type","Array","default","currentUsername","String","setup","store","currentUserStatus","getters","otherUsers","filter","user","username","getCurrentUserAvatar","currentUser","find","avatar","getStatusText","status","statusMap","online","away","busy","invisible","offline"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\OnlineUsersSidebar.vue"],"sourcesContent":["<template>\r\n  <div class=\"online-users-sidebar\">\r\n    <!-- 侧边栏头部 -->\r\n    <div class=\"sidebar-header\">\r\n      <h3 class=\"sidebar-title\">在线用户 ({{ onlineUsers.length }})</h3>\r\n    </div>\r\n    \r\n    <!-- 用户列表 -->\r\n    <div class=\"users-list\">\r\n      <!-- 当前用户 -->\r\n      <div \r\n        class=\"user-item current-user\" \r\n        v-if=\"currentUsername\"\r\n      >\r\n        <div class=\"user-avatar-container\">\r\n          <img \r\n            :src=\"getCurrentUserAvatar()\" \r\n            alt=\"当前用户头像\" \r\n            class=\"user-avatar\"\r\n            @error=\"handleAvatarError\"\r\n          />\r\n          <div class=\"user-status\" :class=\"currentUserStatus\"></div>\r\n        </div>\r\n        <div class=\"user-info\">\r\n          <div class=\"user-name\">\r\n            {{ currentUsername }} \r\n            <span class=\"user-tag\">(我)</span>\r\n          </div>\r\n          <div class=\"user-status-text\">{{ getStatusText(currentUserStatus) }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 分隔线 -->\r\n      <div class=\"sidebar-divider\"></div>\r\n      \r\n      <!-- 其他在线用户 -->\r\n      <div \r\n        v-for=\"user in otherUsers\" \r\n        :key=\"user.username\"\r\n        class=\"user-item\"\r\n      >\r\n        <div class=\"user-avatar-container\">\r\n          <img \r\n            :src=\"user.avatar || getFallbackAvatarUrl()\" \r\n            alt=\"用户头像\" \r\n            class=\"user-avatar\"\r\n            @error=\"handleAvatarError\"\r\n          />\r\n          <div class=\"user-status\" :class=\"user.status || 'online'\"></div>\r\n        </div>\r\n        <div class=\"user-info\">\r\n          <div class=\"user-name\">{{ user.username }}</div>\r\n          <div class=\"user-status-text\">{{ getStatusText(user.status || 'online') }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 无用户时的提示 -->\r\n      <div v-if=\"otherUsers.length === 0 && !currentUsername\" class=\"no-users\">\r\n        暂无其他用户在线\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils'\r\n\r\nexport default {\r\n  name: 'OnlineUsersSidebar',\r\n  props: {\r\n    // 在线用户列表\r\n    onlineUsers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 当前用户名\r\n    currentUsername: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  \r\n  setup(props) {\r\n    const store = useStore()\r\n    \r\n    // 获取当前用户状态\r\n    const currentUserStatus = computed(() => store.getters['userStatus/currentStatus'])\r\n    \r\n    // 除了当前用户之外的其他用户\r\n    const otherUsers = computed(() => \r\n      props.onlineUsers.filter(user => user.username !== props.currentUsername)\r\n    )\r\n    \r\n    // 获取当前用户头像\r\n    const getCurrentUserAvatar = () => {\r\n      const currentUser = props.onlineUsers.find(\r\n        user => user.username === props.currentUsername\r\n      )\r\n      return currentUser ? currentUser.avatar : getFallbackAvatarUrl()\r\n    }\r\n    \r\n    // 获取状态文本\r\n    const getStatusText = (status) => {\r\n      const statusMap = {\r\n        online: '在线',\r\n        away: '离开',\r\n        busy: '请勿打扰',\r\n        invisible: '隐身',\r\n        offline: '离线'\r\n      }\r\n      return statusMap[status] || '在线'\r\n    }\r\n    \r\n    return {\r\n      currentUserStatus,\r\n      otherUsers,\r\n      getCurrentUserAvatar,\r\n      getStatusText,\r\n      getFallbackAvatarUrl,\r\n      handleAvatarError\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.online-users-sidebar {\r\n  width: 240px;\r\n  height: 100vh;\r\n  background-color: var(--background-secondary);\r\n  border-right: 1px solid var(--border-color);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.sidebar-header {\r\n  padding: 16px;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.sidebar-title {\r\n  color: var(--text-color);\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin: 0;\r\n}\r\n\r\n.users-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 8px 0;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.user-item:hover {\r\n  background-color: var(--background-modifier-hover);\r\n}\r\n\r\n.user-item.current-user {\r\n  background-color: var(--background-modifier-selected);\r\n}\r\n\r\n.user-avatar-container {\r\n  position: relative;\r\n  margin-right: 12px;\r\n}\r\n\r\n.user-avatar {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n\r\n.user-status {\r\n  position: absolute;\r\n  bottom: -2px;\r\n  right: -2px;\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  border: 2px solid var(--background-secondary);\r\n}\r\n\r\n.user-status.online {\r\n  background-color: #43b581;\r\n}\r\n\r\n.user-status.away {\r\n  background-color: #faa61a;\r\n}\r\n\r\n.user-status.busy {\r\n  background-color: #f04747;\r\n}\r\n\r\n.user-status.invisible {\r\n  background-color: #747f8d;\r\n}\r\n\r\n.user-status.offline {\r\n  background-color: #747f8d;\r\n}\r\n\r\n.user-info {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.user-name {\r\n  color: var(--text-color);\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.user-tag {\r\n  color: var(--text-muted);\r\n  font-size: 12px;\r\n  font-weight: normal;\r\n}\r\n\r\n.user-status-text {\r\n  color: var(--text-muted);\r\n  font-size: 12px;\r\n  margin-top: 2px;\r\n}\r\n\r\n.sidebar-divider {\r\n  height: 1px;\r\n  background-color: var(--border-color);\r\n  margin: 8px 16px;\r\n}\r\n\r\n.no-users {\r\n  padding: 16px;\r\n  text-align: center;\r\n  color: var(--text-muted);\r\n  font-style: italic;\r\n}\r\n\r\n/* 滚动条样式 */\r\n.users-list::-webkit-scrollbar {\r\n  width: 4px;\r\n}\r\n\r\n.users-list::-webkit-scrollbar-thumb {\r\n  background-color: var(--scrollbar-thumb);\r\n  border-radius: 2px;\r\n}\r\n\r\n.users-list::-webkit-scrollbar-track {\r\n  background-color: transparent;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .online-users-sidebar {\r\n    width: 100%;\r\n    height: auto;\r\n    max-height: 200px;\r\n  }\r\n  \r\n  .users-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 8px;\r\n  }\r\n  \r\n  .user-item {\r\n    width: auto;\r\n    margin: 4px;\r\n  }\r\n}\r\n</style> "],"mappings":";;;AAiEA,SAASA,QAAO,QAAS,KAAI;AAC7B,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,oBAAoB,EAAEC,iBAAgB,QAAS,yBAAwB;AAEhF,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE;IACL;IACAC,WAAW,EAAE;MACXC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACD;IACAC,eAAe,EAAE;MACfH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX;EACF,CAAC;EAEDG,KAAKA,CAACP,KAAK,EAAE;IACX,MAAMQ,KAAI,GAAIZ,QAAQ,CAAC;;IAEvB;IACA,MAAMa,iBAAgB,GAAId,QAAQ,CAAC,MAAMa,KAAK,CAACE,OAAO,CAAC,0BAA0B,CAAC;;IAElF;IACA,MAAMC,UAAS,GAAIhB,QAAQ,CAAC,MAC1BK,KAAK,CAACC,WAAW,CAACW,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,QAAO,KAAMd,KAAK,CAACK,eAAe,CAC1E;;IAEA;IACA,MAAMU,oBAAmB,GAAIA,CAAA,KAAM;MACjC,MAAMC,WAAU,GAAIhB,KAAK,CAACC,WAAW,CAACgB,IAAI,CACxCJ,IAAG,IAAKA,IAAI,CAACC,QAAO,KAAMd,KAAK,CAACK,eAClC;MACA,OAAOW,WAAU,GAAIA,WAAW,CAACE,MAAK,GAAIrB,oBAAoB,CAAC;IACjE;;IAEA;IACA,MAAMsB,aAAY,GAAKC,MAAM,IAAK;MAChC,MAAMC,SAAQ,GAAI;QAChBC,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE,IAAI;QACVC,IAAI,EAAE,MAAM;QACZC,SAAS,EAAE,IAAI;QACfC,OAAO,EAAE;MACX;MACA,OAAOL,SAAS,CAACD,MAAM,KAAK,IAAG;IACjC;IAEA,OAAO;MACLX,iBAAiB;MACjBE,UAAU;MACVI,oBAAoB;MACpBI,aAAa;MACbtB,oBAAoB;MACpBC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}