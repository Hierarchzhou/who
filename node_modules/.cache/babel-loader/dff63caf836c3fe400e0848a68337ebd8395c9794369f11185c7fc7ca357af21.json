{"ast":null,"code":"// 导入必要的组件和样式\nimport { Picker, EmojiIndex } from 'vue-emoji-mart';\nimport 'vue-emoji-mart/css/emoji-mart.css';\nimport data from 'emoji-mart/data/all.json';\nexport default {\n  name: 'MessageInput',\n  components: {\n    picker: Picker // 注册表情选择器组件\n  },\n  data() {\n    return {\n      message: '',\n      // 存储用户输入的消息\n      showEmojiPicker: false,\n      // 控制表情选择器的显示/隐藏\n      emojiIndex: new EmojiIndex(data),\n      // 表情数据索引\n      skinTone: 1,\n      // 表情肤色\n      customEmojis: [{\n        name: 'Vue',\n        shortNames: ['vue'],\n        text: '',\n        emoticons: [],\n        keywords: ['vue', 'framework'],\n        imageUrl: 'https://vuejs.org/images/logo.png'\n      }, {\n        name: 'Discord',\n        shortNames: ['discord'],\n        text: '',\n        emoticons: [],\n        keywords: ['discord', 'chat'],\n        imageUrl: 'https://assets-global.website-files.com/6257adef93867e50d84d30e2/636e0a6a49cf127bf92de1e2_icon_clyde_blurple_RGB.png'\n      }]\n    };\n  },\n  methods: {\n    // 发送消息\n    sendMessage() {\n      if (this.message.trim()) {\n        this.$emit('send-message', this.message);\n        this.message = '';\n        this.$nextTick(() => {\n          this.$refs.messageInput.focus();\n        });\n      }\n    },\n    // 切换表情选择器的显示/隐藏\n    toggleEmojiPicker(event) {\n      // 阻止事件冒泡，避免立即触发document的点击事件\n      event.stopPropagation();\n      this.showEmojiPicker = !this.showEmojiPicker;\n      if (this.showEmojiPicker) {\n        // 计算表情选择器的位置\n        this.$nextTick(() => {\n          const buttonRect = this.$refs.emojiButton.getBoundingClientRect();\n          const pickerEl = this.$refs.emojiPicker;\n\n          // 确保选择器显示在按钮上方且不超出视窗\n          pickerEl.style.bottom = '100%';\n          pickerEl.style.left = `${buttonRect.left}px`;\n        });\n      }\n    },\n    // 处理表情选择\n    onEmojiSelect(emoji) {\n      const textarea = this.$refs.messageInput;\n      const start = textarea.selectionStart;\n      const end = textarea.selectionEnd;\n\n      // 获取表情符号（原生或自定义）\n      const emojiToInsert = emoji.native || emoji.imageUrl;\n\n      // 插入表情\n      this.message = this.message.substring(0, start) + (emoji.native ? emojiToInsert : `[${emoji.name}]`) + this.message.substring(end);\n\n      // 更新光标位置\n      this.$nextTick(() => {\n        const newPosition = start + (emoji.native ? emojiToInsert.length : emoji.name.length + 2);\n        textarea.selectionStart = textarea.selectionEnd = newPosition;\n        textarea.focus();\n      });\n      this.showEmojiPicker = false;\n    }\n  },\n  mounted() {\n    this.$refs.messageInput.focus();\n\n    // 点击其他地方时关闭表情选择器\n    document.addEventListener('click', e => {\n      if (this.showEmojiPicker && !this.$refs.emojiPicker.contains(e.target) && !this.$refs.emojiButton.contains(e.target)) {\n        this.showEmojiPicker = false;\n      }\n    });\n  },\n  beforeDestroy() {\n    // 清理事件监听\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n};","map":{"version":3,"names":["Picker","EmojiIndex","data","name","components","picker","message","showEmojiPicker","emojiIndex","skinTone","customEmojis","shortNames","text","emoticons","keywords","imageUrl","methods","sendMessage","trim","$emit","$nextTick","$refs","messageInput","focus","toggleEmojiPicker","event","stopPropagation","buttonRect","emojiButton","getBoundingClientRect","pickerEl","emojiPicker","style","bottom","left","onEmojiSelect","emoji","textarea","start","selectionStart","end","selectionEnd","emojiToInsert","native","substring","newPosition","length","mounted","document","addEventListener","e","contains","target","beforeDestroy","removeEventListener","handleClickOutside"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\MessageInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-input-container\">\r\n    <!-- 表情按钮 -->\r\n    <button @click=\"toggleEmojiPicker\" class=\"emoji-button\" ref=\"emojiButton\">\r\n      😊\r\n    </button>\r\n    \r\n    <!-- 专业表情选择器 -->\r\n    <div v-show=\"showEmojiPicker\" class=\"emoji-picker-container\" ref=\"emojiPicker\">\r\n      <picker\r\n        :data=\"emojiIndex\"\r\n        :native=\"true\"\r\n        :show-preview=\"true\"\r\n        :show-search=\"true\"\r\n        :show-categories=\"true\"\r\n        :show-recent=\"true\"\r\n        :emoji-size=\"20\"\r\n        :emoji-sheet-size=\"32\"\r\n        :skin-tone=\"skinTone\"\r\n        @select=\"onEmojiSelect\"\r\n        title=\"选择表情\"\r\n        :custom-emojis=\"customEmojis\"\r\n        :i18n=\"{\r\n          search: '搜索表情',\r\n          categories: {\r\n            recent: '最近使用',\r\n            people: '表情与人物',\r\n            nature: '动物与自然',\r\n            foods: '食物与饮料',\r\n            activity: '活动',\r\n            places: '旅行与地点',\r\n            objects: '物品',\r\n            symbols: '符号',\r\n            flags: '旗帜'\r\n          }\r\n        }\"\r\n      />\r\n    </div>\r\n\r\n    <textarea\r\n      v-model=\"message\"\r\n      @keydown.enter.prevent=\"sendMessage\"\r\n      placeholder=\"输入消息...\"\r\n      class=\"message-input\"\r\n      ref=\"messageInput\"\r\n    ></textarea>\r\n    <button @click=\"sendMessage\" class=\"send-button\">\r\n      发送\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 导入必要的组件和样式\r\nimport { Picker, EmojiIndex } from 'vue-emoji-mart'\r\nimport 'vue-emoji-mart/css/emoji-mart.css'\r\nimport data from 'emoji-mart/data/all.json'\r\n\r\nexport default {\r\n  name: 'MessageInput',\r\n  components: {\r\n    picker: Picker  // 注册表情选择器组件\r\n  },\r\n  data() {\r\n    return {\r\n      message: '',  // 存储用户输入的消息\r\n      showEmojiPicker: false,  // 控制表情选择器的显示/隐藏\r\n      emojiIndex: new EmojiIndex(data),  // 表情数据索引\r\n      skinTone: 1,  // 表情肤色\r\n      customEmojis: [\r\n        {\r\n          name: 'Vue',\r\n          shortNames: ['vue'],\r\n          text: '',\r\n          emoticons: [],\r\n          keywords: ['vue', 'framework'],\r\n          imageUrl: 'https://vuejs.org/images/logo.png'\r\n        },\r\n        {\r\n          name: 'Discord',\r\n          shortNames: ['discord'],\r\n          text: '',\r\n          emoticons: [],\r\n          keywords: ['discord', 'chat'],\r\n          imageUrl: 'https://assets-global.website-files.com/6257adef93867e50d84d30e2/636e0a6a49cf127bf92de1e2_icon_clyde_blurple_RGB.png'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    // 发送消息\r\n    sendMessage() {\r\n      if (this.message.trim()) {\r\n        this.$emit('send-message', this.message);\r\n        this.message = '';\r\n        this.$nextTick(() => {\r\n          this.$refs.messageInput.focus();\r\n        });\r\n      }\r\n    },\r\n    // 切换表情选择器的显示/隐藏\r\n    toggleEmojiPicker(event) {\r\n      // 阻止事件冒泡，避免立即触发document的点击事件\r\n      event.stopPropagation();\r\n      this.showEmojiPicker = !this.showEmojiPicker;\r\n      \r\n      if (this.showEmojiPicker) {\r\n        // 计算表情选择器的位置\r\n        this.$nextTick(() => {\r\n          const buttonRect = this.$refs.emojiButton.getBoundingClientRect();\r\n          const pickerEl = this.$refs.emojiPicker;\r\n          \r\n          // 确保选择器显示在按钮上方且不超出视窗\r\n          pickerEl.style.bottom = '100%';\r\n          pickerEl.style.left = `${buttonRect.left}px`;\r\n        });\r\n      }\r\n    },\r\n    // 处理表情选择\r\n    onEmojiSelect(emoji) {\r\n      const textarea = this.$refs.messageInput;\r\n      const start = textarea.selectionStart;\r\n      const end = textarea.selectionEnd;\r\n      \r\n      // 获取表情符号（原生或自定义）\r\n      const emojiToInsert = emoji.native || emoji.imageUrl;\r\n      \r\n      // 插入表情\r\n      this.message = this.message.substring(0, start) + \r\n                    (emoji.native ? emojiToInsert : `[${emoji.name}]`) + \r\n                    this.message.substring(end);\r\n      \r\n      // 更新光标位置\r\n      this.$nextTick(() => {\r\n        const newPosition = start + (emoji.native ? emojiToInsert.length : emoji.name.length + 2);\r\n        textarea.selectionStart = textarea.selectionEnd = newPosition;\r\n        textarea.focus();\r\n      });\r\n      \r\n      this.showEmojiPicker = false;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$refs.messageInput.focus();\r\n    \r\n    // 点击其他地方时关闭表情选择器\r\n    document.addEventListener('click', (e) => {\r\n      if (this.showEmojiPicker && \r\n          !this.$refs.emojiPicker.contains(e.target) && \r\n          !this.$refs.emojiButton.contains(e.target)) {\r\n        this.showEmojiPicker = false;\r\n      }\r\n    });\r\n  },\r\n  beforeDestroy() {\r\n    // 清理事件监听\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-input-container {\r\n  display: flex;\r\n  padding: 1rem;\r\n  background-color: var(--input-background); /* 使用主题变量 */\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.message-input {\r\n  flex: 1;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 1.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  color: var(--input-color); /* 使用主题变量 */\r\n  font-size: 0.95rem;\r\n  resize: none;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  transition: all 0.2s ease;\r\n  margin-left: 0.5rem;\r\n}\r\n\r\n.message-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb, 138, 113, 88), 0.2);\r\n}\r\n\r\n.message-input::placeholder {\r\n  color: var(--input-placeholder); /* 使用主题变量 */\r\n  opacity: 0.7;\r\n}\r\n\r\n.send-button {\r\n  margin-left: 0.75rem;\r\n  padding: 0.5rem 1.25rem;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 1.5rem;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: var(--secondary-color);\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.send-button:active {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* 修改表情选择器容器样式 */\r\n.emoji-picker-container {\r\n  position: fixed; /* 改为fixed以避免容器限制 */\r\n  background-color: var(--background-primary);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n}\r\n\r\n/* 自定义 emoji-mart 样式 */\r\n:deep(.emoji-mart) {\r\n  background-color: var(--background-primary) !important;\r\n  border-color: var(--border-color) !important;\r\n}\r\n\r\n:deep(.emoji-mart-category-label) {\r\n  color: var(--text-normal) !important;\r\n}\r\n\r\n:deep(.emoji-mart-search input) {\r\n  background-color: var(--background-secondary) !important;\r\n  border-color: var(--border-color) !important;\r\n  color: var(--text-normal) !important;\r\n}\r\n\r\n:deep(.emoji-mart-bar) {\r\n  border-color: var(--border-color) !important;\r\n}\r\n\r\n/* 表情按钮样式优化 */\r\n.emoji-button {\r\n  padding: 0.5rem;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  transition: all 0.2s ease;\r\n  margin-right: 0.5rem;\r\n  position: relative;\r\n}\r\n\r\n.emoji-button:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.emoji-button:focus {\r\n  outline: none;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}