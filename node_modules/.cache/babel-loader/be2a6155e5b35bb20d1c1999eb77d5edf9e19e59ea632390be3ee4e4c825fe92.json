{"ast":null,"code":"/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/file/gpLBQuklPE2XsOskwwv7QW\n */\nimport { pickComponent } from './pickComponent.js';\nexport function getComponents({\n  prng,\n  options\n}) {\n  const baseComponent = pickComponent({\n    prng,\n    group: 'base',\n    values: options.base\n  });\n  const bodyComponent = pickComponent({\n    prng,\n    group: 'body',\n    values: options.body\n  });\n  const hairComponent = pickComponent({\n    prng,\n    group: 'hair',\n    values: options.hair\n  });\n  const lipsComponent = pickComponent({\n    prng,\n    group: 'lips',\n    values: options.lips\n  });\n  const beardComponent = pickComponent({\n    prng,\n    group: 'beard',\n    values: options.beard\n  });\n  const noseComponent = pickComponent({\n    prng,\n    group: 'nose',\n    values: options.nose\n  });\n  const eyesComponent = pickComponent({\n    prng,\n    group: 'eyes',\n    values: options.eyes\n  });\n  const glassesComponent = pickComponent({\n    prng,\n    group: 'glasses',\n    values: options.glasses\n  });\n  const browsComponent = pickComponent({\n    prng,\n    group: 'brows',\n    values: options.brows\n  });\n  const gestureComponent = pickComponent({\n    prng,\n    group: 'gesture',\n    values: options.gesture\n  });\n  const bodyIconComponent = pickComponent({\n    prng,\n    group: 'bodyIcon',\n    values: options.bodyIcon\n  });\n  return {\n    'base': baseComponent,\n    'body': bodyComponent,\n    'hair': hairComponent,\n    'lips': lipsComponent,\n    'beard': prng.bool(options.beardProbability) ? beardComponent : undefined,\n    'nose': noseComponent,\n    'eyes': eyesComponent,\n    'glasses': prng.bool(options.glassesProbability) ? glassesComponent : undefined,\n    'brows': browsComponent,\n    'gesture': prng.bool(options.gestureProbability) ? gestureComponent : undefined,\n    'bodyIcon': prng.bool(options.bodyIconProbability) ? bodyIconComponent : undefined\n  };\n}\n;","map":{"version":3,"names":["pickComponent","getComponents","prng","options","baseComponent","group","values","base","bodyComponent","body","hairComponent","hair","lipsComponent","lips","beardComponent","beard","noseComponent","nose","eyesComponent","eyes","glassesComponent","glasses","browsComponent","brows","gestureComponent","gesture","bodyIconComponent","bodyIcon","bool","beardProbability","undefined","glassesProbability","gestureProbability","bodyIconProbability"],"sources":["C:/Users/Administrator/Desktop/discord-chat-app/fack/just-do-it/node_modules/@dicebear/notionists/lib/utils/getComponents.js"],"sourcesContent":["/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/file/gpLBQuklPE2XsOskwwv7QW\n */\nimport { pickComponent } from './pickComponent.js';\nexport function getComponents({ prng, options }) {\n    const baseComponent = pickComponent({\n        prng,\n        group: 'base',\n        values: options.base,\n    });\n    const bodyComponent = pickComponent({\n        prng,\n        group: 'body',\n        values: options.body,\n    });\n    const hairComponent = pickComponent({\n        prng,\n        group: 'hair',\n        values: options.hair,\n    });\n    const lipsComponent = pickComponent({\n        prng,\n        group: 'lips',\n        values: options.lips,\n    });\n    const beardComponent = pickComponent({\n        prng,\n        group: 'beard',\n        values: options.beard,\n    });\n    const noseComponent = pickComponent({\n        prng,\n        group: 'nose',\n        values: options.nose,\n    });\n    const eyesComponent = pickComponent({\n        prng,\n        group: 'eyes',\n        values: options.eyes,\n    });\n    const glassesComponent = pickComponent({\n        prng,\n        group: 'glasses',\n        values: options.glasses,\n    });\n    const browsComponent = pickComponent({\n        prng,\n        group: 'brows',\n        values: options.brows,\n    });\n    const gestureComponent = pickComponent({\n        prng,\n        group: 'gesture',\n        values: options.gesture,\n    });\n    const bodyIconComponent = pickComponent({\n        prng,\n        group: 'bodyIcon',\n        values: options.bodyIcon,\n    });\n    return {\n        'base': baseComponent,\n        'body': bodyComponent,\n        'hair': hairComponent,\n        'lips': lipsComponent,\n        'beard': prng.bool(options.beardProbability) ? beardComponent : undefined,\n        'nose': noseComponent,\n        'eyes': eyesComponent,\n        'glasses': prng.bool(options.glassesProbability) ? glassesComponent : undefined,\n        'brows': browsComponent,\n        'gesture': prng.bool(options.gestureProbability) ? gestureComponent : undefined,\n        'bodyIcon': prng.bool(options.bodyIconProbability) ? bodyIconComponent : undefined,\n    };\n}\n;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,OAAO,SAASC,aAAaA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,EAAE;EAC7C,MAAMC,aAAa,GAAGJ,aAAa,CAAC;IAChCE,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACI;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGR,aAAa,CAAC;IAChCE,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACM;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGV,aAAa,CAAC;IAChCE,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACQ;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGZ,aAAa,CAAC;IAChCE,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACU;EACpB,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGd,aAAa,CAAC;IACjCE,IAAI;IACJG,KAAK,EAAE,OAAO;IACdC,MAAM,EAAEH,OAAO,CAACY;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGhB,aAAa,CAAC;IAChCE,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACc;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGlB,aAAa,CAAC;IAChCE,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACgB;EACpB,CAAC,CAAC;EACF,MAAMC,gBAAgB,GAAGpB,aAAa,CAAC;IACnCE,IAAI;IACJG,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAEH,OAAO,CAACkB;EACpB,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGtB,aAAa,CAAC;IACjCE,IAAI;IACJG,KAAK,EAAE,OAAO;IACdC,MAAM,EAAEH,OAAO,CAACoB;EACpB,CAAC,CAAC;EACF,MAAMC,gBAAgB,GAAGxB,aAAa,CAAC;IACnCE,IAAI;IACJG,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAEH,OAAO,CAACsB;EACpB,CAAC,CAAC;EACF,MAAMC,iBAAiB,GAAG1B,aAAa,CAAC;IACpCE,IAAI;IACJG,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAEH,OAAO,CAACwB;EACpB,CAAC,CAAC;EACF,OAAO;IACH,MAAM,EAAEvB,aAAa;IACrB,MAAM,EAAEI,aAAa;IACrB,MAAM,EAAEE,aAAa;IACrB,MAAM,EAAEE,aAAa;IACrB,OAAO,EAAEV,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC0B,gBAAgB,CAAC,GAAGf,cAAc,GAAGgB,SAAS;IACzE,MAAM,EAAEd,aAAa;IACrB,MAAM,EAAEE,aAAa;IACrB,SAAS,EAAEhB,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC4B,kBAAkB,CAAC,GAAGX,gBAAgB,GAAGU,SAAS;IAC/E,OAAO,EAAER,cAAc;IACvB,SAAS,EAAEpB,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC6B,kBAAkB,CAAC,GAAGR,gBAAgB,GAAGM,SAAS;IAC/E,UAAU,EAAE5B,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC8B,mBAAmB,CAAC,GAAGP,iBAAiB,GAAGI;EAC7E,CAAC;AACL;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}