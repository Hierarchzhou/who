{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, withModifiers as _withModifiers, vShow as _vShow, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"channel-list\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  class: \"category-name\"\n};\nconst _hoisted_4 = {\n  class: \"channels\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"channel-icon\"\n};\nconst _hoisted_7 = {\n  class: \"channel-name\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"channel-actions\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  key: 1,\n  class: \"unread-indicator\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CreateChannelModal = _resolveComponent(\"CreateChannelModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 频道分类 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"channel-category\",\n      key: category.id\n    }, [_createElementVNode(\"div\", {\n      class: \"category-header\",\n      onClick: $event => $options.toggleCategory(category.id)\n    }, [_createElementVNode(\"span\", {\n      class: _normalizeClass([\"category-arrow\", {\n        expanded: $data.expandedCategories.includes(category.id)\n      }])\n    }, \" ▶ \", 2 /* CLASS */), _createElementVNode(\"span\", _hoisted_3, _toDisplayString(category.name), 1 /* TEXT */), category.canCreateChannel ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"add-channel-button\",\n      onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.openCreateChannel && $options.openCreateChannel(...args), [\"stop\"])),\n      title: \"创建频道\"\n    }, \" + \")) : _createCommentVNode(\"v-if\", true)], 8 /* PROPS */, _hoisted_2), _createCommentVNode(\" 频道列表 \"), _withDirectives(_createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.channels, channel => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: channel.id,\n        class: _normalizeClass([\"channel-item\", {\n          active: $props.currentChannelId === channel.id,\n          unread: channel.hasUnread\n        }]),\n        onClick: $event => $options.selectChannel(channel)\n      }, [_createCommentVNode(\" 频道图标 \"), _createElementVNode(\"span\", _hoisted_6, _toDisplayString(channel.type === 'voice' ? '🔊' : '#'), 1 /* TEXT */), _createCommentVNode(\" 频道名称 \"), _createElementVNode(\"span\", _hoisted_7, _toDisplayString(channel.name), 1 /* TEXT */), _createCommentVNode(\" 频道操作按钮 \"), $props.currentChannelId === channel.id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n        class: \"action-button\",\n        title: \"邀请成员\",\n        onClick: _withModifiers($event => $options.inviteToChannel(channel), [\"stop\"])\n      }, \" 👥 \", 8 /* PROPS */, _hoisted_9), _createElementVNode(\"button\", {\n        class: \"action-button\",\n        title: \"频道设置\",\n        onClick: _withModifiers($event => $options.openChannelSettings(channel), [\"stop\"])\n      }, \" ⚙️ \", 8 /* PROPS */, _hoisted_10)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 未读消息提示 \"), channel.hasUnread ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString(channel.unreadCount > 99 ? '99+' : channel.unreadCount), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_5);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vShow, $data.expandedCategories.includes(category.id)]])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 创建频道模态框 \"), _createVNode(_component_CreateChannelModal, {\n    isOpen: $data.showCreateChannel,\n    onClose: $options.closeCreateChannel,\n    onCreate: $options.handleChannelCreate\n  }, null, 8 /* PROPS */, [\"isOpen\", \"onClose\", \"onCreate\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_Fragment","_renderList","$data","categories","category","id","_createElementVNode","onClick","$event","$options","toggleCategory","_normalizeClass","expanded","expandedCategories","includes","_hoisted_3","_toDisplayString","name","canCreateChannel","_cache","_withModifiers","args","openCreateChannel","title","_hoisted_2","_hoisted_4","channels","channel","$props","currentChannelId","hasUnread","selectChannel","_hoisted_6","type","_hoisted_7","_hoisted_8","inviteToChannel","_hoisted_9","openChannelSettings","_hoisted_10","_hoisted_11","unreadCount","_hoisted_5","_createVNode","_component_CreateChannelModal","isOpen","showCreateChannel","onClose","closeCreateChannel","onCreate","handleChannelCreate"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\components\\chat\\ChannelList.vue"],"sourcesContent":["<template>\r\n  <div class=\"channel-list\">\r\n    <!-- 频道分类 -->\r\n    <div class=\"channel-category\" v-for=\"category in categories\" :key=\"category.id\">\r\n      <div class=\"category-header\" @click=\"toggleCategory(category.id)\">\r\n        <span class=\"category-arrow\" :class=\"{ expanded: expandedCategories.includes(category.id) }\">\r\n          ▶\r\n        </span>\r\n        <span class=\"category-name\">{{ category.name }}</span>\r\n        <button \r\n          v-if=\"category.canCreateChannel\" \r\n          class=\"add-channel-button\"\r\n          @click.stop=\"openCreateChannel\"\r\n          title=\"创建频道\"\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n\r\n      <!-- 频道列表 -->\r\n      <div class=\"channels\" v-show=\"expandedCategories.includes(category.id)\">\r\n        <div \r\n          v-for=\"channel in category.channels\" \r\n          :key=\"channel.id\"\r\n          class=\"channel-item\"\r\n          :class=\"{ \r\n            active: currentChannelId === channel.id,\r\n            unread: channel.hasUnread\r\n          }\"\r\n          @click=\"selectChannel(channel)\"\r\n        >\r\n          <!-- 频道图标 -->\r\n          <span class=\"channel-icon\">\r\n            {{ channel.type === 'voice' ? '🔊' : '#' }}\r\n          </span>\r\n\r\n          <!-- 频道名称 -->\r\n          <span class=\"channel-name\">{{ channel.name }}</span>\r\n\r\n          <!-- 频道操作按钮 -->\r\n          <div class=\"channel-actions\" v-if=\"currentChannelId === channel.id\">\r\n            <button \r\n              class=\"action-button\"\r\n              title=\"邀请成员\"\r\n              @click.stop=\"inviteToChannel(channel)\"\r\n            >\r\n              👥\r\n            </button>\r\n            <button \r\n              class=\"action-button\"\r\n              title=\"频道设置\"\r\n              @click.stop=\"openChannelSettings(channel)\"\r\n            >\r\n              ⚙️\r\n            </button>\r\n          </div>\r\n\r\n          <!-- 未读消息提示 -->\r\n          <span class=\"unread-indicator\" v-if=\"channel.hasUnread\">\r\n            {{ channel.unreadCount > 99 ? '99+' : channel.unreadCount }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 创建频道模态框 -->\r\n    <CreateChannelModal\r\n      :isOpen=\"showCreateChannel\"\r\n      @close=\"closeCreateChannel\"\r\n      @create=\"handleChannelCreate\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CreateChannelModal from './CreateChannelModal.vue'\r\n\r\nexport default {\r\n  name: 'ChannelList',\r\n  components: {\r\n    CreateChannelModal\r\n  },\r\n  props: {\r\n    currentChannelId: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      expandedCategories: ['text', 'voice'],  // 默认展开的分类\r\n      showCreateChannel: false,\r\n      categories: [\r\n        {\r\n          id: 'text',\r\n          name: '文字频道',\r\n          canCreateChannel: true,\r\n          channels: [\r\n            { id: 'general', name: '综合讨论', type: 'text', hasUnread: false },\r\n            { id: 'announcement', name: '公告', type: 'text', hasUnread: true, unreadCount: 3 }\r\n          ]\r\n        },\r\n        {\r\n          id: 'voice',\r\n          name: '语音频道',\r\n          canCreateChannel: true,\r\n          channels: [\r\n            { id: 'voice-general', name: '语音大厅', type: 'voice', hasUnread: false },\r\n            { id: 'gaming', name: '游戏频道', type: 'voice', hasUnread: false }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    // 切换分类展开/折叠\r\n    toggleCategory(categoryId) {\r\n      const index = this.expandedCategories.indexOf(categoryId)\r\n      if (index === -1) {\r\n        this.expandedCategories.push(categoryId)\r\n      } else {\r\n        this.expandedCategories.splice(index, 1)\r\n      }\r\n    },\r\n\r\n    // 选择频道\r\n    selectChannel(channel) {\r\n      this.$emit('select-channel', channel)\r\n    },\r\n\r\n    // 打开创建频道模态框\r\n    openCreateChannel() {\r\n      this.showCreateChannel = true\r\n    },\r\n\r\n    // 关闭创建频道模态框\r\n    closeCreateChannel() {\r\n      this.showCreateChannel = false\r\n    },\r\n\r\n    // 处理频道创建\r\n    handleChannelCreate(channelData) {\r\n      // 这里应该调用 API 创建频道\r\n      console.log('Creating channel:', channelData)\r\n      \r\n      // 模拟创建成功\r\n      const newChannel = {\r\n        id: Date.now().toString(),\r\n        name: channelData.name,\r\n        type: channelData.type,\r\n        hasUnread: false\r\n      }\r\n\r\n      // 添加到对应分类\r\n      const category = this.categories.find(c => \r\n        (channelData.type === 'voice' && c.id === 'voice') ||\r\n        (channelData.type === 'text' && c.id === 'text')\r\n      )\r\n\r\n      if (category) {\r\n        category.channels.push(newChannel)\r\n      }\r\n\r\n      // 选择新创建的频道\r\n      this.selectChannel(newChannel)\r\n    },\r\n\r\n    // 邀请成员到频道\r\n    inviteToChannel(channel) {\r\n      // TODO: 实现邀请功能\r\n      console.log('Inviting to channel:', channel)\r\n    },\r\n\r\n    // 打开频道设置\r\n    openChannelSettings(channel) {\r\n      // TODO: 实现频道设置功能\r\n      console.log('Opening channel settings:', channel)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.channel-list {\r\n  padding: 0 8px;\r\n}\r\n\r\n.channel-category {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.category-header {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 6px 4px;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  color: var(--text-muted);\r\n  font-size: 0.75rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.02em;\r\n}\r\n\r\n.category-arrow {\r\n  font-size: 0.625rem;\r\n  margin-right: 4px;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.category-arrow.expanded {\r\n  transform: rotate(90deg);\r\n}\r\n\r\n.category-name {\r\n  flex: 1;\r\n  font-weight: 600;\r\n}\r\n\r\n.add-channel-button {\r\n  width: 16px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-muted);\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.category-header:hover .add-channel-button {\r\n  opacity: 1;\r\n}\r\n\r\n.add-channel-button:hover {\r\n  color: var(--text-normal);\r\n}\r\n\r\n.channels {\r\n  margin-top: 2px;\r\n}\r\n\r\n.channel-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 6px 8px;\r\n  margin: 1px 0;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  color: var(--text-muted);\r\n  font-size: 0.9375rem;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.channel-item:hover {\r\n  background-color: var(--background-modifier-hover);\r\n  color: var(--text-normal);\r\n}\r\n\r\n.channel-item.active {\r\n  background-color: var(--background-modifier-selected);\r\n  color: var(--text-normal);\r\n}\r\n\r\n.channel-icon {\r\n  margin-right: 6px;\r\n  font-size: 1.25rem;\r\n  width: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.channel-name {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.channel-actions {\r\n  display: flex;\r\n  gap: 4px;\r\n  margin-left: 4px;\r\n}\r\n\r\n.action-button {\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-muted);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.channel-item:hover .action-button {\r\n  opacity: 1;\r\n}\r\n\r\n.action-button:hover {\r\n  color: var(--text-normal);\r\n}\r\n\r\n.unread-indicator {\r\n  min-width: 16px;\r\n  height: 16px;\r\n  padding: 0 4px;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  font-size: 0.75rem;\r\n  font-weight: 600;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.channel-item.unread {\r\n  color: var(--text-normal);\r\n  font-weight: 500;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}