{"ast":null,"code":"import StickerPicker from './StickerPicker.vue';\nexport default {\n  name: 'MessageInput',\n  components: {\n    StickerPicker\n  },\n  data() {\n    return {\n      message: '',\n      // 存储用户输入的消息\n      showStickerPicker: false // 控制表情选择器的显示/隐藏\n    };\n  },\n  methods: {\n    // 发送消息\n    sendMessage() {\n      if (this.message.trim()) {\n        this.$emit('send-message', this.message);\n        this.message = '';\n        this.$nextTick(() => {\n          this.$refs.messageInput.focus();\n        });\n      }\n    },\n    // 切换表情选择器的显示/隐藏\n    toggleStickerPicker(event) {\n      event.stopPropagation();\n      this.showStickerPicker = !this.showStickerPicker;\n    },\n    // 处理表情选择\n    onStickerSelect(sticker) {\n      // 发送带有表情包的消息\n      this.$emit('send-message', `[sticker:${sticker.id}]`);\n      this.showStickerPicker = false;\n    },\n    // 处理点击外部\n    handleClickOutside(e) {\n      if (this.showStickerPicker && !this.$refs.stickerPicker?.contains(e.target) && !this.$refs.emojiButton?.contains(e.target)) {\n        this.showStickerPicker = false;\n      }\n    }\n  },\n  mounted() {\n    this.$refs.messageInput.focus();\n    document.addEventListener('click', this.handleClickOutside);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n};","map":{"version":3,"names":["StickerPicker","name","components","data","message","showStickerPicker","methods","sendMessage","trim","$emit","$nextTick","$refs","messageInput","focus","toggleStickerPicker","event","stopPropagation","onStickerSelect","sticker","id","handleClickOutside","e","stickerPicker","contains","target","emojiButton","mounted","document","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\MessageInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-input-container\">\r\n    <!-- 表情按钮 -->\r\n    <button @click=\"toggleStickerPicker\" class=\"emoji-button\" ref=\"emojiButton\">\r\n      🎯\r\n    </button>\r\n    \r\n    <!-- 表情包选择器 -->\r\n    <div v-if=\"showStickerPicker\" class=\"sticker-picker-container\" ref=\"stickerPicker\">\r\n      <StickerPicker @select=\"onStickerSelect\" />\r\n    </div>\r\n\r\n    <textarea\r\n      v-model=\"message\"\r\n      @keydown.enter.prevent=\"sendMessage\"\r\n      placeholder=\"输入消息...\"\r\n      class=\"message-input\"\r\n      ref=\"messageInput\"\r\n    ></textarea>\r\n    <button @click=\"sendMessage\" class=\"send-button\">\r\n      发送\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport StickerPicker from './StickerPicker.vue'\r\n\r\nexport default {\r\n  name: 'MessageInput',\r\n  components: {\r\n    StickerPicker\r\n  },\r\n  data() {\r\n    return {\r\n      message: '',  // 存储用户输入的消息\r\n      showStickerPicker: false,  // 控制表情选择器的显示/隐藏\r\n    }\r\n  },\r\n  methods: {\r\n    // 发送消息\r\n    sendMessage() {\r\n      if (this.message.trim()) {\r\n        this.$emit('send-message', this.message);\r\n        this.message = '';\r\n        this.$nextTick(() => {\r\n          this.$refs.messageInput.focus();\r\n        });\r\n      }\r\n    },\r\n    // 切换表情选择器的显示/隐藏\r\n    toggleStickerPicker(event) {\r\n      event.stopPropagation();\r\n      this.showStickerPicker = !this.showStickerPicker;\r\n    },\r\n    // 处理表情选择\r\n    onStickerSelect(sticker) {\r\n      // 发送带有表情包的消息\r\n      this.$emit('send-message', `[sticker:${sticker.id}]`);\r\n      this.showStickerPicker = false;\r\n    },\r\n    // 处理点击外部\r\n    handleClickOutside(e) {\r\n      if (this.showStickerPicker && \r\n          !this.$refs.stickerPicker?.contains(e.target) && \r\n          !this.$refs.emojiButton?.contains(e.target)) {\r\n        this.showStickerPicker = false;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$refs.messageInput.focus();\r\n    document.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message-input-container {\r\n  display: flex;\r\n  padding: 1rem;\r\n  background-color: var(--input-background); /* 使用主题变量 */\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.message-input {\r\n  flex: 1;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 1.5rem;\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  color: var(--input-color); /* 使用主题变量 */\r\n  font-size: 0.95rem;\r\n  resize: none;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  transition: all 0.2s ease;\r\n  margin-left: 0.5rem;\r\n}\r\n\r\n.message-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb, 138, 113, 88), 0.2);\r\n}\r\n\r\n.message-input::placeholder {\r\n  color: var(--input-placeholder); /* 使用主题变量 */\r\n  opacity: 0.7;\r\n}\r\n\r\n.send-button {\r\n  margin-left: 0.75rem;\r\n  padding: 0.5rem 1.25rem;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 1.5rem;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: var(--secondary-color);\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.send-button:active {\r\n  transform: translateY(0);\r\n}\r\n\r\n/* 修改表情选择器容器样式 */\r\n.sticker-picker-container {\r\n  position: absolute;\r\n  bottom: 100%;\r\n  left: 0;\r\n  margin-bottom: 8px;\r\n  width: 350px;\r\n  background: var(--background-primary);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n}\r\n\r\n/* 表情按钮样式优化 */\r\n.emoji-button {\r\n  padding: 0.5rem;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  transition: all 0.2s ease;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.emoji-button:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.emoji-button:focus {\r\n  outline: none;\r\n}\r\n</style> "],"mappings":"AA0BA,OAAOA,aAAY,MAAO,qBAAoB;AAE9C,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MAAG;MACdC,iBAAiB,EAAE,KAAK,CAAG;IAC7B;EACF,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,CAAC,EAAE;QACvB,IAAI,CAACC,KAAK,CAAC,cAAc,EAAE,IAAI,CAACL,OAAO,CAAC;QACxC,IAAI,CAACA,OAAM,GAAI,EAAE;QACjB,IAAI,CAACM,SAAS,CAAC,MAAM;UACnB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC;MACJ;IACF,CAAC;IACD;IACAC,mBAAmBA,CAACC,KAAK,EAAE;MACzBA,KAAK,CAACC,eAAe,CAAC,CAAC;MACvB,IAAI,CAACX,iBAAgB,GAAI,CAAC,IAAI,CAACA,iBAAiB;IAClD,CAAC;IACD;IACAY,eAAeA,CAACC,OAAO,EAAE;MACvB;MACA,IAAI,CAACT,KAAK,CAAC,cAAc,EAAE,YAAYS,OAAO,CAACC,EAAE,GAAG,CAAC;MACrD,IAAI,CAACd,iBAAgB,GAAI,KAAK;IAChC,CAAC;IACD;IACAe,kBAAkBA,CAACC,CAAC,EAAE;MACpB,IAAI,IAAI,CAAChB,iBAAgB,IACrB,CAAC,IAAI,CAACM,KAAK,CAACW,aAAa,EAAEC,QAAQ,CAACF,CAAC,CAACG,MAAM,KAC5C,CAAC,IAAI,CAACb,KAAK,CAACc,WAAW,EAAEF,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC,EAAE;QAC/C,IAAI,CAACnB,iBAAgB,GAAI,KAAK;MAChC;IACF;EACF,CAAC;EACDqB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,KAAK,CAACC,YAAY,CAACC,KAAK,CAAC,CAAC;IAC/Bc,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACR,kBAAkB,CAAC;EAC7D,CAAC;EACDS,aAAaA,CAAA,EAAG;IACdF,QAAQ,CAACG,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACV,kBAAkB,CAAC;EAChE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}