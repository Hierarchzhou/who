{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createVNode as _createVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-interface\"\n};\nconst _hoisted_3 = {\n  class: \"chat-header\"\n};\nconst _hoisted_4 = {\n  class: \"channel-info\"\n};\nconst _hoisted_5 = {\n  class: \"channel-name\"\n};\nconst _hoisted_6 = {\n  class: \"channel-topic\"\n};\nconst _hoisted_7 = {\n  class: \"header-actions\"\n};\nconst _hoisted_8 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  class: \"current-username\"\n};\nconst _hoisted_11 = {\n  class: \"chat-main\"\n};\nconst _hoisted_12 = {\n  class: \"user-controls\"\n};\nconst _hoisted_13 = {\n  class: \"user-controls-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UserNameInput = _resolveComponent(\"UserNameInput\");\n  const _component_ThemeSelector = _resolveComponent(\"ThemeSelector\");\n  const _component_MessageList = _resolveComponent(\"MessageList\");\n  const _component_MessageInput = _resolveComponent(\"MessageInput\");\n  const _component_UserAvatar = _resolveComponent(\"UserAvatar\");\n  const _component_UserProfileEditor = _resolveComponent(\"UserProfileEditor\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Áî®Êà∑ÂêçËæìÂÖ•ÁïåÈù¢ÔºåÂΩìÁî®Êà∑Êú™ËÆæÁΩÆÊòµÁß∞Êó∂ÊòæÁ§∫ \"), !$setup.username ? (_openBlock(), _createBlock(_component_UserNameInput, {\n    key: 0,\n    onSetUsername: $options.setUsername\n  }, null, 8 /* PROPS */, [\"onSetUsername\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" ËÅäÂ§©ÁïåÈù¢ÔºåÂΩìÁî®Êà∑Â∑≤ËÆæÁΩÆÊòµÁß∞Êó∂ÊòæÁ§∫ \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" È¢ëÈÅìÂ§¥ÈÉ® \"), _createElementVNode(\"header\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    class: \"channel-hash\"\n  }, \"#\", -1 /* HOISTED */)), _createElementVNode(\"h2\", _hoisted_5, _toDisplayString($props.currentServer.name || 'general'), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($props.currentServer.description || 'Welcome to the chat channel!'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[4] || (_cache[4] = _createElementVNode(\"button\", {\n    class: \"icon-button\",\n    title: \"Pin Messages\"\n  }, [_createElementVNode(\"span\", {\n    class: \"icon\"\n  }, \"üìå\")], -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    class: \"icon-button\",\n    title: \"Show Member List\"\n  }, [_createElementVNode(\"span\", {\n    class: \"icon\"\n  }, \"üë•\")], -1 /* HOISTED */)), _createVNode(_component_ThemeSelector)]), _createElementVNode(\"div\", {\n    class: \"user-info\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.openProfileEditor && $options.openProfileEditor(...args))\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"user-status-indicator\", {\n      online: true\n    }])\n  }), _createElementVNode(\"img\", {\n    src: $setup.userAvatar || $setup.getFallbackAvatarUrl(),\n    alt: \"Áî®Êà∑Â§¥ÂÉè\",\n    class: \"user-avatar\",\n    onError: _cache[0] || (_cache[0] = (...args) => $setup.handleAvatarError && $setup.handleAvatarError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_9), _createElementVNode(\"span\", _hoisted_10, _toDisplayString($setup.username), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_MessageList, {\n    messages: $data.messages,\n    currentUsername: $setup.username,\n    ref: \"messageList\",\n    onOpenProfileEditor: $options.openProfileEditor\n  }, null, 8 /* PROPS */, [\"messages\", \"currentUsername\", \"onOpenProfileEditor\"])]), _createVNode(_component_MessageInput, {\n    placeholder: `ÂèëÈÄÅÊ∂àÊÅØÂà∞ #${$props.currentServer.name || 'general'}`,\n    onSendMessage: $options.sendMessage\n  }, null, 8 /* PROPS */, [\"placeholder\", \"onSendMessage\"]), _createCommentVNode(\" Â∫ïÈÉ®Áî®Êà∑ÊéßÂà∂Ê†è \"), _createElementVNode(\"div\", _hoisted_12, [_createVNode(_component_UserAvatar, {\n    username: $setup.username,\n    avatar: $setup.userAvatar,\n    \"is-online\": true,\n    onOpenProfile: $options.openProfileEditor,\n    onOpenSettings: $options.openSettings,\n    onStatusChange: $options.handleStatusChange\n  }, null, 8 /* PROPS */, [\"username\", \"avatar\", \"onOpenProfile\", \"onOpenSettings\", \"onStatusChange\"]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    class: \"control-button\",\n    title: \"ÊúçÂä°Âô®ËÆæÁΩÆ\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.openServerSettings && $options.openServerSettings(...args))\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"span\", {\n    class: \"icon\"\n  }, \"‚öôÔ∏è\", -1 /* HOISTED */)]))])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */)), _createCommentVNode(\" ‰∏™‰∫∫ËµÑÊñôÁºñËæëÂô® \"), _createVNode(_component_UserProfileEditor, {\n    isOpen: $data.showProfileEditor,\n    currentUserInfo: $data.currentUserInfo,\n    onClose: $options.closeProfileEditor,\n    onUpdateProfile: $options.updateProfile\n  }, null, 8 /* PROPS */, [\"isOpen\", \"currentUserInfo\", \"onClose\", \"onUpdateProfile\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","username","_createBlock","_component_UserNameInput","key","onSetUsername","$options","setUsername","_Fragment","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$props","currentServer","name","_hoisted_6","description","_hoisted_7","_hoisted_8","title","_createVNode","_component_ThemeSelector","onClick","_cache","args","openProfileEditor","_normalizeClass","online","src","userAvatar","getFallbackAvatarUrl","alt","onError","handleAvatarError","_hoisted_9","_hoisted_10","_hoisted_11","_component_MessageList","messages","$data","currentUsername","ref","onOpenProfileEditor","_component_MessageInput","placeholder","onSendMessage","sendMessage","_hoisted_12","_component_UserAvatar","avatar","onOpenProfile","onOpenSettings","openSettings","onStatusChange","handleStatusChange","_hoisted_13","openServerSettings","_component_UserProfileEditor","isOpen","showProfileEditor","currentUserInfo","onClose","closeProfileEditor","onUpdateProfile","updateProfile"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\components\\chat\\ChatContainer.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <!-- Áî®Êà∑ÂêçËæìÂÖ•ÁïåÈù¢ÔºåÂΩìÁî®Êà∑Êú™ËÆæÁΩÆÊòµÁß∞Êó∂ÊòæÁ§∫ -->\n    <UserNameInput \n      v-if=\"!username\" \n      @set-username=\"setUsername\" \n    />\n    \n    <!-- ËÅäÂ§©ÁïåÈù¢ÔºåÂΩìÁî®Êà∑Â∑≤ËÆæÁΩÆÊòµÁß∞Êó∂ÊòæÁ§∫ -->\n    <div v-else class=\"chat-interface\">\n      <!-- È¢ëÈÅìÂ§¥ÈÉ® -->\n      <header class=\"chat-header\">\n        <div class=\"channel-info\">\n          <span class=\"channel-hash\">#</span>\n          <h2 class=\"channel-name\">{{ currentServer.name || 'general' }}</h2>\n          <div class=\"channel-topic\">\n            {{ currentServer.description || 'Welcome to the chat channel!' }}\n          </div>\n        </div>\n        \n        <div class=\"header-actions\">\n          <div class=\"action-buttons\">\n            <button class=\"icon-button\" title=\"Pin Messages\">\n              <span class=\"icon\">üìå</span>\n            </button>\n            <button class=\"icon-button\" title=\"Show Member List\">\n              <span class=\"icon\">üë•</span>\n            </button>\n            <ThemeSelector />\n          </div>\n          \n          <div class=\"user-info\" @click=\"openProfileEditor\">\n            <div class=\"user-status-indicator\" :class=\"{ online: true }\"></div>\n            <img \n              :src=\"userAvatar || getFallbackAvatarUrl()\" \n              alt=\"Áî®Êà∑Â§¥ÂÉè\" \n              class=\"user-avatar\"\n              @error=\"handleAvatarError\"\n            >\n            <span class=\"current-username\">{{ username }}</span>\n          </div>\n        </div>\n      </header>\n      \n      <div class=\"chat-main\">\n        <MessageList \n          :messages=\"messages\" \n          :currentUsername=\"username\" \n          ref=\"messageList\"\n          @open-profile-editor=\"openProfileEditor\"\n        />\n      </div>\n      \n      <MessageInput \n        :placeholder=\"`ÂèëÈÄÅÊ∂àÊÅØÂà∞ #${currentServer.name || 'general'}`\"\n        @send-message=\"sendMessage\" \n      />\n\n      <!-- Â∫ïÈÉ®Áî®Êà∑ÊéßÂà∂Ê†è -->\n      <div class=\"user-controls\">\n        <UserAvatar\n          :username=\"username\"\n          :avatar=\"userAvatar\"\n          :is-online=\"true\"\n          @open-profile=\"openProfileEditor\"\n          @open-settings=\"openSettings\"\n          @status-change=\"handleStatusChange\"\n        />\n        \n        <div class=\"user-controls-buttons\">\n          <button class=\"control-button\" title=\"ÊúçÂä°Âô®ËÆæÁΩÆ\" @click=\"openServerSettings\">\n            <span class=\"icon\">‚öôÔ∏è</span>\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- ‰∏™‰∫∫ËµÑÊñôÁºñËæëÂô® -->\n    <UserProfileEditor \n      :isOpen=\"showProfileEditor\"\n      :currentUserInfo=\"currentUserInfo\"\n      @close=\"closeProfileEditor\"\n      @update-profile=\"updateProfile\"\n    />\n  </div>\n</template>\n\n<script>\nimport UserNameInput from './UserNameInput.vue';\nimport MessageList from './MessageList.vue';\nimport MessageInput from './MessageInput.vue';\nimport ThemeSelector from './ThemeSelector.vue';\nimport UserProfileEditor from './UserProfileEditor.vue';\nimport UserAvatar from './UserAvatar.vue';\nimport axios from 'axios';\nimport { handleAvatarError, getFallbackAvatarUrl } from '../../utils/avatarUtils';\nimport { useStore } from 'vuex';\nimport { computed } from 'vue';\n\nexport default {\n  name: 'ChatContainer',\n  components: {\n    UserNameInput,\n    MessageList,\n    MessageInput,\n    ThemeSelector,\n    UserProfileEditor,\n    UserAvatar\n  },\n  props: {\n    currentUser: {\n      type: Object,\n      required: true\n    },\n    currentServer: {\n      type: Object,\n      default: () => ({\n        id: 'home',\n        name: 'general',\n        description: 'Welcome to the chat channel!'\n      })\n    }\n  },\n  emits: ['update-online-users', 'open-profile-editor'],\n  setup() {\n    const store = useStore();\n    \n    // ‰ΩøÁî®ËÆ°ÁÆóÂ±ûÊÄß‰ªéstoreËé∑ÂèñÁî®Êà∑‰ø°ÊÅØ\n    const username = computed(() => store.getters['userProfile/username']);\n    const userAvatar = computed(() => store.getters['userProfile/avatar']);\n    \n    return {\n      username,\n      userAvatar,\n      getFallbackAvatarUrl,\n      handleAvatarError\n    };\n  },\n  data() {\n    return {\n      messages: [], // Ê∂àÊÅØÂàóË°®\n      onlineUsers: [], // Âú®Á∫øÁî®Êà∑ÂàóË°®\n      apiUrl: 'http://localhost:3001/api/messages', // Ê∂àÊÅØAPIÂú∞ÂùÄ\n      usersApiUrl: 'http://localhost:3001/api/users', // Áî®Êà∑APIÂú∞ÂùÄ\n      pollingInterval: null, // Áî®‰∫éËΩÆËØ¢Ê∂àÊÅØÁöÑËÆ°Êó∂Âô®\n      onlinePollingInterval: null, // Áî®‰∫éËΩÆËØ¢Âú®Á∫øÁî®Êà∑ÁöÑËÆ°Êó∂Âô®\n      currentTheme: localStorage.getItem('chat-theme') || 'discord', // ÂΩìÂâç‰∏ªÈ¢ò\n      showProfileEditor: false, // ÊòØÂê¶ÊòæÁ§∫‰∏™‰∫∫ËµÑÊñôÁºñËæëÂô®\n      currentUserInfo: {} // ÂΩìÂâçÁî®Êà∑‰ø°ÊÅØ\n    }\n  },\n  watch: {\n    // ÁõëÂê¨Âú®Á∫øÁî®Êà∑ÂèòÂåñÔºåÂêëÁà∂ÁªÑ‰ª∂ÂèëÈÄÅÊõ¥Êñ∞‰∫ã‰ª∂\n    onlineUsers: {\n      handler(newValue) {\n        this.$emit('update-online-users', newValue);\n      },\n      deep: true\n    },\n    // ÁõëÂê¨ÊúçÂä°Âô®ÂèòÂåñÔºåÈáçÊñ∞Âä†ËΩΩÊ∂àÊÅØ\n    'currentServer.id': {\n      handler(newServerId) {\n        if (newServerId) {\n          this.loadServerMessages(newServerId);\n        }\n      },\n      immediate: true\n    }\n  },\n  created() {\n    // ‰ªélocalStorageÊÅ¢Â§çÁî®Êà∑‰ø°ÊÅØ\n    const savedUsername = localStorage.getItem('chat-username');\n    const savedAvatar = localStorage.getItem('chat-avatar');\n    \n    if (savedUsername && savedAvatar) {\n      this.$store.dispatch('userProfile/updateProfile', {\n        username: savedUsername,\n        avatar: savedAvatar\n      });\n    }\n  },\n  mounted() {\n    // Â¶ÇÊûúÁî®Êà∑Â∑≤ÁôªÂΩïÔºåËé∑ÂèñÊ∂àÊÅØÂíåÂú®Á∫øÁî®Êà∑\n    if (this.username) {\n      this.fetchMessages();\n      this.fetchOnlineUsers();\n      \n      // ËÆæÁΩÆËΩÆËØ¢\n      this.pollingInterval = setInterval(this.fetchMessages, 3000);\n      this.onlinePollingInterval = setInterval(this.fetchOnlineUsers, 5000);\n    }\n    \n    // Â∫îÁî®‰øùÂ≠òÁöÑ‰∏ªÈ¢ò\n    document.body.classList.add(`theme-${this.currentTheme}`);\n  },\n  beforeUnmount() {\n    // Ê∏ÖÈô§ËΩÆËØ¢\n    clearInterval(this.pollingInterval);\n    clearInterval(this.onlinePollingInterval);\n  },\n  methods: {\n    // ËÆæÁΩÆÁî®Êà∑ÂêçÂíåÂ§¥ÂÉè\n    setUsername(userData) {\n      this.$store.dispatch('userProfile/updateProfile', userData);\n      \n      // ‰øùÂ≠òÂà∞localStorage\n      localStorage.setItem('chat-username', userData.username);\n      localStorage.setItem('chat-avatar', userData.avatar);\n      \n      // Ê≥®ÂÜåÁî®Êà∑\n      this.registerUser();\n      \n      // Ëé∑ÂèñÊ∂àÊÅØÂíåÂú®Á∫øÁî®Êà∑\n      this.fetchMessages();\n      this.fetchOnlineUsers();\n      \n      // ËÆæÁΩÆËΩÆËØ¢\n      this.pollingInterval = setInterval(this.fetchMessages, 3000);\n      this.onlinePollingInterval = setInterval(this.fetchOnlineUsers, 5000);\n    },\n    \n    // Ê≥®ÂÜåÁî®Êà∑\n    async registerUser() {\n      try {\n        await axios.post(`${this.usersApiUrl}/register`, {\n          username: this.username,\n          avatar: this.userAvatar\n        });\n        console.log('Áî®Êà∑Ê≥®ÂÜåÊàêÂäü');\n      } catch (error) {\n        console.error('Áî®Êà∑Ê≥®ÂÜåÂ§±Ë¥•:', error);\n      }\n    },\n    \n    // Ëé∑ÂèñÊ∂àÊÅØ\n    async fetchMessages() {\n      try {\n        const response = await axios.get(this.apiUrl);\n        this.messages = response.data;\n        // ÊªöÂä®Âà∞Â∫ïÈÉ®\n        this.$nextTick(() => {\n          if (this.$refs.messageList) {\n            this.$refs.messageList.scrollToBottom();\n          }\n        });\n      } catch (error) {\n        console.error('Ëé∑ÂèñÊ∂àÊÅØÂ§±Ë¥•:', error);\n        // ÂºÄÂèëÈò∂ÊÆµÂ¶ÇÊûúAPIÊú™Â∞±Áª™Ôºå‰ΩøÁî®Ê®°ÊãüÊï∞ÊçÆ\n        if (this.messages.length === 0) {\n          this.messages = [\n            { \n              id: 1, \n              sender: 'System', \n              content: 'Ê¨¢ËøéÊù•Âà∞ËÅäÂ§©ÂÆ§!', \n              timestamp: new Date().toISOString(),\n              avatar: '/avatars/default.png'\n            }\n          ];\n        }\n      }\n    },\n    \n    // Ëé∑ÂèñÂú®Á∫øÁî®Êà∑\n    async fetchOnlineUsers() {\n      try {\n        const response = await axios.get(`${this.usersApiUrl}/online`);\n        this.onlineUsers = response.data;\n      } catch (error) {\n        console.error('Ëé∑ÂèñÂú®Á∫øÁî®Êà∑Â§±Ë¥•:', error);\n        // ÂºÄÂèëÈò∂ÊÆµÂ¶ÇÊûúAPIÊú™Â∞±Áª™Ôºå‰ΩøÁî®Ê®°ÊãüÊï∞ÊçÆ\n        if (this.onlineUsers.length === 0) {\n          this.onlineUsers = [\n            { username: this.username, avatar: this.userAvatar }\n          ];\n        }\n      }\n    },\n    \n    // Âä†ËΩΩÊúçÂä°Âô®ÁâπÂÆöÁöÑÊ∂àÊÅØ\n    loadServerMessages(serverId) {\n      const key = `server-messages-${serverId}`;\n      const savedMessages = localStorage.getItem(key);\n      this.messages = savedMessages ? JSON.parse(savedMessages) : [];\n    },\n\n    // ‰øùÂ≠òÊúçÂä°Âô®Ê∂àÊÅØ\n    saveServerMessages() {\n      const key = `server-messages-${this.currentServer.id}`;\n      localStorage.setItem(key, JSON.stringify(this.messages));\n    },\n\n    // ÂèëÈÄÅÊ∂àÊÅØ\n    async sendMessage(content) {\n      if (!content.trim()) return;\n      \n      try {\n        const response = await axios.post(this.apiUrl, {\n          sender: this.username,\n          content: content,\n          avatar: this.userAvatar,\n          serverId: this.currentServer.id\n        });\n        \n        // Â∞ÜÊñ∞Ê∂àÊÅØÊ∑ªÂä†Âà∞Ê∂àÊÅØÂàóË°®\n        this.messages.push(response.data);\n        this.saveServerMessages();\n        \n        // ÊªöÂä®Âà∞Â∫ïÈÉ®\n        this.$nextTick(() => {\n          if (this.$refs.messageList) {\n            this.$refs.messageList.scrollToBottom();\n          }\n        });\n      } catch (error) {\n        console.error('ÂèëÈÄÅÊ∂àÊÅØÂ§±Ë¥•:', error);\n        \n        // ÂºÄÂèëÈò∂ÊÆµÂ¶ÇÊûúAPIÊú™Â∞±Áª™Ôºå‰ΩøÁî®Ê®°ÊãüÊï∞ÊçÆ\n        const mockMessage = {\n          id: Date.now(),\n          sender: this.username,\n          content: content,\n          timestamp: new Date().toISOString(),\n          avatar: this.userAvatar,\n          serverId: this.currentServer.id\n        };\n        \n        this.messages.push(mockMessage);\n        this.saveServerMessages();\n        \n        // ÊªöÂä®Âà∞Â∫ïÈÉ®\n        this.$nextTick(() => {\n          if (this.$refs.messageList) {\n            this.$refs.messageList.scrollToBottom();\n          }\n        });\n      }\n    },\n    // ÊâìÂºÄ‰∏™‰∫∫ËµÑÊñôÁºñËæëÂô®\n    openProfileEditor() {\n      this.$emit('open-profile-editor');\n    },\n    // ÂÖ≥Èó≠‰∏™‰∫∫ËµÑÊñôÁºñËæëÂô®\n    closeProfileEditor() {\n      this.showProfileEditor = false;\n    },\n    // Êõ¥Êñ∞Áî®Êà∑‰ø°ÊÅØ\n    updateProfile(updatedInfo) {\n      // Êõ¥Êñ∞store‰∏≠ÁöÑÁî®Êà∑‰ø°ÊÅØ\n      this.$store.dispatch('userProfile/updateProfile', updatedInfo);\n      \n      // ‰øùÂ≠òÂà∞localStorage\n      localStorage.setItem('chat-username', updatedInfo.username);\n      localStorage.setItem('chat-avatar', updatedInfo.avatar);\n      \n      // Êõ¥Êñ∞Ê∂àÊÅØÂéÜÂè≤‰∏≠ÁöÑÂ§¥ÂÉè\n      this.messages = this.messages.map(message => {\n        if (message.sender === updatedInfo.username) {\n          return { ...message, avatar: updatedInfo.avatar }; // Êõ¥Êñ∞ÂèëÈÄÅËÄÖÂ§¥ÂÉè\n        }\n        return message;\n      });\n      \n      // Ê≥®ÂÜåÁî®Êà∑\n      this.registerUser();\n      \n      // Ëé∑ÂèñÊ∂àÊÅØÂíåÂú®Á∫øÁî®Êà∑\n      this.fetchMessages();\n      this.fetchOnlineUsers();\n      \n      // ËÆæÁΩÆËΩÆËØ¢\n      this.pollingInterval = setInterval(this.fetchMessages, 3000);\n      this.onlinePollingInterval = setInterval(this.fetchOnlineUsers, 5000);\n    },\n    openSettings() {\n      // ÊâìÂºÄËÆæÁΩÆÈù¢ÊùøÁöÑÈÄªËæë\n      console.log('Open settings panel')\n    },\n    \n    openServerSettings() {\n      // ÊâìÂºÄÊúçÂä°Âô®ËÆæÁΩÆÁöÑÈÄªËæë\n      console.log('Open server settings')\n    },\n    \n    handleStatusChange(status) {\n      // Â§ÑÁêÜÁî®Êà∑Áä∂ÊÄÅÂèòÂåñÁöÑÈÄªËæë\n      console.log('Status changed to:', status)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chat-container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: var(--background-primary);\n}\n\n.chat-interface {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n\n.chat-header {\n  height: 48px;\n  padding: 0 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: var(--background-primary);\n  border-bottom: 1px solid var(--background-tertiary);\n  flex-shrink: 0;\n}\n\n.channel-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.channel-hash {\n  color: var(--text-muted);\n  font-size: 24px;\n  font-weight: 300;\n}\n\n.channel-name {\n  color: var(--header-primary);\n  font-size: 16px;\n  font-weight: 600;\n}\n\n.channel-topic {\n  color: var(--text-muted);\n  font-size: 14px;\n  margin-left: 12px;\n  padding-left: 12px;\n  border-left: 1px solid var(--background-accent);\n}\n\n.header-actions {\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n\n.action-buttons {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.icon-button {\n  width: 32px;\n  height: 32px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--interactive-normal);\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.icon-button:hover {\n  color: var(--interactive-hover);\n  background-color: var(--background-accent);\n}\n\n.icon {\n  font-size: 20px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.user-info:hover {\n  background-color: var(--background-accent);\n}\n\n.user-status-indicator {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  border: 2px solid var(--background-primary);\n  position: absolute;\n  bottom: -2px;\n  right: -2px;\n}\n\n.user-status-indicator.online {\n  background-color: var(--online-color);\n}\n\n.user-avatar {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  position: relative;\n}\n\n.current-username {\n  color: var(--header-primary);\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.chat-main {\n  flex: 1;\n  overflow-y: auto;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 52px; /* ‰∏∫Â∫ïÈÉ®ÊéßÂà∂Ê†èÁïôÂá∫Á©∫Èó¥ */\n}\n\n/* ÂìçÂ∫îÂºèÊ†∑Âºè */\n@media (max-width: 768px) {\n  .channel-topic {\n    display: none;\n  }\n  \n  .action-buttons {\n    display: none;\n  }\n  \n  .chat-header {\n    padding: 0 8px;\n  }\n  \n  .user-info {\n    padding: 4px;\n  }\n  \n  .current-username {\n    display: none;\n  }\n}\n\n.user-controls {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 240px;\n  height: 52px;\n  padding: 0 8px;\n  background: var(--background-secondary-alt);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid var(--background-tertiary);\n}\n\n.user-controls-buttons {\n  display: flex;\n  gap: 4px;\n}\n\n.control-button {\n  width: 32px;\n  height: 32px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  border: none;\n  color: var(--interactive-normal);\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.control-button:hover {\n  color: var(--interactive-hover);\n  background: var(--background-modifier-hover);\n}\n</style> \n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}