{"ast":null,"code":"import VueAvatarEditor from 'vue-avatar-editor';\nimport { Avatar } from 'vue-boring-avatars';\nexport default {\n  name: 'AvatarSelector',\n  components: {\n    VueAvatarEditor,\n    BoringAvatar: Avatar\n  },\n  props: {\n    username: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedFile: null,\n      // 选中的文件\n      previewUrl: null,\n      // 预览URL\n      showEditor: false,\n      // 是否显示编辑器\n      zoom: 1,\n      // 缩放级别\n      selectedPreset: -1,\n      // 选中的预设头像索引\n      avatarVariants: ['beam', 'marble', 'pixel', 'sunset', 'ring', 'bauhaus'],\n      // 预设头像变体\n      avatarColors: ['#264653', '#2a9d8f', '#e9c46a', '#f4a261', '#e76f51'] // 预设头像颜色\n    };\n  },\n  methods: {\n    // 处理文件选择\n    handleFileSelect(e) {\n      const file = e.target.files[0];\n      if (!file) return;\n\n      // 验证文件类型\n      if (!file.type.match('image.*')) {\n        alert('请选择图片文件');\n        return;\n      }\n\n      // 验证文件大小 (2MB)\n      if (file.size > 2 * 1024 * 1024) {\n        alert('图片大小不能超过2MB');\n        return;\n      }\n      this.selectedFile = file;\n      this.showEditor = true;\n      this.selectedPreset = -1; // 取消预设头像选择\n    },\n    // 处理图片准备完成\n    handleImageReady(imageData) {\n      this.previewUrl = imageData;\n    },\n    // 保存头像\n    async saveAvatar() {\n      if (this.$refs.avatarEditor) {\n        const canvas = this.$refs.avatarEditor.getImageScaledToCanvas();\n        const dataUrl = canvas.toDataURL('image/jpeg', 0.8);\n        this.previewUrl = dataUrl;\n        this.showEditor = false;\n        this.$emit('avatar-selected', dataUrl);\n      }\n    },\n    // 取消编辑\n    cancelEdit() {\n      this.showEditor = false;\n      this.selectedFile = null;\n      this.$refs.fileInput.value = '';\n    },\n    // 选择预设头像\n    selectPresetAvatar(index) {\n      this.selectedPreset = index;\n      this.selectedFile = null;\n      this.showEditor = false;\n\n      // 使用 vue-boring-avatars 生成预设头像\n      const avatarComponent = this.$refs[`avatar-${index}`];\n      if (avatarComponent) {\n        const avatarElement = avatarComponent.$el;\n        const svgContent = avatarElement.innerHTML;\n        const avatarUrl = `data:image/svg+xml,${encodeURIComponent(svgContent)}`;\n        this.previewUrl = avatarUrl;\n        this.$emit('avatar-selected', avatarUrl);\n      }\n    }\n  }\n};","map":{"version":3,"names":["VueAvatarEditor","Avatar","name","components","BoringAvatar","props","username","type","String","required","data","selectedFile","previewUrl","showEditor","zoom","selectedPreset","avatarVariants","avatarColors","methods","handleFileSelect","e","file","target","files","match","alert","size","handleImageReady","imageData","saveAvatar","$refs","avatarEditor","canvas","getImageScaledToCanvas","dataUrl","toDataURL","$emit","cancelEdit","fileInput","value","selectPresetAvatar","index","avatarComponent","avatarElement","$el","svgContent","innerHTML","avatarUrl","encodeURIComponent"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\AvatarSelector.vue"],"sourcesContent":["<template>\r\n  <div class=\"avatar-selector\">\r\n    <!-- 头像预览 -->\r\n    <div class=\"avatar-preview\">\r\n      <img \r\n        v-if=\"previewUrl\" \r\n        :src=\"previewUrl\" \r\n        alt=\"头像预览\"\r\n        class=\"preview-image\"\r\n      />\r\n      <div v-else class=\"empty-preview\">\r\n        <i class=\"fas fa-user\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 头像上传区域 -->\r\n    <div class=\"avatar-upload\">\r\n      <div class=\"upload-section\">\r\n        <input\r\n          type=\"file\"\r\n          ref=\"fileInput\"\r\n          @change=\"handleFileSelect\"\r\n          accept=\"image/*\"\r\n          class=\"file-input\"\r\n          id=\"avatar-upload\"\r\n        />\r\n        <label for=\"avatar-upload\" class=\"upload-button\">\r\n          <i class=\"fas fa-upload\"></i>\r\n          上传头像\r\n        </label>\r\n      </div>\r\n\r\n      <!-- 头像编辑器弹窗 -->\r\n      <div v-if=\"showEditor\" class=\"editor-modal\">\r\n        <div class=\"editor-container\">\r\n          <vue-avatar-editor\r\n            :image=\"selectedFile\"\r\n            :width=\"250\"\r\n            :height=\"250\"\r\n            :border=\"50\"\r\n            :color=\"[255, 255, 255, 0.6]\"\r\n            :scale=\"zoom\"\r\n            @vue-avatar-editor:image=\"handleImageReady\"\r\n            ref=\"avatarEditor\"\r\n          />\r\n          <div class=\"editor-controls\">\r\n            <div class=\"zoom-control\">\r\n              <label>缩放:</label>\r\n              <input \r\n                type=\"range\" \r\n                v-model=\"zoom\" \r\n                min=\"1\" \r\n                max=\"3\" \r\n                step=\"0.1\"\r\n              />\r\n            </div>\r\n            <div class=\"editor-buttons\">\r\n              <button @click=\"saveAvatar\" class=\"save-button\">保存</button>\r\n              <button @click=\"cancelEdit\" class=\"cancel-button\">取消</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 预设头像选择 -->\r\n    <div class=\"preset-avatars\">\r\n      <h3>预设头像</h3>\r\n      <div class=\"avatar-grid\">\r\n        <div \r\n          v-for=\"(variant, index) in avatarVariants\" \r\n          :key=\"index\"\r\n          class=\"preset-avatar\"\r\n          :class=\"{ selected: selectedPreset === index }\"\r\n          @click=\"selectPresetAvatar(index)\"\r\n        >\r\n          <boring-avatar\r\n            :ref=\"`avatar-${index}`\"\r\n            :size=\"60\"\r\n            :name=\"username + index\"\r\n            :variant=\"variant\"\r\n            :colors=\"avatarColors\"\r\n            :square=\"false\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VueAvatarEditor from 'vue-avatar-editor'\r\nimport { Avatar } from 'vue-boring-avatars'\r\n\r\nexport default {\r\n  name: 'AvatarSelector',\r\n  components: {\r\n    VueAvatarEditor,\r\n    BoringAvatar: Avatar\r\n  },\r\n  props: {\r\n    username: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      selectedFile: null,  // 选中的文件\r\n      previewUrl: null,  // 预览URL\r\n      showEditor: false,  // 是否显示编辑器\r\n      zoom: 1,  // 缩放级别\r\n      selectedPreset: -1,  // 选中的预设头像索引\r\n      avatarVariants: ['beam', 'marble', 'pixel', 'sunset', 'ring', 'bauhaus'],  // 预设头像变体\r\n      avatarColors: ['#264653', '#2a9d8f', '#e9c46a', '#f4a261', '#e76f51']  // 预设头像颜色\r\n    }\r\n  },\r\n  methods: {\r\n    // 处理文件选择\r\n    handleFileSelect(e) {\r\n      const file = e.target.files[0]\r\n      if (!file) return\r\n\r\n      // 验证文件类型\r\n      if (!file.type.match('image.*')) {\r\n        alert('请选择图片文件')\r\n        return\r\n      }\r\n\r\n      // 验证文件大小 (2MB)\r\n      if (file.size > 2 * 1024 * 1024) {\r\n        alert('图片大小不能超过2MB')\r\n        return\r\n      }\r\n\r\n      this.selectedFile = file\r\n      this.showEditor = true\r\n      this.selectedPreset = -1  // 取消预设头像选择\r\n    },\r\n\r\n    // 处理图片准备完成\r\n    handleImageReady(imageData) {\r\n      this.previewUrl = imageData\r\n    },\r\n\r\n    // 保存头像\r\n    async saveAvatar() {\r\n      if (this.$refs.avatarEditor) {\r\n        const canvas = this.$refs.avatarEditor.getImageScaledToCanvas()\r\n        const dataUrl = canvas.toDataURL('image/jpeg', 0.8)\r\n        this.previewUrl = dataUrl\r\n        this.showEditor = false\r\n        this.$emit('avatar-selected', dataUrl)\r\n      }\r\n    },\r\n\r\n    // 取消编辑\r\n    cancelEdit() {\r\n      this.showEditor = false\r\n      this.selectedFile = null\r\n      this.$refs.fileInput.value = ''\r\n    },\r\n\r\n    // 选择预设头像\r\n    selectPresetAvatar(index) {\r\n      this.selectedPreset = index\r\n      this.selectedFile = null\r\n      this.showEditor = false\r\n      \r\n      // 使用 vue-boring-avatars 生成预设头像\r\n      const avatarComponent = this.$refs[`avatar-${index}`]\r\n      if (avatarComponent) {\r\n        const avatarElement = avatarComponent.$el\r\n        const svgContent = avatarElement.innerHTML\r\n        const avatarUrl = `data:image/svg+xml,${encodeURIComponent(svgContent)}`\r\n        this.previewUrl = avatarUrl\r\n        this.$emit('avatar-selected', avatarUrl)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.avatar-selector {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  padding: 1.5rem;\r\n  background-color: var(--input-background);\r\n  border-radius: var(--card-border-radius);\r\n  box-shadow: var(--message-shadow);\r\n}\r\n\r\n.avatar-preview {\r\n  width: 120px;\r\n  height: 120px;\r\n  margin: 0 auto 1.5rem;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  border: var(--avatar-border);\r\n  box-shadow: var(--avatar-shadow);\r\n  background-color: var(--other-message-bg);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.preview-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.empty-preview {\r\n  font-size: 3rem;\r\n  color: var(--text-color);\r\n  opacity: 0.5;\r\n}\r\n\r\n.avatar-upload {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.upload-section {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.file-input {\r\n  display: none;\r\n}\r\n\r\n.upload-button {\r\n  padding: 0.75rem 1.5rem;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border-radius: var(--card-border-radius);\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.upload-button:hover {\r\n  background-color: var(--secondary-color);\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.editor-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.editor-container {\r\n  background-color: var(--chat-background);\r\n  padding: 2rem;\r\n  border-radius: var(--card-border-radius);\r\n  box-shadow: var(--message-shadow);\r\n}\r\n\r\n.editor-controls {\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.zoom-control {\r\n  margin-bottom: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  color: var(--text-color);\r\n}\r\n\r\n.zoom-control input[type=\"range\"] {\r\n  flex: 1;\r\n}\r\n\r\n.editor-buttons {\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n.save-button,\r\n.cancel-button {\r\n  padding: 0.5rem 1rem;\r\n  border: none;\r\n  border-radius: var(--card-border-radius);\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.save-button {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.save-button:hover {\r\n  background-color: var(--secondary-color);\r\n}\r\n\r\n.cancel-button {\r\n  background-color: var(--other-message-bg);\r\n  color: var(--text-color);\r\n}\r\n\r\n.cancel-button:hover {\r\n  background-color: var(--input-background);\r\n}\r\n\r\n.preset-avatars {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.preset-avatars h3 {\r\n  color: var(--text-color);\r\n  margin-bottom: 1rem;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.avatar-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.preset-avatar {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  border: 2px solid transparent;\r\n}\r\n\r\n.preset-avatar:hover {\r\n  transform: scale(1.1);\r\n}\r\n\r\n.preset-avatar.selected {\r\n  border-color: var(--primary-color);\r\n  transform: scale(1.1);\r\n}\r\n\r\n/* 响应式样式 */\r\n@media (max-width: 480px) {\r\n  .avatar-selector {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .avatar-preview {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n\r\n  .avatar-grid {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}