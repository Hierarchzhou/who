{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport CreateChannelModal from './CreateChannelModal.vue';\nexport default {\n  name: 'ChannelList',\n  components: {\n    CreateChannelModal\n  },\n  props: {\n    currentChannelId: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      expandedCategories: ['text', 'voice'],\n      // 默认展开的分类\n      showCreateChannel: false,\n      categories: [{\n        id: 'text',\n        name: '文字频道',\n        canCreateChannel: true,\n        channels: [{\n          id: 'general',\n          name: '综合讨论',\n          type: 'text',\n          hasUnread: false\n        }, {\n          id: 'announcement',\n          name: '公告',\n          type: 'text',\n          hasUnread: true,\n          unreadCount: 3\n        }]\n      }, {\n        id: 'voice',\n        name: '语音频道',\n        canCreateChannel: true,\n        channels: [{\n          id: 'voice-general',\n          name: '语音大厅',\n          type: 'voice',\n          hasUnread: false\n        }, {\n          id: 'gaming',\n          name: '游戏频道',\n          type: 'voice',\n          hasUnread: false\n        }]\n      }]\n    };\n  },\n  methods: {\n    // 切换分类展开/折叠\n    toggleCategory(categoryId) {\n      const index = this.expandedCategories.indexOf(categoryId);\n      if (index === -1) {\n        this.expandedCategories.push(categoryId);\n      } else {\n        this.expandedCategories.splice(index, 1);\n      }\n    },\n    // 选择频道\n    selectChannel(channel) {\n      this.$emit('select-channel', channel);\n    },\n    // 打开创建频道模态框\n    openCreateChannel() {\n      this.showCreateChannel = true;\n    },\n    // 关闭创建频道模态框\n    closeCreateChannel() {\n      this.showCreateChannel = false;\n    },\n    // 处理频道创建\n    handleChannelCreate(channelData) {\n      // 这里应该调用 API 创建频道\n      console.log('Creating channel:', channelData);\n\n      // 模拟创建成功\n      const newChannel = {\n        id: Date.now().toString(),\n        name: channelData.name,\n        type: channelData.type,\n        hasUnread: false\n      };\n\n      // 添加到对应分类\n      const category = this.categories.find(c => channelData.type === 'voice' && c.id === 'voice' || channelData.type === 'text' && c.id === 'text');\n      if (category) {\n        category.channels.push(newChannel);\n      }\n\n      // 选择新创建的频道\n      this.selectChannel(newChannel);\n    },\n    // 邀请成员到频道\n    inviteToChannel(channel) {\n      // TODO: 实现邀请功能\n      console.log('Inviting to channel:', channel);\n    },\n    // 打开频道设置\n    openChannelSettings(channel) {\n      // TODO: 实现频道设置功能\n      console.log('Opening channel settings:', channel);\n    }\n  }\n};","map":{"version":3,"names":["CreateChannelModal","name","components","props","currentChannelId","type","String","default","data","expandedCategories","showCreateChannel","categories","id","canCreateChannel","channels","hasUnread","unreadCount","methods","toggleCategory","categoryId","index","indexOf","push","splice","selectChannel","channel","$emit","openCreateChannel","closeCreateChannel","handleChannelCreate","channelData","console","log","newChannel","Date","now","toString","category","find","c","inviteToChannel","openChannelSettings"],"sources":["C:\\Users\\Administrator\\Desktop\\who\\src\\components\\chat\\ChannelList.vue"],"sourcesContent":["<template>\r\n  <div class=\"channel-list\">\r\n    <!-- 频道分类 -->\r\n    <div class=\"channel-category\" v-for=\"category in categories\" :key=\"category.id\">\r\n      <div class=\"category-header\" @click=\"toggleCategory(category.id)\">\r\n        <span class=\"category-arrow\" :class=\"{ expanded: expandedCategories.includes(category.id) }\">\r\n          ▶\r\n        </span>\r\n        <span class=\"category-name\">{{ category.name }}</span>\r\n        <button \r\n          v-if=\"category.canCreateChannel\" \r\n          class=\"add-channel-button\"\r\n          @click.stop=\"openCreateChannel\"\r\n          title=\"创建频道\"\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n\r\n      <!-- 频道列表 -->\r\n      <div class=\"channels\" v-show=\"expandedCategories.includes(category.id)\">\r\n        <div \r\n          v-for=\"channel in category.channels\" \r\n          :key=\"channel.id\"\r\n          class=\"channel-item\"\r\n          :class=\"{ \r\n            active: currentChannelId === channel.id,\r\n            unread: channel.hasUnread\r\n          }\"\r\n          @click=\"selectChannel(channel)\"\r\n        >\r\n          <!-- 频道图标 -->\r\n          <span class=\"channel-icon\">\r\n            {{ channel.type === 'voice' ? '🔊' : '#' }}\r\n          </span>\r\n\r\n          <!-- 频道名称 -->\r\n          <span class=\"channel-name\">{{ channel.name }}</span>\r\n\r\n          <!-- 频道操作按钮 -->\r\n          <div class=\"channel-actions\" v-if=\"currentChannelId === channel.id\">\r\n            <button \r\n              class=\"action-button\"\r\n              title=\"邀请成员\"\r\n              @click.stop=\"inviteToChannel(channel)\"\r\n            >\r\n              👥\r\n            </button>\r\n            <button \r\n              class=\"action-button\"\r\n              title=\"频道设置\"\r\n              @click.stop=\"openChannelSettings(channel)\"\r\n            >\r\n              ⚙️\r\n            </button>\r\n          </div>\r\n\r\n          <!-- 未读消息提示 -->\r\n          <span class=\"unread-indicator\" v-if=\"channel.hasUnread\">\r\n            {{ channel.unreadCount > 99 ? '99+' : channel.unreadCount }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 创建频道模态框 -->\r\n    <CreateChannelModal\r\n      :isOpen=\"showCreateChannel\"\r\n      @close=\"closeCreateChannel\"\r\n      @create=\"handleChannelCreate\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CreateChannelModal from './CreateChannelModal.vue'\r\n\r\nexport default {\r\n  name: 'ChannelList',\r\n  components: {\r\n    CreateChannelModal\r\n  },\r\n  props: {\r\n    currentChannelId: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      expandedCategories: ['text', 'voice'],  // 默认展开的分类\r\n      showCreateChannel: false,\r\n      categories: [\r\n        {\r\n          id: 'text',\r\n          name: '文字频道',\r\n          canCreateChannel: true,\r\n          channels: [\r\n            { id: 'general', name: '综合讨论', type: 'text', hasUnread: false },\r\n            { id: 'announcement', name: '公告', type: 'text', hasUnread: true, unreadCount: 3 }\r\n          ]\r\n        },\r\n        {\r\n          id: 'voice',\r\n          name: '语音频道',\r\n          canCreateChannel: true,\r\n          channels: [\r\n            { id: 'voice-general', name: '语音大厅', type: 'voice', hasUnread: false },\r\n            { id: 'gaming', name: '游戏频道', type: 'voice', hasUnread: false }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    // 切换分类展开/折叠\r\n    toggleCategory(categoryId) {\r\n      const index = this.expandedCategories.indexOf(categoryId)\r\n      if (index === -1) {\r\n        this.expandedCategories.push(categoryId)\r\n      } else {\r\n        this.expandedCategories.splice(index, 1)\r\n      }\r\n    },\r\n\r\n    // 选择频道\r\n    selectChannel(channel) {\r\n      this.$emit('select-channel', channel)\r\n    },\r\n\r\n    // 打开创建频道模态框\r\n    openCreateChannel() {\r\n      this.showCreateChannel = true\r\n    },\r\n\r\n    // 关闭创建频道模态框\r\n    closeCreateChannel() {\r\n      this.showCreateChannel = false\r\n    },\r\n\r\n    // 处理频道创建\r\n    handleChannelCreate(channelData) {\r\n      // 这里应该调用 API 创建频道\r\n      console.log('Creating channel:', channelData)\r\n      \r\n      // 模拟创建成功\r\n      const newChannel = {\r\n        id: Date.now().toString(),\r\n        name: channelData.name,\r\n        type: channelData.type,\r\n        hasUnread: false\r\n      }\r\n\r\n      // 添加到对应分类\r\n      const category = this.categories.find(c => \r\n        (channelData.type === 'voice' && c.id === 'voice') ||\r\n        (channelData.type === 'text' && c.id === 'text')\r\n      )\r\n\r\n      if (category) {\r\n        category.channels.push(newChannel)\r\n      }\r\n\r\n      // 选择新创建的频道\r\n      this.selectChannel(newChannel)\r\n    },\r\n\r\n    // 邀请成员到频道\r\n    inviteToChannel(channel) {\r\n      // TODO: 实现邀请功能\r\n      console.log('Inviting to channel:', channel)\r\n    },\r\n\r\n    // 打开频道设置\r\n    openChannelSettings(channel) {\r\n      // TODO: 实现频道设置功能\r\n      console.log('Opening channel settings:', channel)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.channel-list {\r\n  padding: 0 8px;\r\n}\r\n\r\n.channel-category {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.category-header {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 6px 4px;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  color: var(--text-muted);\r\n  font-size: 0.75rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.02em;\r\n}\r\n\r\n.category-arrow {\r\n  font-size: 0.625rem;\r\n  margin-right: 4px;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.category-arrow.expanded {\r\n  transform: rotate(90deg);\r\n}\r\n\r\n.category-name {\r\n  flex: 1;\r\n  font-weight: 600;\r\n}\r\n\r\n.add-channel-button {\r\n  width: 16px;\r\n  height: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-muted);\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.category-header:hover .add-channel-button {\r\n  opacity: 1;\r\n}\r\n\r\n.add-channel-button:hover {\r\n  color: var(--text-normal);\r\n}\r\n\r\n.channels {\r\n  margin-top: 2px;\r\n}\r\n\r\n.channel-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 6px 8px;\r\n  margin: 1px 0;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  color: var(--text-muted);\r\n  font-size: 0.9375rem;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.channel-item:hover {\r\n  background-color: var(--background-modifier-hover);\r\n  color: var(--text-normal);\r\n}\r\n\r\n.channel-item.active {\r\n  background-color: var(--background-modifier-selected);\r\n  color: var(--text-normal);\r\n}\r\n\r\n.channel-icon {\r\n  margin-right: 6px;\r\n  font-size: 1.25rem;\r\n  width: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.channel-name {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.channel-actions {\r\n  display: flex;\r\n  gap: 4px;\r\n  margin-left: 4px;\r\n}\r\n\r\n.action-button {\r\n  width: 20px;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-muted);\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.channel-item:hover .action-button {\r\n  opacity: 1;\r\n}\r\n\r\n.action-button:hover {\r\n  color: var(--text-normal);\r\n}\r\n\r\n.unread-indicator {\r\n  min-width: 16px;\r\n  height: 16px;\r\n  padding: 0 4px;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  font-size: 0.75rem;\r\n  font-weight: 600;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.channel-item.unread {\r\n  color: var(--text-normal);\r\n  font-weight: 500;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}