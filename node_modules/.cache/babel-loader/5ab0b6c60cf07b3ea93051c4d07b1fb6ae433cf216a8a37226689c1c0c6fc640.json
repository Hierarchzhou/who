{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"online-users-sidebar\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar-header\"\n};\nconst _hoisted_3 = {\n  class: \"sidebar-title\"\n};\nconst _hoisted_4 = {\n  class: \"users-list\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"user-item current-user\"\n};\nconst _hoisted_6 = {\n  class: \"user-avatar-container\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"user-info\"\n};\nconst _hoisted_9 = {\n  class: \"user-name\"\n};\nconst _hoisted_10 = {\n  class: \"user-status-text\"\n};\nconst _hoisted_11 = {\n  class: \"user-avatar-container\"\n};\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  class: \"user-info\"\n};\nconst _hoisted_14 = {\n  class: \"user-name\"\n};\nconst _hoisted_15 = {\n  class: \"user-status-text\"\n};\nconst _hoisted_16 = {\n  key: 1,\n  class: \"no-users\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 侧边栏头部 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", _hoisted_3, \"在线用户 (\" + _toDisplayString($props.onlineUsers.length) + \")\", 1 /* TEXT */)]), _createCommentVNode(\" 用户列表 \"), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" 当前用户 \"), $props.currentUsername ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    src: $setup.getCurrentUserAvatar(),\n    alt: \"当前用户头像\",\n    class: \"user-avatar\",\n    onError: _cache[0] || (_cache[0] = (...args) => $setup.handleAvatarError && $setup.handleAvatarError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_7), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"user-status\", $setup.currentUserStatus])\n  }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createTextVNode(_toDisplayString($props.currentUsername) + \" \", 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    class: \"user-tag\"\n  }, \"(我)\", -1 /* HOISTED */))]), _createElementVNode(\"div\", _hoisted_10, _toDisplayString($setup.getStatusText($setup.currentUserStatus)), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 分隔线 \"), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"sidebar-divider\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" 其他在线用户 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.otherUsers, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user.username,\n      class: \"user-item\"\n    }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"img\", {\n      src: user.avatar || $setup.getFallbackAvatarUrl(),\n      alt: \"用户头像\",\n      class: \"user-avatar\",\n      onError: _cache[1] || (_cache[1] = (...args) => $setup.handleAvatarError && $setup.handleAvatarError(...args))\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_12), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"user-status\", user.status || 'online'])\n    }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, _toDisplayString(user.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_15, _toDisplayString($setup.getStatusText(user.status || 'online')), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 无用户时的提示 \"), $setup.otherUsers.length === 0 && !$props.currentUsername ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, \" 暂无其他用户在线 \")) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$props","onlineUsers","length","_hoisted_4","currentUsername","_hoisted_5","_hoisted_6","src","$setup","getCurrentUserAvatar","alt","onError","_cache","args","handleAvatarError","_hoisted_7","_normalizeClass","currentUserStatus","_hoisted_8","_hoisted_9","_createTextVNode","_hoisted_10","getStatusText","_Fragment","_renderList","otherUsers","user","username","_hoisted_11","avatar","getFallbackAvatarUrl","_hoisted_12","status","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\OnlineUsersSidebar.vue"],"sourcesContent":["<template>\r\n  <div class=\"online-users-sidebar\">\r\n    <!-- 侧边栏头部 -->\r\n    <div class=\"sidebar-header\">\r\n      <h3 class=\"sidebar-title\">在线用户 ({{ onlineUsers.length }})</h3>\r\n    </div>\r\n    \r\n    <!-- 用户列表 -->\r\n    <div class=\"users-list\">\r\n      <!-- 当前用户 -->\r\n      <div \r\n        class=\"user-item current-user\" \r\n        v-if=\"currentUsername\"\r\n      >\r\n        <div class=\"user-avatar-container\">\r\n          <img \r\n            :src=\"getCurrentUserAvatar()\" \r\n            alt=\"当前用户头像\" \r\n            class=\"user-avatar\"\r\n            @error=\"handleAvatarError\"\r\n          />\r\n          <div class=\"user-status\" :class=\"currentUserStatus\"></div>\r\n        </div>\r\n        <div class=\"user-info\">\r\n          <div class=\"user-name\">\r\n            {{ currentUsername }} \r\n            <span class=\"user-tag\">(我)</span>\r\n          </div>\r\n          <div class=\"user-status-text\">{{ getStatusText(currentUserStatus) }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 分隔线 -->\r\n      <div class=\"sidebar-divider\"></div>\r\n      \r\n      <!-- 其他在线用户 -->\r\n      <div \r\n        v-for=\"user in otherUsers\" \r\n        :key=\"user.username\"\r\n        class=\"user-item\"\r\n      >\r\n        <div class=\"user-avatar-container\">\r\n          <img \r\n            :src=\"user.avatar || getFallbackAvatarUrl()\" \r\n            alt=\"用户头像\" \r\n            class=\"user-avatar\"\r\n            @error=\"handleAvatarError\"\r\n          />\r\n          <div class=\"user-status\" :class=\"user.status || 'online'\"></div>\r\n        </div>\r\n        <div class=\"user-info\">\r\n          <div class=\"user-name\">{{ user.username }}</div>\r\n          <div class=\"user-status-text\">{{ getStatusText(user.status || 'online') }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 无用户时的提示 -->\r\n      <div v-if=\"otherUsers.length === 0 && !currentUsername\" class=\"no-users\">\r\n        暂无其他用户在线\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils'\r\n\r\nexport default {\r\n  name: 'OnlineUsersSidebar',\r\n  props: {\r\n    // 在线用户列表\r\n    onlineUsers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 当前用户名\r\n    currentUsername: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  \r\n  setup(props) {\r\n    const store = useStore()\r\n    \r\n    // 获取当前用户状态\r\n    const currentUserStatus = computed(() => store.getters['userStatus/currentStatus'])\r\n    \r\n    // 除了当前用户之外的其他用户\r\n    const otherUsers = computed(() => \r\n      props.onlineUsers.filter(user => user.username !== props.currentUsername)\r\n    )\r\n    \r\n    // 获取当前用户头像\r\n    const getCurrentUserAvatar = () => {\r\n      const currentUser = props.onlineUsers.find(\r\n        user => user.username === props.currentUsername\r\n      )\r\n      return currentUser ? currentUser.avatar : getFallbackAvatarUrl()\r\n    }\r\n    \r\n    // 获取状态文本\r\n    const getStatusText = (status) => {\r\n      const statusMap = {\r\n        online: '在线',\r\n        away: '离开',\r\n        busy: '请勿打扰',\r\n        invisible: '隐身',\r\n        offline: '离线'\r\n      }\r\n      return statusMap[status] || '在线'\r\n    }\r\n    \r\n    return {\r\n      currentUserStatus,\r\n      otherUsers,\r\n      getCurrentUserAvatar,\r\n      getStatusText,\r\n      getFallbackAvatarUrl,\r\n      handleAvatarError\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.online-users-sidebar {\r\n  width: 240px;\r\n  height: 100vh;\r\n  background-color: var(--background-secondary);\r\n  border-right: 1px solid var(--border-color);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.sidebar-header {\r\n  padding: 16px;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.sidebar-title {\r\n  color: var(--text-color);\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin: 0;\r\n}\r\n\r\n.users-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 8px 0;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.user-item:hover {\r\n  background-color: var(--background-modifier-hover);\r\n}\r\n\r\n.user-item.current-user {\r\n  background-color: var(--background-modifier-selected);\r\n}\r\n\r\n.user-avatar-container {\r\n  position: relative;\r\n  margin-right: 12px;\r\n}\r\n\r\n.user-avatar {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n\r\n.user-status {\r\n  position: absolute;\r\n  bottom: -2px;\r\n  right: -2px;\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  border: 2px solid var(--background-secondary);\r\n}\r\n\r\n.user-status.online {\r\n  background-color: #43b581;\r\n}\r\n\r\n.user-status.away {\r\n  background-color: #faa61a;\r\n}\r\n\r\n.user-status.busy {\r\n  background-color: #f04747;\r\n}\r\n\r\n.user-status.invisible {\r\n  background-color: #747f8d;\r\n}\r\n\r\n.user-status.offline {\r\n  background-color: #747f8d;\r\n}\r\n\r\n.user-info {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.user-name {\r\n  color: var(--text-color);\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.user-tag {\r\n  color: var(--text-muted);\r\n  font-size: 12px;\r\n  font-weight: normal;\r\n}\r\n\r\n.user-status-text {\r\n  color: var(--text-muted);\r\n  font-size: 12px;\r\n  margin-top: 2px;\r\n}\r\n\r\n.sidebar-divider {\r\n  height: 1px;\r\n  background-color: var(--border-color);\r\n  margin: 8px 16px;\r\n}\r\n\r\n.no-users {\r\n  padding: 16px;\r\n  text-align: center;\r\n  color: var(--text-muted);\r\n  font-style: italic;\r\n}\r\n\r\n/* 滚动条样式 */\r\n.users-list::-webkit-scrollbar {\r\n  width: 4px;\r\n}\r\n\r\n.users-list::-webkit-scrollbar-thumb {\r\n  background-color: var(--scrollbar-thumb);\r\n  border-radius: 2px;\r\n}\r\n\r\n.users-list::-webkit-scrollbar-track {\r\n  background-color: transparent;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .online-users-sidebar {\r\n    width: 100%;\r\n    height: auto;\r\n    max-height: 200px;\r\n  }\r\n  \r\n  .users-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 8px;\r\n  }\r\n  \r\n  .user-item {\r\n    width: auto;\r\n    margin: 4px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}