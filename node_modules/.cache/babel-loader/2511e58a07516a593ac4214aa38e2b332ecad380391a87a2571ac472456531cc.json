{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"avatar-selector\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"avatar-preview-container\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  key: 1,\n  class: \"empty-preview\"\n};\nconst _hoisted_5 = {\n  class: \"default-avatar\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"style-selector\"\n};\nconst _hoisted_8 = {\n  class: \"style-categories\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = {\n  class: \"avatar-grid\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  class: \"avatar-option upload-option\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 头像预览区域 \"), _createElementVNode(\"div\", {\n    class: \"avatar-preview\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.triggerFileInput && _ctx.triggerFileInput(...args))\n  }, [$data.previewUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: $data.previewUrl,\n    alt: \"Avatar preview\",\n    class: \"preview-image\"\n  }, null, 8 /* PROPS */, _hoisted_3), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"avatar-hover-effect\"\n  }, [_createElementVNode(\"span\", {\n    class: \"change-text\"\n  }, \"更换头像\")], -1 /* HOISTED */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: _ctx.getRandomDefaultAvatarUrl(),\n    alt: \"Default avatar\"\n  }, null, 8 /* PROPS */, _hoisted_6)]), _cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"点击选择头像\", -1 /* HOISTED */))]))]), _createCommentVNode(\" 头像样式选择器 \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.avatarStyles, style => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: style,\n      class: _normalizeClass([\"style-button\", {\n        active: $data.selectedStyle === style\n      }]),\n      onClick: $event => $options.selectStyle(style)\n    }, _toDisplayString($options.getStyleName(style)), 11 /* TEXT, CLASS, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 头像网格 \"), _createElementVNode(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.generatedAvatars, (avatar, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"avatar-option\", {\n        selected: $data.selectedAvatar === avatar\n      }]),\n      onClick: $event => $options.selectAvatar(avatar)\n    }, [_createElementVNode(\"img\", {\n      src: avatar,\n      alt: \"Avatar option\"\n    }, null, 8 /* PROPS */, _hoisted_12), _cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n      class: \"hover-effect\"\n    }, [_createElementVNode(\"span\", {\n      class: \"select-text\"\n    }, \"选择\")], -1 /* HOISTED */))], 10 /* CLASS, PROPS */, _hoisted_11);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" 刷新按钮 \"), _createElementVNode(\"div\", {\n    class: \"avatar-option refresh-option\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.regenerateAvatars && $options.regenerateAvatars(...args))\n  }, _cache[6] || (_cache[6] = [_createElementVNode(\"div\", {\n    class: \"refresh-icon\"\n  }, [_createElementVNode(\"span\", null, \"↻\"), _createElementVNode(\"span\", {\n    class: \"refresh-text\"\n  }, \"换一批\")], -1 /* HOISTED */)])), _createCommentVNode(\" 自定义上传选项 \"), _createElementVNode(\"div\", _hoisted_13, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"avatar-upload\",\n    class: \"upload-label\"\n  }, [_createElementVNode(\"div\", {\n    class: \"upload-icon\"\n  }, [_createElementVNode(\"span\", null, \"+\"), _createElementVNode(\"span\", {\n    class: \"upload-text\"\n  }, \"上传图片\")])], -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"avatar-upload\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.handleFileSelect && $options.handleFileSelect(...args)),\n    accept: \"image/*\",\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, 32 /* NEED_HYDRATION */)])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","onClick","_cache","args","_ctx","triggerFileInput","$data","previewUrl","_hoisted_2","src","alt","_hoisted_3","_hoisted_4","_hoisted_5","getRandomDefaultAvatarUrl","_hoisted_6","_hoisted_7","_hoisted_8","_Fragment","_renderList","avatarStyles","style","_normalizeClass","active","selectedStyle","$event","$options","selectStyle","getStyleName","_hoisted_9","_hoisted_10","generatedAvatars","avatar","index","selected","selectedAvatar","selectAvatar","_hoisted_12","_hoisted_11","regenerateAvatars","_hoisted_13","for","type","id","onChange","handleFileSelect","accept"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\AvatarSelector.vue"],"sourcesContent":["<template>\n  <div class=\"avatar-selector\">\n    <!-- 头像预览区域 -->\n    <div class=\"avatar-preview\" @click=\"triggerFileInput\">\n      <div v-if=\"previewUrl\" class=\"avatar-preview-container\">\n        <img :src=\"previewUrl\" alt=\"Avatar preview\" class=\"preview-image\" />\n        <div class=\"avatar-hover-effect\">\n          <span class=\"change-text\">更换头像</span>\n        </div>\n      </div>\n      <div v-else class=\"empty-preview\">\n        <div class=\"default-avatar\">\n          <img :src=\"getRandomDefaultAvatarUrl()\" alt=\"Default avatar\" />\n        </div>\n        <span>点击选择头像</span>\n      </div>\n    </div>\n\n    <!-- 头像样式选择器 -->\n    <div class=\"style-selector\">\n      <div class=\"style-categories\">\n        <button \n          v-for=\"style in avatarStyles\" \n          :key=\"style\"\n          class=\"style-button\"\n          :class=\"{ active: selectedStyle === style }\"\n          @click=\"selectStyle(style)\"\n        >\n          {{ getStyleName(style) }}\n        </button>\n      </div>\n    </div>\n\n    <!-- 头像网格 -->\n    <div class=\"avatar-grid\">\n      <div \n        v-for=\"(avatar, index) in generatedAvatars\" \n        :key=\"index\"\n        class=\"avatar-option\"\n        :class=\"{ selected: selectedAvatar === avatar }\"\n        @click=\"selectAvatar(avatar)\"\n      >\n        <img :src=\"avatar\" alt=\"Avatar option\" />\n        <div class=\"hover-effect\">\n          <span class=\"select-text\">选择</span>\n        </div>\n      </div>\n      \n      <!-- 刷新按钮 -->\n      <div class=\"avatar-option refresh-option\" @click=\"regenerateAvatars\">\n        <div class=\"refresh-icon\">\n          <span>↻</span>\n          <span class=\"refresh-text\">换一批</span>\n        </div>\n      </div>\n      \n      <!-- 自定义上传选项 -->\n      <div class=\"avatar-option upload-option\">\n        <label for=\"avatar-upload\" class=\"upload-label\">\n          <div class=\"upload-icon\">\n            <span>+</span>\n            <span class=\"upload-text\">上传图片</span>\n          </div>\n        </label>\n        <input \n          type=\"file\" \n          id=\"avatar-upload\" \n          @change=\"handleFileSelect\" \n          accept=\"image/*\"\n          style=\"display: none\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getRandomDefaultAvatarUrl, avatarStyles } from '../../utils/avatarUtils';\n\nexport default {\n  name: 'AvatarSelector',\n  data() {\n    return {\n      selectedStyle: avatarStyles[0],\n      selectedAvatar: '',\n      previewUrl: null,\n      generatedAvatars: [],\n      avatarStyles\n    }\n  },\n  created() {\n    this.generateAvatarSet();\n  },\n  methods: {\n    // 生成一组头像\n    generateAvatarSet() {\n      this.generatedAvatars = Array(8).fill(null).map(() => getRandomDefaultAvatarUrl());\n    },\n    \n    // 选择头像样式\n    selectStyle(style) {\n      this.selectedStyle = style;\n      this.generateAvatarSet();\n    },\n    \n    // 获取样式名称的中文显示\n    getStyleName(style) {\n      const styleNames = {\n        'micah': '简约',\n        'avataaars': '卡通',\n        'bottts': '机器人',\n        'personas': '像素',\n        'thumbs': '拇指',\n        'lorelei': '可爱',\n        'notionists': '商务',\n        'adventurer': '冒险',\n        'fun-emoji': '表情',\n        'big-smile': '微笑'\n      };\n      return styleNames[style] || style;\n    },\n    \n    // 选择头像\n    selectAvatar(avatar) {\n      this.selectedAvatar = avatar;\n      this.previewUrl = avatar;\n      this.$emit('avatar-selected', avatar);\n    },\n    \n    // 重新生成头像\n    regenerateAvatars() {\n      this.generateAvatarSet();\n    },\n    \n    // 处理文件选择\n    handleFileSelect(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n      \n      if (!file.type.match('image.*')) {\n        alert('请上传图片文件');\n        return;\n      }\n      \n      if (file.size > 2 * 1024 * 1024) {\n        alert('图片大小不能超过 2MB');\n        return;\n      }\n      \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.previewUrl = e.target.result;\n        this.selectedAvatar = e.target.result;\n        this.$emit('avatar-selected', e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.avatar-selector {\n  width: 100%;\n  max-width: 600px;\n  padding: 1.5rem;\n  background: var(--chat-background);\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n}\n\n.avatar-preview {\n  width: 120px;\n  height: 120px;\n  margin: 0 auto 2rem;\n  border-radius: 50%;\n  overflow: hidden;\n  position: relative;\n  cursor: pointer;\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\n  padding: 3px;\n}\n\n.preview-image {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n}\n\n.avatar-hover-effect, .hover-effect {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.avatar-preview:hover .avatar-hover-effect,\n.avatar-option:hover .hover-effect {\n  opacity: 1;\n}\n\n.change-text, .select-text {\n  color: white;\n  font-size: 0.9rem;\n  font-weight: 500;\n}\n\n.style-selector {\n  margin-bottom: 2rem;\n}\n\n.style-categories {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  justify-content: center;\n}\n\n.style-button {\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 20px;\n  background: var(--input-background);\n  color: var(--text-color);\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 0.9rem;\n}\n\n.style-button.active {\n  background: var(--primary-color);\n  color: white;\n  transform: scale(1.05);\n}\n\n.avatar-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\n  gap: 1rem;\n  padding: 1rem;\n  background: var(--input-background);\n  border-radius: 8px;\n}\n\n.avatar-option {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  overflow: hidden;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.3s ease;\n  border: 3px solid transparent;\n}\n\n.avatar-option img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.avatar-option.selected {\n  border-color: var(--primary-color);\n  transform: scale(1.1);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n}\n\n.refresh-option, .upload-option {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--chat-background);\n  border: 2px dashed var(--border-color);\n}\n\n.refresh-icon, .upload-icon {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: var(--text-color);\n  font-size: 1.5rem;\n}\n\n.refresh-text, .upload-text {\n  font-size: 0.8rem;\n  margin-top: 0.3rem;\n}\n\n.empty-preview {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: var(--input-background);\n  border-radius: 50%;\n}\n\n.default-avatar {\n  width: 80%;\n  height: 80%;\n  border-radius: 50%;\n  overflow: hidden;\n}\n\n.default-avatar img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n@media (max-width: 480px) {\n  .avatar-grid {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  \n  .style-button {\n    padding: 0.4rem 0.8rem;\n    font-size: 0.8rem;\n  }\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAD9BC,GAAA;EAI6BD,KAAK,EAAC;;mBAJnC;;EAAAC,GAAA;EAUkBD,KAAK,EAAC;;;EACXA,KAAK,EAAC;AAAgB;mBAXnC;;EAmBSA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAkB;mBApBnC;;EAkCSA,KAAK,EAAC;AAAa;oBAlC5B;oBAAA;;EAyDWA,KAAK,EAAC;AAA6B;;uBAxD5CE,mBAAA,CAwEM,OAxENC,UAwEM,GAvEJC,mBAAA,YAAe,EACfC,mBAAA,CAaM;IAbDL,KAAK,EAAC,gBAAgB;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,gBAAA,IAAAD,IAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;MACvCG,KAAA,CAAAC,UAAU,I,cAArBV,mBAAA,CAKM,OALNW,UAKM,GAJJR,mBAAA,CAAoE;IAA9DS,GAAG,EAAEH,KAAA,CAAAC,UAAU;IAAEG,GAAG,EAAC,gBAAgB;IAACf,KAAK,EAAC;0BAL1DgB,UAAA,G,0BAMQX,mBAAA,CAEM;IAFDL,KAAK,EAAC;EAAqB,IAC9BK,mBAAA,CAAqC;IAA/BL,KAAK,EAAC;EAAa,GAAC,MAAI,E,yCAGlCE,mBAAA,CAKM,OALNe,UAKM,GAJJZ,mBAAA,CAEM,OAFNa,UAEM,GADJb,mBAAA,CAA+D;IAAzDS,GAAG,EAAEL,IAAA,CAAAU,yBAAyB;IAAIJ,GAAG,EAAC;0BAZtDK,UAAA,E,6BAcQf,mBAAA,CAAmB,cAAb,QAAM,qB,MAIhBD,mBAAA,aAAgB,EAChBC,mBAAA,CAYM,OAZNgB,UAYM,GAXJhB,mBAAA,CAUM,OAVNiB,UAUM,I,kBATJpB,mBAAA,CAQSqB,SAAA,QA7BjBC,WAAA,CAsB0Bb,KAAA,CAAAc,YAAY,EAArBC,KAAK;yBADdxB,mBAAA,CAQS;MANND,GAAG,EAAEyB,KAAK;MACX1B,KAAK,EAxBf2B,eAAA,EAwBgB,cAAc;QAAAC,MAAA,EACFjB,KAAA,CAAAkB,aAAa,KAAKH;MAAK;MACxCpB,OAAK,EAAAwB,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACN,KAAK;wBAEtBK,QAAA,CAAAE,YAAY,CAACP,KAAK,iCA5B/BQ,UAAA;sCAiCI9B,mBAAA,UAAa,EACbC,mBAAA,CAsCM,OAtCN8B,WAsCM,I,kBArCJjC,mBAAA,CAWMqB,SAAA,QA9CZC,WAAA,CAoCkCb,KAAA,CAAAyB,gBAAgB,EApClD,CAoCgBC,MAAM,EAAEC,KAAK;yBADvBpC,mBAAA,CAWM;MATHD,GAAG,EAAEqC,KAAK;MACXtC,KAAK,EAtCb2B,eAAA,EAsCc,eAAe;QAAAY,QAAA,EACD5B,KAAA,CAAA6B,cAAc,KAAKH;MAAM;MAC5C/B,OAAK,EAAAwB,MAAA,IAAEC,QAAA,CAAAU,YAAY,CAACJ,MAAM;QAE3BhC,mBAAA,CAAyC;MAAnCS,GAAG,EAAEuB,MAAM;MAAEtB,GAAG,EAAC;4BA1C/B2B,WAAA,G,0BA2CQrC,mBAAA,CAEM;MAFDL,KAAK,EAAC;IAAc,IACvBK,mBAAA,CAAmC;MAA7BL,KAAK,EAAC;IAAa,GAAC,IAAE,E,8CA5CtC2C,WAAA;kCAgDMvC,mBAAA,UAAa,EACbC,mBAAA,CAKM;IALDL,KAAK,EAAC,8BAA8B;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEuB,QAAA,CAAAa,iBAAA,IAAAb,QAAA,CAAAa,iBAAA,IAAApC,IAAA,CAAiB;gCACjEH,mBAAA,CAGM;IAHDL,KAAK,EAAC;EAAc,IACvBK,mBAAA,CAAc,cAAR,GAAC,GACPA,mBAAA,CAAqC;IAA/BL,KAAK,EAAC;EAAc,GAAC,KAAG,E,wBAIlCI,mBAAA,aAAgB,EAChBC,mBAAA,CAcM,OAdNwC,WAcM,G,0BAbJxC,mBAAA,CAKQ;IALDyC,GAAG,EAAC,eAAe;IAAC9C,KAAK,EAAC;MAC/BK,mBAAA,CAGM;IAHDL,KAAK,EAAC;EAAa,IACtBK,mBAAA,CAAc,cAAR,GAAC,GACPA,mBAAA,CAAqC;IAA/BL,KAAK,EAAC;EAAa,GAAC,MAAI,E,wBAGlCK,mBAAA,CAME;IALA0C,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,eAAe;IACjBC,QAAM,EAAA1C,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEuB,QAAA,CAAAmB,gBAAA,IAAAnB,QAAA,CAAAmB,gBAAA,IAAA1C,IAAA,CAAgB;IACzB2C,MAAM,EAAC,SAAS;IAChBzB,KAAqB,EAArB;MAAA;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}