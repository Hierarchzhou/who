{"ast":null,"code":"import { GiphyFetch } from '@giphy/js-fetch-api';\nimport { GIPHY_API_KEY, GIPHY_CONFIG } from '@/config/giphy';\n\n// 初始化 GIPHY API 客户端\nconst gf = new GiphyFetch(GIPHY_API_KEY);\nexport default {\n  name: 'StickerPicker',\n  data() {\n    return {\n      searchQuery: '',\n      stickers: [],\n      loading: false,\n      currentCategory: 'trending',\n      categories: [{\n        id: 'trending',\n        name: '热门'\n      }, {\n        id: 'reactions',\n        name: '反应'\n      }, {\n        id: 'memes',\n        name: '梗图'\n      }, {\n        id: 'anime',\n        name: '动漫'\n      }, {\n        id: 'cute',\n        name: '可爱'\n      }],\n      searchTimeout: null\n    };\n  },\n  methods: {\n    async fetchStickers(options = {}) {\n      this.loading = true;\n      try {\n        let response;\n        if (this.searchQuery) {\n          response = await gf.search(this.searchQuery, {\n            ...GIPHY_CONFIG,\n            ...options,\n            type: 'stickers'\n          });\n        } else {\n          response = await gf.trending({\n            ...GIPHY_CONFIG,\n            ...options,\n            type: 'stickers'\n          });\n        }\n        this.stickers = response.data;\n      } catch (error) {\n        console.error('Error fetching stickers:', error);\n      }\n      this.loading = false;\n    },\n    handleSearch() {\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n      this.searchTimeout = setTimeout(() => {\n        this.fetchStickers();\n      }, 300);\n    },\n    selectCategory(category) {\n      this.currentCategory = category.id;\n      this.searchQuery = category.id === 'trending' ? '' : category.name;\n      this.fetchStickers();\n    },\n    selectSticker(sticker) {\n      this.$emit('select', {\n        id: sticker.id,\n        url: sticker.images.fixed_height.url,\n        title: sticker.title\n      });\n    }\n  },\n  mounted() {\n    this.fetchStickers();\n  }\n};","map":{"version":3,"names":["GiphyFetch","GIPHY_API_KEY","GIPHY_CONFIG","gf","name","data","searchQuery","stickers","loading","currentCategory","categories","id","searchTimeout","methods","fetchStickers","options","response","search","type","trending","error","console","handleSearch","clearTimeout","setTimeout","selectCategory","category","selectSticker","sticker","$emit","url","images","fixed_height","title","mounted"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\StickerPicker.vue"],"sourcesContent":["<template>\r\n  <div class=\"sticker-picker\">\r\n    <!-- 搜索框 -->\r\n    <div class=\"search-container\">\r\n      <input \r\n        type=\"text\" \r\n        v-model=\"searchQuery\"\r\n        placeholder=\"搜索表情包...\"\r\n        @input=\"handleSearch\"\r\n        class=\"search-input\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 分类标签 -->\r\n    <div class=\"categories\">\r\n      <button \r\n        v-for=\"category in categories\" \r\n        :key=\"category.id\"\r\n        @click=\"selectCategory(category)\"\r\n        :class=\"['category-btn', { active: currentCategory === category.id }]\"\r\n      >\r\n        {{ category.name }}\r\n      </button>\r\n    </div>\r\n\r\n    <!-- 表情包网格 -->\r\n    <div class=\"stickers-grid\" ref=\"gridContainer\">\r\n      <div v-if=\"loading\" class=\"loading\">加载中...</div>\r\n      <template v-else>\r\n        <div \r\n          v-for=\"sticker in stickers\" \r\n          :key=\"sticker.id\" \r\n          class=\"sticker-item\"\r\n          @click=\"selectSticker(sticker)\"\r\n        >\r\n          <img \r\n            :src=\"sticker.images.fixed_height_small.url\" \r\n            :alt=\"sticker.title\"\r\n            loading=\"lazy\"\r\n          />\r\n        </div>\r\n      </template>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { GiphyFetch } from '@giphy/js-fetch-api'\r\nimport { GIPHY_API_KEY, GIPHY_CONFIG } from '@/config/giphy'\r\n\r\n// 初始化 GIPHY API 客户端\r\nconst gf = new GiphyFetch(GIPHY_API_KEY)\r\n\r\nexport default {\r\n  name: 'StickerPicker',\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      stickers: [],\r\n      loading: false,\r\n      currentCategory: 'trending',\r\n      categories: [\r\n        { id: 'trending', name: '热门' },\r\n        { id: 'reactions', name: '反应' },\r\n        { id: 'memes', name: '梗图' },\r\n        { id: 'anime', name: '动漫' },\r\n        { id: 'cute', name: '可爱' }\r\n      ],\r\n      searchTimeout: null\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchStickers(options = {}) {\r\n      this.loading = true\r\n      try {\r\n        let response\r\n        if (this.searchQuery) {\r\n          response = await gf.search(this.searchQuery, {\r\n            ...GIPHY_CONFIG,\r\n            ...options,\r\n            type: 'stickers',\r\n          })\r\n        } else {\r\n          response = await gf.trending({\r\n            ...GIPHY_CONFIG,\r\n            ...options,\r\n            type: 'stickers',\r\n          })\r\n        }\r\n        this.stickers = response.data\r\n      } catch (error) {\r\n        console.error('Error fetching stickers:', error)\r\n      }\r\n      this.loading = false\r\n    },\r\n\r\n    handleSearch() {\r\n      if (this.searchTimeout) {\r\n        clearTimeout(this.searchTimeout)\r\n      }\r\n      this.searchTimeout = setTimeout(() => {\r\n        this.fetchStickers()\r\n      }, 300)\r\n    },\r\n\r\n    selectCategory(category) {\r\n      this.currentCategory = category.id\r\n      this.searchQuery = category.id === 'trending' ? '' : category.name\r\n      this.fetchStickers()\r\n    },\r\n\r\n    selectSticker(sticker) {\r\n      this.$emit('select', {\r\n        id: sticker.id,\r\n        url: sticker.images.fixed_height.url,\r\n        title: sticker.title\r\n      })\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchStickers()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.sticker-picker {\r\n  width: 100%;\r\n  height: 350px;  /* 调整高度更合适 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: var(--background-primary, #2f3136);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.search-container {\r\n  padding: 8px;\r\n  border-bottom: 1px solid var(--border-color, rgba(255, 255, 255, 0.1));\r\n  background: var(--background-secondary, #36393f);\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid var(--border-color, rgba(255, 255, 255, 0.1));\r\n  background: var(--background-tertiary, #202225);\r\n  color: var(--text-normal, #dcddde);\r\n  font-size: 14px;\r\n}\r\n\r\n.search-input:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color, #7289da);\r\n}\r\n\r\n.categories {\r\n  padding: 6px;\r\n  display: flex;\r\n  gap: 4px;\r\n  overflow-x: auto;\r\n  border-bottom: 1px solid var(--border-color, rgba(255, 255, 255, 0.1));\r\n  background: var(--background-secondary, #36393f);\r\n}\r\n\r\n.category-btn {\r\n  padding: 4px 10px;\r\n  border: none;\r\n  border-radius: 12px;\r\n  background: var(--background-tertiary, #202225);\r\n  color: var(--text-normal, #dcddde);\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n  transition: all 0.2s ease;\r\n  font-size: 12px;\r\n}\r\n\r\n.category-btn:hover {\r\n  background: var(--background-modifier-hover, #40444b);\r\n}\r\n\r\n.category-btn.active {\r\n  background: var(--primary-color, #7289da);\r\n  color: white;\r\n}\r\n\r\n.stickers-grid {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 8px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));  /* 调整网格大小 */\r\n  gap: 8px;\r\n  background: var(--background-primary, #2f3136);\r\n}\r\n\r\n.sticker-item {\r\n  aspect-ratio: 1;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n  background: var(--background-secondary, #36393f);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 4px;\r\n}\r\n\r\n.sticker-item:hover {\r\n  transform: scale(1.05);\r\n  background: var(--background-modifier-hover, #40444b);\r\n}\r\n\r\n.sticker-item img {\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  object-fit: contain;\r\n}\r\n\r\n.loading {\r\n  grid-column: 1 / -1;\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: var(--text-muted, #72767d);\r\n}\r\n\r\n/* 滚动条样式 */\r\n::-webkit-scrollbar {\r\n  width: 6px;\r\n  height: 6px;\r\n}\r\n\r\n::-webkit-scrollbar-track {\r\n  background: var(--background-tertiary, #202225);\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background: var(--background-modifier-hover, #40444b);\r\n  border-radius: 3px;\r\n}\r\n\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: var(--background-modifier-active, #4f545c);\r\n}\r\n</style> "],"mappings":"AA+CA,SAASA,UAAS,QAAS,qBAAoB;AAC/C,SAASC,aAAa,EAAEC,YAAW,QAAS,gBAAe;;AAE3D;AACA,MAAMC,EAAC,GAAI,IAAIH,UAAU,CAACC,aAAa;AAEvC,eAAe;EACbG,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,KAAK;MACdC,eAAe,EAAE,UAAU;MAC3BC,UAAU,EAAE,CACV;QAAEC,EAAE,EAAE,UAAU;QAAEP,IAAI,EAAE;MAAK,CAAC,EAC9B;QAAEO,EAAE,EAAE,WAAW;QAAEP,IAAI,EAAE;MAAK,CAAC,EAC/B;QAAEO,EAAE,EAAE,OAAO;QAAEP,IAAI,EAAE;MAAK,CAAC,EAC3B;QAAEO,EAAE,EAAE,OAAO;QAAEP,IAAI,EAAE;MAAK,CAAC,EAC3B;QAAEO,EAAE,EAAE,MAAM;QAAEP,IAAI,EAAE;MAAK,EAC1B;MACDQ,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAACC,OAAM,GAAI,CAAC,CAAC,EAAE;MAChC,IAAI,CAACP,OAAM,GAAI,IAAG;MAClB,IAAI;QACF,IAAIQ,QAAO;QACX,IAAI,IAAI,CAACV,WAAW,EAAE;UACpBU,QAAO,GAAI,MAAMb,EAAE,CAACc,MAAM,CAAC,IAAI,CAACX,WAAW,EAAE;YAC3C,GAAGJ,YAAY;YACf,GAAGa,OAAO;YACVG,IAAI,EAAE;UACR,CAAC;QACH,OAAO;UACLF,QAAO,GAAI,MAAMb,EAAE,CAACgB,QAAQ,CAAC;YAC3B,GAAGjB,YAAY;YACf,GAAGa,OAAO;YACVG,IAAI,EAAE;UACR,CAAC;QACH;QACA,IAAI,CAACX,QAAO,GAAIS,QAAQ,CAACX,IAAG;MAC9B,EAAE,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK;MACjD;MACA,IAAI,CAACZ,OAAM,GAAI,KAAI;IACrB,CAAC;IAEDc,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACV,aAAa,EAAE;QACtBW,YAAY,CAAC,IAAI,CAACX,aAAa;MACjC;MACA,IAAI,CAACA,aAAY,GAAIY,UAAU,CAAC,MAAM;QACpC,IAAI,CAACV,aAAa,CAAC;MACrB,CAAC,EAAE,GAAG;IACR,CAAC;IAEDW,cAAcA,CAACC,QAAQ,EAAE;MACvB,IAAI,CAACjB,eAAc,GAAIiB,QAAQ,CAACf,EAAC;MACjC,IAAI,CAACL,WAAU,GAAIoB,QAAQ,CAACf,EAAC,KAAM,UAAS,GAAI,EAAC,GAAIe,QAAQ,CAACtB,IAAG;MACjE,IAAI,CAACU,aAAa,CAAC;IACrB,CAAC;IAEDa,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE;QACnBlB,EAAE,EAAEiB,OAAO,CAACjB,EAAE;QACdmB,GAAG,EAAEF,OAAO,CAACG,MAAM,CAACC,YAAY,CAACF,GAAG;QACpCG,KAAK,EAAEL,OAAO,CAACK;MACjB,CAAC;IACH;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpB,aAAa,CAAC;EACrB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}