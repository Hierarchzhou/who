{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils';\nexport default {\n  name: 'OnlineUsersSidebar',\n  props: {\n    // 在线用户列表\n    onlineUsers: {\n      type: Array,\n      default: () => []\n    },\n    // 当前用户名\n    currentUsername: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    // 除了当前用户之外的其他用户\n    otherUsers() {\n      return this.onlineUsers.filter(user => user.username !== this.currentUsername);\n    }\n  },\n  methods: {\n    // 获取当前用户的头像\n    getCurrentUserAvatar() {\n      const currentUser = this.onlineUsers.find(user => user.username === this.currentUsername);\n      return currentUser ? currentUser.avatar : this.getFallbackAvatarUrl();\n    },\n    // 获取备用头像URL\n    getFallbackAvatarUrl() {\n      return getFallbackAvatarUrl();\n    },\n    // 处理头像加载错误\n    handleAvatarError(event) {\n      handleAvatarError(event);\n    }\n  }\n};","map":{"version":3,"names":["getFallbackAvatarUrl","handleAvatarError","name","props","onlineUsers","type","Array","default","currentUsername","String","computed","otherUsers","filter","user","username","methods","getCurrentUserAvatar","currentUser","find","avatar","event"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\OnlineUsersSidebar.vue"],"sourcesContent":["<template>\r\n  <div class=\"online-users-sidebar\">\r\n    <!-- 频道头部 -->\r\n    <div class=\"sidebar-header\">\r\n      <h3 class=\"sidebar-title\">在线用户 ({{ onlineUsers.length }})</h3>\r\n    </div>\r\n    \r\n    <!-- 用户列表 -->\r\n    <div class=\"users-list\">\r\n      <!-- 当前用户 -->\r\n      <div class=\"user-item current-user\" v-if=\"currentUsername\">\r\n        <div class=\"user-avatar-container\">\r\n          <img \r\n            :src=\"getCurrentUserAvatar()\" \r\n            alt=\"当前用户头像\" \r\n            class=\"user-avatar\"\r\n            @error=\"handleAvatarError\"\r\n          />\r\n          <div class=\"user-status online\"></div>\r\n        </div>\r\n        <div class=\"user-info\">\r\n          <div class=\"user-name\">{{ currentUsername }} <span class=\"user-tag\">(我)</span></div>\r\n          <div class=\"user-status-text\">在线</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 分隔线 -->\r\n      <div class=\"sidebar-divider\"></div>\r\n      \r\n      <!-- 其他在线用户 -->\r\n      <div \r\n        v-for=\"user in otherUsers\" \r\n        :key=\"user.username\"\r\n        class=\"user-item\"\r\n      >\r\n        <div class=\"user-avatar-container\">\r\n          <img \r\n            :src=\"user.avatar || getFallbackAvatarUrl()\" \r\n            alt=\"用户头像\" \r\n            class=\"user-avatar\"\r\n            @error=\"handleAvatarError\"\r\n          />\r\n          <div class=\"user-status online\"></div>\r\n        </div>\r\n        <div class=\"user-info\">\r\n          <div class=\"user-name\">{{ user.username }}</div>\r\n          <div class=\"user-status-text\">在线</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 无用户时的提示 -->\r\n      <div v-if=\"otherUsers.length === 0 && !currentUsername\" class=\"no-users\">\r\n        暂无其他用户在线\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils';\r\n\r\nexport default {\r\n  name: 'OnlineUsersSidebar',\r\n  props: {\r\n    // 在线用户列表\r\n    onlineUsers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 当前用户名\r\n    currentUsername: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  computed: {\r\n    // 除了当前用户之外的其他用户\r\n    otherUsers() {\r\n      return this.onlineUsers.filter(user => user.username !== this.currentUsername);\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取当前用户的头像\r\n    getCurrentUserAvatar() {\r\n      const currentUser = this.onlineUsers.find(user => user.username === this.currentUsername);\r\n      return currentUser ? currentUser.avatar : this.getFallbackAvatarUrl();\r\n    },\r\n    \r\n    // 获取备用头像URL\r\n    getFallbackAvatarUrl() {\r\n      return getFallbackAvatarUrl();\r\n    },\r\n    \r\n    // 处理头像加载错误\r\n    handleAvatarError(event) {\r\n      handleAvatarError(event);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.online-users-sidebar {\r\n  width: 240px; /* Discord频道列表宽度 */\r\n  height: 100vh;\r\n  background-color: #2f3136; /* Discord频道列表背景色 */\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-shrink: 0;\r\n  border-right: 1px solid #202225;\r\n}\r\n\r\n.sidebar-header {\r\n  padding: 16px;\r\n  border-bottom: 1px solid rgba(79, 84, 92, 0.48);\r\n  box-shadow: 0 1px 0 rgba(4, 4, 5, 0.2);\r\n}\r\n\r\n.sidebar-title {\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.users-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 8px 0;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 16px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  margin: 0 8px;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.user-item:hover {\r\n  background-color: rgba(79, 84, 92, 0.16);\r\n}\r\n\r\n.user-item.current-user {\r\n  background-color: rgba(79, 84, 92, 0.32);\r\n}\r\n\r\n.user-avatar-container {\r\n  position: relative;\r\n  margin-right: 12px;\r\n}\r\n\r\n.user-avatar {\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n}\r\n\r\n.user-status {\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  bottom: 0;\r\n  left: 0;\r\n  border: 2px solid #2f3136;\r\n}\r\n\r\n.user-status.online {\r\n  background-color: #43b581; /* Discord在线状态颜色 */\r\n}\r\n\r\n.user-info {\r\n  flex: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.user-name {\r\n  color: #ffffff;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.user-tag {\r\n  color: #b9bbbe;\r\n  font-size: 12px;\r\n  font-weight: normal;\r\n}\r\n\r\n.user-status-text {\r\n  color: #b9bbbe;\r\n  font-size: 12px;\r\n  margin-top: 2px;\r\n}\r\n\r\n.sidebar-divider {\r\n  height: 1px;\r\n  background-color: rgba(79, 84, 92, 0.48);\r\n  margin: 8px 10px;\r\n}\r\n\r\n.no-users {\r\n  padding: 16px;\r\n  color: #b9bbbe;\r\n  font-style: italic;\r\n  text-align: center;\r\n}\r\n\r\n/* 滚动条样式 */\r\n.users-list::-webkit-scrollbar {\r\n  width: 4px;\r\n}\r\n\r\n.users-list::-webkit-scrollbar-thumb {\r\n  background-color: #202225;\r\n  border-radius: 2px;\r\n}\r\n\r\n.users-list::-webkit-scrollbar-track {\r\n  background-color: transparent;\r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .online-users-sidebar {\r\n    width: 100%;\r\n    height: auto;\r\n    max-height: 200px;\r\n    border-right: none;\r\n    border-bottom: 1px solid #202225;\r\n  }\r\n  \r\n  .users-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 8px;\r\n  }\r\n  \r\n  .user-item {\r\n    width: auto;\r\n    margin: 4px;\r\n  }\r\n}\r\n</style> "],"mappings":";;;AA2DA,SAASA,oBAAoB,EAAEC,iBAAgB,QAAS,yBAAyB;AAEjF,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE;IACL;IACAC,WAAW,EAAE;MACXC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACD;IACAC,eAAe,EAAE;MACfH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,QAAQ,EAAE;IACR;IACAC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACP,WAAW,CAACQ,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,QAAO,KAAM,IAAI,CAACN,eAAe,CAAC;IAChF;EACF,CAAC;EACDO,OAAO,EAAE;IACP;IACAC,oBAAoBA,CAAA,EAAG;MACrB,MAAMC,WAAU,GAAI,IAAI,CAACb,WAAW,CAACc,IAAI,CAACL,IAAG,IAAKA,IAAI,CAACC,QAAO,KAAM,IAAI,CAACN,eAAe,CAAC;MACzF,OAAOS,WAAU,GAAIA,WAAW,CAACE,MAAK,GAAI,IAAI,CAACnB,oBAAoB,CAAC,CAAC;IACvE,CAAC;IAED;IACAA,oBAAoBA,CAAA,EAAG;MACrB,OAAOA,oBAAoB,CAAC,CAAC;IAC/B,CAAC;IAED;IACAC,iBAAiBA,CAACmB,KAAK,EAAE;MACvBnB,iBAAiB,CAACmB,KAAK,CAAC;IAC1B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}