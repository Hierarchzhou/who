{"ast":null,"code":"import { defineComponent, computed, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport StickerMessage from './StickerMessage.vue';\nimport { formatTimestamp } from '@/utils/time';\nexport default defineComponent({\n  name: 'MessageList',\n  components: {\n    StickerMessage\n  },\n  props: {\n    messages: {\n      type: Array,\n      default: () => []\n    },\n    currentUsername: {\n      type: String,\n      default: ''\n    }\n  },\n  setup() {\n    const store = useStore();\n    const defaultAvatar = 'https://api.dicebear.com/7.x/bottts/svg';\n    const messageList = ref(null);\n\n    // 获取当前状态，使用命名空间\n    const userStatus = computed(() => store.getters['userStatus/currentStatus']);\n    const handleAvatarError = event => {\n      event.target.src = defaultAvatar;\n    };\n    const isSticker = content => {\n      return typeof content === 'string' && content.startsWith('[sticker:') && content.endsWith(']');\n    };\n    const extractStickerId = content => {\n      if (!content) return null;\n      const match = content.match(/\\[sticker:(.+?)\\]/);\n      return match ? match[1] : null;\n    };\n    const scrollToBottom = () => {\n      if (messageList.value) {\n        messageList.value.scrollTop = messageList.value.scrollHeight;\n      }\n    };\n    return {\n      defaultAvatar,\n      userStatus,\n      handleAvatarError,\n      formatTime: formatTimestamp,\n      isSticker,\n      extractStickerId,\n      scrollToBottom,\n      messageList\n    };\n  },\n  watch: {\n    messages: {\n      handler() {\n        this.scrollToBottom();\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.scrollToBottom();\n  }\n});","map":{"version":3,"names":["defineComponent","computed","ref","useStore","StickerMessage","formatTimestamp","name","components","props","messages","type","Array","default","currentUsername","String","setup","store","defaultAvatar","messageList","userStatus","getters","handleAvatarError","event","target","src","isSticker","content","startsWith","endsWith","extractStickerId","match","scrollToBottom","value","scrollTop","scrollHeight","formatTime","watch","handler","deep","mounted"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\MessageList.vue"],"sourcesContent":["<template>\r\n  <div class=\"message-list\" ref=\"messageList\">\r\n    <div v-if=\"messages.length === 0\" class=\"no-messages\">\r\n      暂无消息，开始聊天吧！\r\n    </div>\r\n    <div v-else>\r\n      <div \r\n        v-for=\"message in messages\" \r\n        :key=\"message.id || message.timestamp\" \r\n        class=\"message-item\"\r\n      >\r\n        <div class=\"message-avatar\">\r\n          <img \r\n            :src=\"message.avatar || defaultAvatar\" \r\n            :alt=\"message.username\" \r\n            class=\"avatar-img\" \r\n            @error=\"handleAvatarError\"\r\n          />\r\n          <div \r\n            v-if=\"message.sender === currentUsername\"\r\n            :class=\"['status-indicator', userStatus]\"\r\n          ></div>\r\n          <div \r\n            v-else\r\n            class=\"status-indicator online\"\r\n          ></div>\r\n        </div>\r\n        <div \r\n          class=\"message\"\r\n          :class=\"{ 'self': message.sender === currentUsername, 'other': message.sender !== currentUsername }\"\r\n        >\r\n          <div class=\"message-header\">\r\n            <span class=\"username\">{{ message.username }}</span>\r\n            <span class=\"timestamp\">{{ formatTime(message.timestamp) }}</span>\r\n          </div>\r\n          <div class=\"message-body\">\r\n            <template v-if=\"isSticker(message.content)\">\r\n              <StickerMessage :sticker-id=\"extractStickerId(message.content)\" />\r\n            </template>\r\n            <template v-else>\r\n              {{ message.content }}\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, computed, ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport StickerMessage from './StickerMessage.vue'\r\nimport { formatTimestamp } from '@/utils/time'\r\n\r\nexport default defineComponent({\r\n  name: 'MessageList',\r\n  components: {\r\n    StickerMessage\r\n  },\r\n  props: {\r\n    messages: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    currentUsername: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const defaultAvatar = 'https://api.dicebear.com/7.x/bottts/svg'\r\n    const messageList = ref(null)\r\n    \r\n    // 获取当前状态，使用命名空间\r\n    const userStatus = computed(() => store.getters['userStatus/currentStatus'])\r\n\r\n    const handleAvatarError = (event) => {\r\n      event.target.src = defaultAvatar\r\n    }\r\n\r\n    const isSticker = (content) => {\r\n      return typeof content === 'string' && content.startsWith('[sticker:') && content.endsWith(']')\r\n    }\r\n\r\n    const extractStickerId = (content) => {\r\n      if (!content) return null\r\n      const match = content.match(/\\[sticker:(.+?)\\]/)\r\n      return match ? match[1] : null\r\n    }\r\n\r\n    const scrollToBottom = () => {\r\n      if (messageList.value) {\r\n        messageList.value.scrollTop = messageList.value.scrollHeight\r\n      }\r\n    }\r\n\r\n    return {\r\n      defaultAvatar,\r\n      userStatus,\r\n      handleAvatarError,\r\n      formatTime: formatTimestamp,\r\n      isSticker,\r\n      extractStickerId,\r\n      scrollToBottom,\r\n      messageList\r\n    }\r\n  },\r\n  watch: {\r\n    messages: {\r\n      handler() {\r\n        this.scrollToBottom()\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  mounted() {\r\n    this.scrollToBottom()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.message-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: var(--chat-background); /* 使用主题变量 */\r\n  position: relative;\r\n}\r\n\r\n.message-item {\r\n  display: flex;\r\n  margin-bottom: 1.5rem;\r\n  align-items: flex-start;\r\n}\r\n\r\n.message-avatar {\r\n  margin-right: 0.75rem;\r\n  flex-shrink: 0;\r\n  position: relative;\r\n}\r\n\r\n.avatar-img {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  border: var(--avatar-border, 2px solid rgba(255, 255, 255, 0.1));\r\n  box-shadow: var(--avatar-shadow, 0 2px 4px rgba(0, 0, 0, 0.2));\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n  position: relative;\r\n  z-index: 1;\r\n  background-color: #2f3136; /* Discord avatar background color */\r\n}\r\n\r\n.avatar-img:hover {\r\n  transform: scale(1.1);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n/* 添加状态指示器样式 */\r\n.status-indicator {\r\n  position: absolute;\r\n  bottom: -2px;\r\n  right: -2px;\r\n  width: 14px;\r\n  height: 14px;\r\n  border-radius: 50%;\r\n  background-color: #747f8d;\r\n  border: 2px solid var(--chat-background);\r\n  z-index: 2;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.status-indicator.online {\r\n  background-color: #43b581;\r\n}\r\n\r\n.status-indicator.away {\r\n  background-color: #faa61a;\r\n}\r\n\r\n.status-indicator.busy {\r\n  background-color: #f04747;\r\n}\r\n\r\n.status-indicator.invisible {\r\n  background-color: #747f8d;\r\n}\r\n\r\n.message-avatar::after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: var(--online-indicator);\r\n  border-radius: 50%;\r\n  bottom: 0;\r\n  left: 0;\r\n  border: 2px solid var(--chat-background);\r\n  z-index: 2;\r\n}\r\n\r\n.message {\r\n  max-width: 80%;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 0.5rem;\r\n  position: relative;\r\n  animation: fadeIn 0.3s ease-out;\r\n  box-shadow: var(--message-shadow);\r\n  transition: transform 0.2s ease;\r\n  background-color: var(--other-message-bg); /* 使用主题变量 */\r\n  color: var(--other-message-color); /* 使用主题变量 */\r\n}\r\n\r\n.message:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.message.self {\r\n  background-color: var(--self-message-bg); /* 使用主题变量 */\r\n  color: var(--self-message-color); /* 使用主题变量 */\r\n}\r\n\r\n.message-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 0.5rem;\r\n  font-size: 0.85rem;\r\n  opacity: 0.8;\r\n}\r\n\r\n.username {\r\n  font-weight: bold;\r\n}\r\n\r\n.timestamp {\r\n  font-size: 0.75rem;\r\n  opacity: 0.7;\r\n  margin-left: 0.75rem;\r\n}\r\n\r\n.message-body {\r\n  word-break: break-word;\r\n  line-height: 1.4;\r\n}\r\n\r\n.no-messages {\r\n  text-align: center;\r\n  color: var(--timestamp-color); /* 使用主题变量 */\r\n  margin-top: 2rem;\r\n  font-style: italic;\r\n  opacity: 0.7;\r\n}\r\n\r\n/* 表情包消息样式 */\r\n.message-body :deep(.sticker-message) {\r\n  display: inline-block;\r\n  margin: 0.25rem 0;\r\n}\r\n</style> "],"mappings":"AAkDA,SAASA,eAAe,EAAEC,QAAQ,EAAEC,GAAE,QAAS,KAAI;AACnD,SAASC,QAAO,QAAS,MAAK;AAC9B,OAAOC,cAAa,MAAO,sBAAqB;AAChD,SAASC,eAAc,QAAS,cAAa;AAE7C,eAAeL,eAAe,CAAC;EAC7BM,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACDC,eAAe,EAAE;MACfH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIb,QAAQ,CAAC;IACvB,MAAMc,aAAY,GAAI,yCAAwC;IAC9D,MAAMC,WAAU,GAAIhB,GAAG,CAAC,IAAI;;IAE5B;IACA,MAAMiB,UAAS,GAAIlB,QAAQ,CAAC,MAAMe,KAAK,CAACI,OAAO,CAAC,0BAA0B,CAAC;IAE3E,MAAMC,iBAAgB,GAAKC,KAAK,IAAK;MACnCA,KAAK,CAACC,MAAM,CAACC,GAAE,GAAIP,aAAY;IACjC;IAEA,MAAMQ,SAAQ,GAAKC,OAAO,IAAK;MAC7B,OAAO,OAAOA,OAAM,KAAM,QAAO,IAAKA,OAAO,CAACC,UAAU,CAAC,WAAW,KAAKD,OAAO,CAACE,QAAQ,CAAC,GAAG;IAC/F;IAEA,MAAMC,gBAAe,GAAKH,OAAO,IAAK;MACpC,IAAI,CAACA,OAAO,EAAE,OAAO,IAAG;MACxB,MAAMI,KAAI,GAAIJ,OAAO,CAACI,KAAK,CAAC,mBAAmB;MAC/C,OAAOA,KAAI,GAAIA,KAAK,CAAC,CAAC,IAAI,IAAG;IAC/B;IAEA,MAAMC,cAAa,GAAIA,CAAA,KAAM;MAC3B,IAAIb,WAAW,CAACc,KAAK,EAAE;QACrBd,WAAW,CAACc,KAAK,CAACC,SAAQ,GAAIf,WAAW,CAACc,KAAK,CAACE,YAAW;MAC7D;IACF;IAEA,OAAO;MACLjB,aAAa;MACbE,UAAU;MACVE,iBAAiB;MACjBc,UAAU,EAAE9B,eAAe;MAC3BoB,SAAS;MACTI,gBAAgB;MAChBE,cAAc;MACdb;IACF;EACF,CAAC;EACDkB,KAAK,EAAE;IACL3B,QAAQ,EAAE;MACR4B,OAAOA,CAAA,EAAG;QACR,IAAI,CAACN,cAAc,CAAC;MACtB,CAAC;MACDO,IAAI,EAAE;IACR;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACR,cAAc,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}