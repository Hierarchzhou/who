{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"login-container\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"discord-layout\"\n};\nconst _hoisted_4 = {\n  class: \"chat-main\"\n};\nconst _hoisted_5 = {\n  class: \"chat-header\"\n};\nconst _hoisted_6 = {\n  class: \"user-controls\"\n};\nconst _hoisted_7 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LoginForm = _resolveComponent(\"LoginForm\");\n  const _component_ServerList = _resolveComponent(\"ServerList\");\n  const _component_OnlineUsersSidebar = _resolveComponent(\"OnlineUsersSidebar\");\n  const _component_ChatContainer = _resolveComponent(\"ChatContainer\");\n  const _component_UserProfileEditor = _resolveComponent(\"UserProfileEditor\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$setup.username ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_LoginForm, {\n    onLogin: $setup.setUsername\n  }, null, 8 /* PROPS */, [\"onLogin\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" 服务器列表 \"), _createVNode(_component_ServerList), _createCommentVNode(\" 在线用户列表 \"), _createVNode(_component_OnlineUsersSidebar, {\n    onlineUsers: $setup.onlineUsers,\n    currentUsername: $setup.username\n  }, null, 8 /* PROPS */, [\"onlineUsers\", \"currentUsername\"]), _createCommentVNode(\" 聊天容器 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"Vue聊天室\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_createCommentVNode(\" 用户头像和状态控制 \"), _createElementVNode(\"div\", {\n    class: \"user-profile\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.openProfileEditor && $setup.openProfileEditor(...args))\n  }, [_createElementVNode(\"img\", {\n    src: $setup.avatar || $setup.getFallbackAvatarUrl(),\n    alt: \"用户头像\",\n    class: \"user-avatar\",\n    onError: _cache[0] || (_cache[0] = (...args) => _ctx.handleAvatarError && _ctx.handleAvatarError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_7), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"user-status\", _ctx.currentUserStatus])\n  }, null, 2 /* CLASS */)])])]), _createVNode(_component_ChatContainer, {\n    currentUser: {\n      username: $setup.username,\n      avatar: $setup.avatar\n    },\n    onUpdateOnlineUsers: $setup.updateOnlineUsers\n  }, null, 8 /* PROPS */, [\"currentUser\", \"onUpdateOnlineUsers\"])]), _createCommentVNode(\" 个人资料编辑器 \"), $setup.showProfileEditor ? (_openBlock(), _createBlock(_component_UserProfileEditor, {\n    key: 0,\n    isOpen: $setup.showProfileEditor,\n    currentUserInfo: $setup.userInfo,\n    onClose: _cache[2] || (_cache[2] = $event => $setup.showProfileEditor = false),\n    onUpdateProfile: $setup.updateProfile\n  }, null, 8 /* PROPS */, [\"isOpen\", \"currentUserInfo\", \"onUpdateProfile\"])) : _createCommentVNode(\"v-if\", true)]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$setup","username","_hoisted_2","_createVNode","_component_LoginForm","onLogin","setUsername","_hoisted_3","_createCommentVNode","_component_ServerList","_component_OnlineUsersSidebar","onlineUsers","currentUsername","_createElementVNode","_hoisted_4","_hoisted_5","_hoisted_6","onClick","_cache","args","openProfileEditor","src","avatar","getFallbackAvatarUrl","alt","onError","_ctx","handleAvatarError","_hoisted_7","_normalizeClass","currentUserStatus","_component_ChatContainer","currentUser","onUpdateOnlineUsers","updateOnlineUsers","showProfileEditor","_createBlock","_component_UserProfileEditor","isOpen","currentUserInfo","userInfo","onClose","$event","onUpdateProfile","updateProfile"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div v-if=\"!username\" class=\"login-container\">\r\n      <LoginForm @login=\"setUsername\" />\r\n    </div>\r\n    <div v-else class=\"discord-layout\">\r\n      <!-- 服务器列表 -->\r\n      <ServerList />\r\n      \r\n      <!-- 在线用户列表 -->\r\n      <OnlineUsersSidebar \r\n        :onlineUsers=\"onlineUsers\" \r\n        :currentUsername=\"username\"\r\n      />\r\n      \r\n      <!-- 聊天容器 -->\r\n      <div class=\"chat-main\">\r\n        <div class=\"chat-header\">\r\n          <h2>Vue聊天室</h2>\r\n          <div class=\"user-controls\">\r\n            <!-- 用户头像和状态控制 -->\r\n            <div class=\"user-profile\" @click=\"openProfileEditor\">\r\n              <img \r\n                :src=\"avatar || getFallbackAvatarUrl()\" \r\n                alt=\"用户头像\" \r\n                class=\"user-avatar\"\r\n                @error=\"handleAvatarError\"\r\n              />\r\n              <div class=\"user-status\" :class=\"currentUserStatus\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <ChatContainer \r\n          :currentUser=\"{ username, avatar }\" \r\n          @update-online-users=\"updateOnlineUsers\"\r\n        />\r\n      </div>\r\n      \r\n      <!-- 个人资料编辑器 -->\r\n      <UserProfileEditor\r\n        v-if=\"showProfileEditor\"\r\n        :isOpen=\"showProfileEditor\"\r\n        :currentUserInfo=\"userInfo\"\r\n        @close=\"showProfileEditor = false\"\r\n        @update-profile=\"updateProfile\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LoginForm from './components/auth/LoginForm.vue'\r\nimport ChatContainer from './components/chat/ChatContainer.vue'\r\nimport ServerList from './components/chat/ServerList.vue'\r\nimport OnlineUsersSidebar from './components/chat/OnlineUsersSidebar.vue'\r\nimport UserProfileEditor from './components/profile/UserProfileEditor.vue'\r\nimport { useStore } from 'vuex'\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    LoginForm,\r\n    ChatContainer,\r\n    ServerList,\r\n    OnlineUsersSidebar,\r\n    UserProfileEditor\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n    const username = ref('')\r\n    const avatar = ref('')\r\n    const onlineUsers = ref([])\r\n    const showProfileEditor = ref(false)\r\n    const userInfo = ref({\r\n      username: '',\r\n      avatar: '',\r\n      bio: ''\r\n    })\r\n\r\n    // 从localStorage获取用户信息\r\n    onMounted(() => {\r\n      const savedUsername = localStorage.getItem('chat-username')\r\n      const savedAvatar = localStorage.getItem('chat-avatar')\r\n      const savedBio = localStorage.getItem('chat-bio')\r\n      \r\n      if (savedUsername) {\r\n        username.value = savedUsername\r\n        avatar.value = savedAvatar || ''\r\n        userInfo.value = {\r\n          username: savedUsername,\r\n          avatar: savedAvatar || '',\r\n          bio: savedBio || ''\r\n        }\r\n        \r\n        // 初始化用户状态\r\n        store.dispatch('userStatus/setStatus', 'online')\r\n      }\r\n      \r\n      // 应用保存的主题\r\n      const savedTheme = localStorage.getItem('chat-theme') || 'discord'\r\n      document.body.classList.add(`theme-${savedTheme}`)\r\n      \r\n      // 添加页面可见性变化监听\r\n      document.addEventListener('visibilitychange', handleVisibilityChange)\r\n    })\r\n    \r\n    onBeforeUnmount(() => {\r\n      // 移除页面可见性变化监听\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n      \r\n      // 用户离开时设置离线状态\r\n      if (username.value) {\r\n        store.dispatch('userStatus/setStatus', 'offline')\r\n      }\r\n    })\r\n\r\n    // 处理页面可见性变化\r\n    const handleVisibilityChange = () => {\r\n      if (!username.value) return\r\n      \r\n      if (document.hidden) {\r\n        store.dispatch('userStatus/setStatus', 'away')\r\n      } else {\r\n        store.dispatch('userStatus/setStatus', 'online')\r\n      }\r\n    }\r\n\r\n    // 设置用户名\r\n    const setUsername = (userData) => {\r\n      username.value = userData.username\r\n      avatar.value = userData.avatar || ''\r\n      userInfo.value = {\r\n        ...userInfo.value,\r\n        username: userData.username,\r\n        avatar: userData.avatar || ''\r\n      }\r\n      \r\n      // 保存用户信息到localStorage\r\n      localStorage.setItem('chat-username', username.value)\r\n      if (avatar.value) {\r\n        localStorage.setItem('chat-avatar', avatar.value)\r\n      }\r\n      \r\n      // 设置初始在线状态\r\n      store.dispatch('userStatus/setStatus', 'online')\r\n    }\r\n    \r\n    // 更新在线用户列表\r\n    const updateOnlineUsers = (users) => {\r\n      onlineUsers.value = users\r\n    }\r\n    \r\n    // 打开个人资料编辑器\r\n    const openProfileEditor = () => {\r\n      showProfileEditor.value = true\r\n    }\r\n    \r\n    // 更新个人资料\r\n    const updateProfile = (profileData) => {\r\n      userInfo.value = {\r\n        ...userInfo.value,\r\n        ...profileData\r\n      }\r\n      \r\n      // 更新localStorage\r\n      localStorage.setItem('chat-username', profileData.username)\r\n      localStorage.setItem('chat-avatar', profileData.avatar)\r\n      localStorage.setItem('chat-bio', profileData.bio)\r\n      \r\n      // 更新状态\r\n      store.dispatch('userStatus/setStatus', profileData.status)\r\n      \r\n      showProfileEditor.value = false\r\n    }\r\n    \r\n    const getFallbackAvatarUrl = () => {\r\n      return 'https://via.placeholder.com/32x32.png?text=No+Avatar'\r\n    }\r\n\r\n    return {\r\n      username,\r\n      avatar,\r\n      onlineUsers,\r\n      showProfileEditor,\r\n      userInfo,\r\n      setUsername,\r\n      updateOnlineUsers,\r\n      openProfileEditor,\r\n      updateProfile,\r\n      getFallbackAvatarUrl\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* 全局样式重置 */\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n:root {\r\n  --background-primary: #2f3136;\r\n  --background-secondary: #36393f;\r\n  --background-tertiary: #202225;\r\n  --background-floating: #18191c;\r\n  --background-modifier-hover: rgba(79, 84, 92, 0.16);\r\n  --background-modifier-active: rgba(79, 84, 92, 0.24);\r\n  --background-modifier-selected: rgba(79, 84, 92, 0.32);\r\n  --text-normal: #dcddde;\r\n  --text-muted: #72767d;\r\n  --text-link: #00b0f4;\r\n  --header-primary: #fff;\r\n  --header-secondary: #b9bbbe;\r\n  --border-color: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\nbody, html {\r\n  height: 100%;\r\n  width: 100%;\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: var(--text-normal);\r\n  background-color: var(--background-tertiary);\r\n}\r\n\r\n#app {\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.app-container {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: var(--background-tertiary);\r\n}\r\n\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  padding: 1rem;\r\n  background-color: var(--background-tertiary);\r\n}\r\n\r\n/* Discord布局 */\r\n.discord-layout {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-color: var(--background-secondary);\r\n}\r\n\r\n.chat-main {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 0; /* 防止flex子元素溢出 */\r\n  background-color: var(--background-primary);\r\n}\r\n\r\n.chat-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 16px;\r\n  background-color: var(--background-primary);\r\n  border-bottom: 1px solid var(--border-color);\r\n  height: 60px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.chat-header h2 {\r\n  color: var(--header-primary);\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.user-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.user-profile {\r\n  position: relative;\r\n  cursor: pointer;\r\n  padding: 4px;\r\n  border-radius: 50%;\r\n  transition: background-color 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-profile:hover {\r\n  background-color: var(--background-modifier-hover);\r\n}\r\n\r\n.user-avatar {\r\n  width: 36px;  /* 稍微增大头像尺寸 */\r\n  height: 36px;  /* 稍微增大头像尺寸 */\r\n  border-radius: 50%;\r\n  transition: opacity 0.2s;\r\n  border: 2px solid transparent;  /* 添加边框 */\r\n}\r\n\r\n.user-profile:hover .user-avatar {\r\n  opacity: 0.9;\r\n  border-color: var(--text-normal);  /* 悬停时显示边框 */\r\n}\r\n\r\n.user-status {\r\n  position: absolute;\r\n  bottom: 2px;\r\n  right: 2px;\r\n  width: 14px;  /* 稍微增大状态指示器 */\r\n  height: 14px;  /* 稍微增大状态指示器 */\r\n  border-radius: 50%;\r\n  border: 3px solid var(--background-primary);\r\n  background-color: var(--text-muted);\r\n  transition: transform 0.2s;  /* 添加过渡效果 */\r\n}\r\n\r\n.user-profile:hover .user-status {\r\n  transform: scale(1.1);  /* 悬停时稍微放大状态指示器 */\r\n}\r\n\r\n.user-status.online { \r\n  background-color: #43b581; \r\n}\r\n\r\n.user-status.away { \r\n  background-color: #faa61a; \r\n}\r\n\r\n.user-status.busy { \r\n  background-color: #f04747; \r\n}\r\n\r\n.user-status.invisible { \r\n  background-color: #747f8d; \r\n}\r\n\r\n/* 响应式设计 */\r\n@media (max-width: 768px) {\r\n  .discord-layout {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .chat-main {\r\n    height: 0;\r\n    min-height: 0;\r\n    flex: 1;\r\n  }\r\n  \r\n  .server-list {\r\n    width: 100% !important;\r\n    height: auto !important;\r\n    flex-direction: row !important;\r\n    padding: 8px !important;\r\n  }\r\n  \r\n  .server-items {\r\n    flex-direction: row !important;\r\n    padding: 0 8px !important;\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n    -webkit-overflow-scrolling: touch;\r\n  }\r\n  \r\n  .server-item {\r\n    margin-right: 8px !important;\r\n    margin-bottom: 0 !important;\r\n    flex-shrink: 0;\r\n  }\r\n  \r\n  .chat-header {\r\n    height: 50px;\r\n    padding: 8px 12px;\r\n  }\r\n  \r\n  .chat-header h2 {\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .user-avatar {\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n}\r\n\r\n/* 暗色主题 */\r\n.theme-dark {\r\n  --background-primary: #36393f;\r\n  --background-secondary: #2f3136;\r\n  --background-tertiary: #202225;\r\n  --background-floating: #18191c;\r\n  --text-normal: #dcddde;\r\n  --text-muted: #72767d;\r\n  --header-primary: #fff;\r\n  --header-secondary: #b9bbbe;\r\n  --border-color: rgba(255, 255, 255, 0.1);\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAD5BC,GAAA;EAE0BD,KAAK,EAAC;;;EAFhCC,GAAA;EAKgBD,KAAK,EAAC;;;EAWXA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAe;mBAnBpC;;;;;;;uBACEE,mBAAA,CA+CM,OA/CNC,UA+CM,G,CA9CQC,MAAA,CAAAC,QAAQ,I,cAApBH,mBAAA,CAEM,OAFNI,UAEM,GADJC,YAAA,CAAkCC,oBAAA;IAAtBC,OAAK,EAAEL,MAAA,CAAAM;EAAW,qC,oBAEhCR,mBAAA,CA0CM,OA1CNS,UA0CM,GAzCJC,mBAAA,WAAc,EACdL,YAAA,CAAcM,qBAAA,GAEdD,mBAAA,YAAe,EACfL,YAAA,CAGEO,6BAAA;IAFCC,WAAW,EAAEX,MAAA,CAAAW,WAAW;IACxBC,eAAe,EAAEZ,MAAA,CAAAC;+DAGpBO,mBAAA,UAAa,EACbK,mBAAA,CAqBM,OArBNC,UAqBM,GApBJD,mBAAA,CAcM,OAdNE,UAcM,G,0BAbJF,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAWM,OAXNG,UAWM,GAVJR,mBAAA,eAAkB,EAClBK,mBAAA,CAQM;IARDjB,KAAK,EAAC,cAAc;IAAEqB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEnB,MAAA,CAAAoB,iBAAA,IAAApB,MAAA,CAAAoB,iBAAA,IAAAD,IAAA,CAAiB;MACjDN,mBAAA,CAKE;IAJCQ,GAAG,EAAErB,MAAA,CAAAsB,MAAM,IAAItB,MAAA,CAAAuB,oBAAoB;IACpCC,GAAG,EAAC,MAAM;IACV5B,KAAK,EAAC,aAAa;IAClB6B,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEO,IAAA,CAAAC,iBAAA,IAAAD,IAAA,CAAAC,iBAAA,IAAAR,IAAA,CAAiB;2CA1BzCS,UAAA,GA4Bcf,mBAAA,CAA0D;IAArDjB,KAAK,EA5BxBiC,eAAA,EA4ByB,aAAa,EAASH,IAAA,CAAAI,iBAAiB;iCAKxD3B,YAAA,CAGE4B,wBAAA;IAFCC,WAAW;MAAA/B,QAAA,EAAID,MAAA,CAAAC,QAAQ;MAAAqB,MAAA,EAAEtB,MAAA,CAAAsB;IAAM;IAC/BW,mBAAmB,EAAEjC,MAAA,CAAAkC;qEAI1B1B,mBAAA,aAAgB,EAERR,MAAA,CAAAmC,iBAAiB,I,cADzBC,YAAA,CAMEC,4BAAA;IA9CRxC,GAAA;IA0CSyC,MAAM,EAAEtC,MAAA,CAAAmC,iBAAiB;IACzBI,eAAe,EAAEvC,MAAA,CAAAwC,QAAQ;IACzBC,OAAK,EAAAvB,MAAA,QAAAA,MAAA,MAAAwB,MAAA,IAAE1C,MAAA,CAAAmC,iBAAiB;IACxBQ,eAAc,EAAE3C,MAAA,CAAA4C;+EA7CzBpC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}