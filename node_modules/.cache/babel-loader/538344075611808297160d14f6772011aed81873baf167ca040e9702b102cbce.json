{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, computed } from 'vue';\nimport { getRandomDefaultAvatarUrl, getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils';\nexport default {\n  name: 'AvatarPicker',\n  props: {\n    currentAvatar: {\n      type: String,\n      default: ''\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const currentCategory = ref('preset');\n    const previewAvatar = ref('');\n    const avatarSets = ref({\n      preset: [],\n      custom: []\n    });\n\n    // 定义头像类别\n    const categories = [{\n      id: 'preset',\n      name: '预设头像',\n      icon: 'face'\n    }, {\n      id: 'custom',\n      name: '自定义',\n      icon: 'add_photo_alternate'\n    }];\n\n    // 当前显示的头像列表\n    const currentAvatars = computed(() => {\n      return avatarSets.value[currentCategory.value] || [];\n    });\n\n    // 生成预设头像\n    const generatePresetAvatars = () => {\n      avatarSets.value.preset = Array(12).fill(null).map(() => getRandomDefaultAvatarUrl());\n    };\n\n    // 选择类别\n    const selectCategory = category => {\n      currentCategory.value = category;\n      if (category === 'preset' && avatarSets.value.preset.length === 0) {\n        generatePresetAvatars();\n      }\n    };\n\n    // 选择头像\n    const selectAvatar = avatar => {\n      previewAvatar.value = avatar;\n    };\n\n    // 重新生成头像\n    const regenerateAvatars = () => {\n      if (currentCategory.value === 'preset') {\n        generatePresetAvatars();\n      }\n    };\n\n    // 处理文件上传\n    const handleFileUpload = event => {\n      const file = event.target.files[0];\n      if (!file) return;\n      if (!file.type.match('image.*')) {\n        alert('请上传图片文件');\n        return;\n      }\n      if (file.size > 2 * 1024 * 1024) {\n        alert('图片大小不能超过 2MB');\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = e => {\n        const avatar = e.target.result;\n        avatarSets.value.custom = [avatar, ...avatarSets.value.custom];\n        currentCategory.value = 'custom';\n        previewAvatar.value = avatar;\n      };\n      reader.readAsDataURL(file);\n    };\n\n    // 确认选择\n    const confirmSelection = () => {\n      if (previewAvatar.value) {\n        emit('select', previewAvatar.value);\n        close();\n      }\n    };\n\n    // 关闭选择器\n    const close = () => {\n      emit('close');\n    };\n\n    // 初始化\n    generatePresetAvatars();\n    return {\n      currentCategory,\n      previewAvatar,\n      categories,\n      currentAvatars,\n      selectCategory,\n      selectAvatar,\n      regenerateAvatars,\n      handleFileUpload,\n      confirmSelection,\n      close,\n      getFallbackAvatarUrl,\n      handleAvatarError\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","getRandomDefaultAvatarUrl","getFallbackAvatarUrl","handleAvatarError","name","props","currentAvatar","type","String","default","setup","emit","currentCategory","previewAvatar","avatarSets","preset","custom","categories","id","icon","currentAvatars","value","generatePresetAvatars","Array","fill","map","selectCategory","category","length","selectAvatar","avatar","regenerateAvatars","handleFileUpload","event","file","target","files","match","alert","size","reader","FileReader","onload","e","result","readAsDataURL","confirmSelection","close"],"sources":["C:\\Users\\Administrator\\Desktop\\discord-chat-app\\fack\\just-do-it\\src\\components\\chat\\AvatarPicker.vue"],"sourcesContent":["<template>\r\n  <div class=\"avatar-picker-overlay\" @click.self=\"close\">\r\n    <div class=\"avatar-picker-container\">\r\n      <!-- 头部 -->\r\n      <div class=\"picker-header\">\r\n        <h3>选择头像</h3>\r\n        <button class=\"close-button\" @click=\"close\">\r\n          <span class=\"material-icons\">关闭</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- 预览区域 -->\r\n      <div class=\"preview-section\">\r\n        <div class=\"preview-container\">\r\n          <img \r\n            :src=\"previewAvatar || currentAvatar || getFallbackAvatarUrl()\" \r\n            alt=\"头像预览\"\r\n            class=\"preview-image\"\r\n            @error=\"handleAvatarError\"\r\n          />\r\n        </div>\r\n        <p class=\"preview-hint\">预览效果</p>\r\n      </div>\r\n\r\n      <!-- 样式选择器 -->\r\n      <div class=\"style-selector\">\r\n        <div class=\"style-tabs\">\r\n          <button \r\n            v-for=\"category in categories\" \r\n            :key=\"category.id\"\r\n            class=\"style-tab\"\r\n            :class=\"{ active: currentCategory === category.id }\"\r\n            @click=\"selectCategory(category.id)\"\r\n          >\r\n            <span class=\"material-icons\">{{ category.icon }}</span>\r\n            {{ category.name }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 头像网格 -->\r\n      <div class=\"avatar-grid\" ref=\"gridContainer\">\r\n        <div \r\n          v-for=\"(avatar, index) in currentAvatars\" \r\n          :key=\"index\"\r\n          class=\"avatar-option\"\r\n          :class=\"{ selected: previewAvatar === avatar }\"\r\n          @click=\"selectAvatar(avatar)\"\r\n        >\r\n          <img :src=\"avatar\" alt=\"头像\" @error=\"handleAvatarError\" />\r\n          <div class=\"selection-overlay\">\r\n            <span class=\"material-icons\">选择</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 刷新按钮 - 仅在预设头像类别显示 -->\r\n        <button \r\n          v-if=\"currentCategory === 'preset'\"\r\n          class=\"action-button refresh-button\" \r\n          @click=\"regenerateAvatars\"\r\n        >\r\n          <span class=\"material-icons\">刷新</span>\r\n          换一批\r\n        </button>\r\n\r\n        <!-- 上传按钮 - 仅在自定义类别显示 -->\r\n        <label \r\n          v-if=\"currentCategory === 'custom'\"\r\n          class=\"action-button upload-button\" \r\n          for=\"avatar-upload\"\r\n        >\r\n          <span class=\"material-icons\">上传</span>\r\n          上传图片\r\n          <input\r\n            type=\"file\"\r\n            id=\"avatar-upload\"\r\n            accept=\"image/*\"\r\n            @change=\"handleFileUpload\"\r\n            style=\"display: none\"\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <!-- 底部按钮 -->\r\n      <div class=\"picker-footer\">\r\n        <button class=\"cancel-button\" @click=\"close\">取消</button>\r\n        <button \r\n          class=\"confirm-button\" \r\n          :disabled=\"!previewAvatar\"\r\n          @click=\"confirmSelection\"\r\n        >\r\n          确认选择\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed } from 'vue';\r\nimport { getRandomDefaultAvatarUrl, getFallbackAvatarUrl, handleAvatarError } from '../../utils/avatarUtils';\r\n\r\nexport default {\r\n  name: 'AvatarPicker',\r\n  props: {\r\n    currentAvatar: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  setup(props, { emit }) {\r\n    const currentCategory = ref('preset');\r\n    const previewAvatar = ref('');\r\n    const avatarSets = ref({\r\n      preset: [],\r\n      custom: []\r\n    });\r\n\r\n    // 定义头像类别\r\n    const categories = [\r\n      { id: 'preset', name: '预设头像', icon: 'face' },\r\n      { id: 'custom', name: '自定义', icon: 'add_photo_alternate' }\r\n    ];\r\n\r\n    // 当前显示的头像列表\r\n    const currentAvatars = computed(() => {\r\n      return avatarSets.value[currentCategory.value] || [];\r\n    });\r\n\r\n    // 生成预设头像\r\n    const generatePresetAvatars = () => {\r\n      avatarSets.value.preset = Array(12).fill(null).map(() => getRandomDefaultAvatarUrl());\r\n    };\r\n\r\n    // 选择类别\r\n    const selectCategory = (category) => {\r\n      currentCategory.value = category;\r\n      if (category === 'preset' && avatarSets.value.preset.length === 0) {\r\n        generatePresetAvatars();\r\n      }\r\n    };\r\n\r\n    // 选择头像\r\n    const selectAvatar = (avatar) => {\r\n      previewAvatar.value = avatar;\r\n    };\r\n\r\n    // 重新生成头像\r\n    const regenerateAvatars = () => {\r\n      if (currentCategory.value === 'preset') {\r\n        generatePresetAvatars();\r\n      }\r\n    };\r\n\r\n    // 处理文件上传\r\n    const handleFileUpload = (event) => {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      if (!file.type.match('image.*')) {\r\n        alert('请上传图片文件');\r\n        return;\r\n      }\r\n\r\n      if (file.size > 2 * 1024 * 1024) {\r\n        alert('图片大小不能超过 2MB');\r\n        return;\r\n      }\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const avatar = e.target.result;\r\n        avatarSets.value.custom = [avatar, ...avatarSets.value.custom];\r\n        currentCategory.value = 'custom';\r\n        previewAvatar.value = avatar;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    };\r\n\r\n    // 确认选择\r\n    const confirmSelection = () => {\r\n      if (previewAvatar.value) {\r\n        emit('select', previewAvatar.value);\r\n        close();\r\n      }\r\n    };\r\n\r\n    // 关闭选择器\r\n    const close = () => {\r\n      emit('close');\r\n    };\r\n\r\n    // 初始化\r\n    generatePresetAvatars();\r\n\r\n    return {\r\n      currentCategory,\r\n      previewAvatar,\r\n      categories,\r\n      currentAvatars,\r\n      selectCategory,\r\n      selectAvatar,\r\n      regenerateAvatars,\r\n      handleFileUpload,\r\n      confirmSelection,\r\n      close,\r\n      getFallbackAvatarUrl,\r\n      handleAvatarError\r\n    };\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.avatar-picker-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1100;\r\n  backdrop-filter: blur(8px);\r\n}\r\n\r\n.avatar-picker-container {\r\n  width: 90%;\r\n  max-width: 480px;\r\n  background: var(--chat-background);\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\r\n  animation: slideIn 0.3s ease;\r\n}\r\n\r\n@keyframes slideIn {\r\n  from {\r\n    transform: translateY(20px);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.picker-header {\r\n  padding: 16px 20px;\r\n  background: linear-gradient(to right, var(--primary-color), var(--secondary-color));\r\n  color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.picker-header h3 {\r\n  margin: 0;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  cursor: pointer;\r\n  padding: 4px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.close-button:hover {\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n\r\n.preview-section {\r\n  padding: 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.preview-container {\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));\r\n  padding: 3px;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.preview-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n  background: var(--chat-background);\r\n}\r\n\r\n.preview-hint {\r\n  color: var(--text-color);\r\n  font-size: 0.9rem;\r\n  opacity: 0.7;\r\n  margin: 0;\r\n}\r\n\r\n.style-selector {\r\n  padding: 16px 20px;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.style-tabs {\r\n  display: flex;\r\n  gap: 12px;\r\n}\r\n\r\n.style-tab {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  background: var(--input-background);\r\n  color: var(--text-color);\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.style-tab:hover {\r\n  background: var(--hover-color);\r\n}\r\n\r\n.style-tab.active {\r\n  background: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.style-tab .material-icons {\r\n  font-size: 18px;\r\n}\r\n\r\n.avatar-grid {\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\r\n  gap: 12px;\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.avatar-option {\r\n  width: 80px;\r\n  height: 80px;\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.avatar-option img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.selection-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity: 0;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.avatar-option:hover .selection-overlay {\r\n  opacity: 1;\r\n}\r\n\r\n.avatar-option.selected {\r\n  transform: scale(1.05);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.avatar-option.selected .selection-overlay {\r\n  opacity: 1;\r\n  background: rgba(var(--primary-color-rgb), 0.8);\r\n}\r\n\r\n.avatar-option.selected .material-icons {\r\n  animation: checkmark 0.3s ease forwards;\r\n}\r\n\r\n@keyframes checkmark {\r\n  from {\r\n    transform: scale(0);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: scale(1);\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.action-button {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 4px;\r\n  width: 80px;\r\n  height: 80px;\r\n  border: 2px dashed var(--border-color);\r\n  border-radius: 12px;\r\n  background: transparent;\r\n  color: var(--text-color);\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.action-button:hover {\r\n  background: var(--hover-color);\r\n  border-style: solid;\r\n}\r\n\r\n.action-button .material-icons {\r\n  font-size: 24px;\r\n}\r\n\r\n.picker-footer {\r\n  padding: 16px 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n  background: var(--input-background);\r\n  border-top: 1px solid var(--border-color);\r\n}\r\n\r\n.cancel-button, .confirm-button {\r\n  padding: 8px 16px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.cancel-button {\r\n  background: transparent;\r\n  border: 1px solid var(--border-color);\r\n  color: var(--text-color);\r\n}\r\n\r\n.cancel-button:hover {\r\n  background: var(--hover-color);\r\n}\r\n\r\n.confirm-button {\r\n  background: var(--primary-color);\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.confirm-button:hover:not(:disabled) {\r\n  background: var(--secondary-color);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.confirm-button:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .avatar-picker-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 0;\r\n  }\r\n\r\n  .preview-section {\r\n    padding: 16px;\r\n  }\r\n\r\n  .avatar-grid {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 8px;\r\n    padding: 16px;\r\n  }\r\n\r\n  .style-tabs {\r\n    overflow-x: auto;\r\n    padding-bottom: 8px;\r\n  }\r\n\r\n  .style-tab {\r\n    white-space: nowrap;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}